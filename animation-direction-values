From: L. David Baron <dbaron@dbaron.org>

Implement new values of animation-direction.

diff --git a/layout/style/nsAnimationManager.cpp b/layout/style/nsAnimationManager.cpp
--- a/layout/style/nsAnimationManager.cpp
+++ b/layout/style/nsAnimationManager.cpp
@@ -219,18 +219,32 @@ ElementAnimations::EnsureStyleRuleFor(Ti
       if (whichIteration == anim.mIterationCount) {
         // When the animation's iteration count is an integer (as it
         // normally is), we need to end at 100% of its last iteration
         // rather than 0% of the next one.
         --whichIteration;
       }
       double positionInIteration =
         currentIterationCount - double(whichIteration);
-      if (anim.mDirection == NS_STYLE_ANIMATION_DIRECTION_ALTERNATE &&
-          (whichIteration & 1) == 1) {
+      bool thisIterationReverse = false;
+      switch (anim.mDirection) {
+        case NS_STYLE_ANIMATION_DIRECTION_NORMAL:
+          thisIterationReverse = false;
+          break;
+        case NS_STYLE_ANIMATION_DIRECTION_REVERSE:
+          thisIterationReverse = true;
+          break;
+        case NS_STYLE_ANIMATION_DIRECTION_ALTERNATE:
+          thisIterationReverse = (whichIteration & 1) == 1;
+          break;
+        case NS_STYLE_ANIMATION_DIRECTION_ALTERNATE_REVERSE:
+          thisIterationReverse = (whichIteration & 1) == 0;
+          break;
+      }
+      if (thisIterationReverse) {
         positionInIteration = 1.0 - positionInIteration;
       }
 
       // Dispatch 'animationstart' or 'animationiteration' when needed.
       if (IsForElement() && dispatchStartOrIteration &&
           whichIteration != anim.mLastNotification) {
         // Notify 'animationstart' even if a negative delay puts us
         // past the first iteration.
diff --git a/layout/style/nsCSSKeywordList.h b/layout/style/nsCSSKeywordList.h
--- a/layout/style/nsCSSKeywordList.h
+++ b/layout/style/nsCSSKeywordList.h
@@ -153,16 +153,17 @@ CSS_KEY(-moz-zoom-out, _moz_zoom_out)
 CSS_KEY(absolute, absolute)
 CSS_KEY(active, active)
 CSS_KEY(activeborder, activeborder)
 CSS_KEY(activecaption, activecaption)
 CSS_KEY(alias, alias)
 CSS_KEY(all, all)
 CSS_KEY(all-scroll, all_scroll)
 CSS_KEY(alternate, alternate)
+CSS_KEY(alternate-reverse, alternate_reverse)
 CSS_KEY(always, always)
 CSS_KEY(appworkspace, appworkspace)
 CSS_KEY(armenian, armenian)
 CSS_KEY(auto, auto)
 CSS_KEY(avoid, avoid)
 CSS_KEY(background, background)
 CSS_KEY(backwards, backwards)
 CSS_KEY(baseline, baseline)
diff --git a/layout/style/nsCSSProps.cpp b/layout/style/nsCSSProps.cpp
--- a/layout/style/nsCSSProps.cpp
+++ b/layout/style/nsCSSProps.cpp
@@ -436,17 +436,19 @@ nsCSSProps::OtherNameFor(nsCSSProperty a
   }
   return eCSSProperty_UNKNOWN;
 }
 
 /***************************************************************************/
 
 const PRInt32 nsCSSProps::kAnimationDirectionKTable[] = {
   eCSSKeyword_normal, NS_STYLE_ANIMATION_DIRECTION_NORMAL,
+  eCSSKeyword_reverse, NS_STYLE_ANIMATION_DIRECTION_REVERSE,
   eCSSKeyword_alternate, NS_STYLE_ANIMATION_DIRECTION_ALTERNATE,
+  eCSSKeyword_alternate_reverse, NS_STYLE_ANIMATION_DIRECTION_ALTERNATE_REVERSE,
   eCSSKeyword_UNKNOWN,-1
 };
 
 const PRInt32 nsCSSProps::kAnimationFillModeKTable[] = {
   eCSSKeyword_none, NS_STYLE_ANIMATION_FILL_MODE_NONE,
   eCSSKeyword_forwards, NS_STYLE_ANIMATION_FILL_MODE_FORWARDS,
   eCSSKeyword_backwards, NS_STYLE_ANIMATION_FILL_MODE_BACKWARDS,
   eCSSKeyword_both, NS_STYLE_ANIMATION_FILL_MODE_BOTH,

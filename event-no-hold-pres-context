Make events not hold on to their pres context.  b=385376

diff --git a/content/events/src/nsDOMEvent.cpp b/content/events/src/nsDOMEvent.cpp
--- a/content/events/src/nsDOMEvent.cpp
+++ b/content/events/src/nsDOMEvent.cpp
@@ -84,8 +84,6 @@ static char *sPopupAllowedEvents;
 
 nsDOMEvent::nsDOMEvent(nsPresContext* aPresContext, nsEvent* aEvent)
 {
-  mPresContext = aPresContext;
-
   if (aEvent) {
     mEvent = aEvent;
     mEventIsInternal = PR_FALSE;
@@ -122,7 +120,7 @@ nsDOMEvent::nsDOMEvent(nsPresContext* aP
 
   // Get the explicit original target (if it's anonymous make it null)
   {
-    mExplicitOriginalTarget = GetTargetFromFrame();
+    mExplicitOriginalTarget = GetTargetFromFrame(aPresContext);
     mTmpRealOriginalTarget = mExplicitOriginalTarget;
     nsCOMPtr<nsIContent> content = do_QueryInterface(mExplicitOriginalTarget);
     if (content) {
@@ -175,7 +173,6 @@ NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(ns
         break;
     }
   }
-  NS_IMPL_CYCLE_COLLECTION_UNLINK_NSCOMPTR(mPresContext);
   NS_IMPL_CYCLE_COLLECTION_UNLINK_NSCOMPTR(mTmpRealOriginalTarget)
   NS_IMPL_CYCLE_COLLECTION_UNLINK_NSCOMPTR(mExplicitOriginalTarget)
 NS_IMPL_CYCLE_COLLECTION_UNLINK_END
@@ -203,7 +200,6 @@ NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN(
         break;
     }
   }
-  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mPresContext)
   NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mTmpRealOriginalTarget)
   NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mExplicitOriginalTarget)
 NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END
@@ -257,18 +253,16 @@ nsDOMEvent::GetCurrentTarget(nsIDOMEvent
 // Get the actual event target node (may have been retargeted for mouse events)
 //
 already_AddRefed<nsIDOMEventTarget>
-nsDOMEvent::GetTargetFromFrame()
-{
-  if (!mPresContext) { return nsnull; }
-
+nsDOMEvent::GetTargetFromFrame(nsPresContext* aPresContext)
+{
   // Get the target frame (have to get the ESM first)
   nsIFrame* targetFrame = nsnull;
-  mPresContext->EventStateManager()->GetEventTarget(&targetFrame);
+  aPresContext->EventStateManager()->GetEventTarget(&targetFrame);
   if (!targetFrame) { return nsnull; }
 
   // get the real content
   nsCOMPtr<nsIContent> realEventContent;
-  targetFrame->GetContentForEvent(mPresContext, mEvent, getter_AddRefs(realEventContent));
+  targetFrame->GetContentForEvent(aPresContext, mEvent, getter_AddRefs(realEventContent));
   if (!realEventContent) { return nsnull; }
 
   // Finally, we have the real content.  QI it and return.
@@ -904,7 +898,6 @@ NS_METHOD nsDOMEvent::DuplicatePrivateDa
   newEvent->userType               = mEvent->userType;
 
   mEvent = newEvent;
-  mPresContext = nsnull;
   mEventIsInternal = PR_TRUE;
 
   return NS_OK;
diff --git a/content/events/src/nsDOMEvent.h b/content/events/src/nsDOMEvent.h
--- a/content/events/src/nsDOMEvent.h
+++ b/content/events/src/nsDOMEvent.h
@@ -177,10 +177,11 @@ protected:
   // Internal helper functions
   nsresult SetEventType(const nsAString& aEventTypeArg);
   static const char* GetEventName(PRUint32 aEventType);
-  already_AddRefed<nsIDOMEventTarget> GetTargetFromFrame();
+
+  already_AddRefed<nsIDOMEventTarget>
+    GetTargetFromFrame(nsPresContext* aPresContext);
 
   nsEvent*                    mEvent;
-  nsCOMPtr<nsPresContext>     mPresContext;
   nsCOMPtr<nsIDOMEventTarget> mTmpRealOriginalTarget;
   nsCOMPtr<nsIDOMEventTarget> mExplicitOriginalTarget;
   PRPackedBool                mEventIsInternal;

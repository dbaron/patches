Try other HTTP ports if the first one is busy.

diff --git a/layout/tools/reftest/reftest.js b/layout/tools/reftest/reftest.js
--- a/layout/tools/reftest/reftest.js
+++ b/layout/tools/reftest/reftest.js
@@ -106,17 +106,18 @@ var gClearingForAssertionCheck = false;
 
 const EXPECTED_PASS = 0;
 const EXPECTED_FAIL = 1;
 const EXPECTED_RANDOM = 2;
 const EXPECTED_DEATH = 3;  // test must be skipped to avoid e.g. crash/hang
 const EXPECTED_LOAD = 4; // test without a reference (just test that it does
                          // not assert, crash, hang, or leak)
 
-const HTTP_SERVER_PORT = 4444;
+var HTTP_SERVER_PORT = 4444;
+const HTTP_SERVER_PORTS_TO_TRY = 50;
 
 var gRecycledCanvases = new Array();
 
 function AllocateCanvas()
 {
     var windowElem = document.documentElement;
 
     if (gRecycledCanvases.length > 0)
@@ -148,22 +149,38 @@ function OnRefTestLoad()
     }
 
     var windowElem = document.documentElement;
 
     gIOService = CC[IO_SERVICE_CONTRACTID].getService(CI.nsIIOService);
     gDebug = CC[DEBUG_CONTRACTID].getService(CI.nsIDebug2);
 
     try {
+        if (gServer) {
+            gServer.registerContentType("sjs", "sjs");
+            // We want to try different ports in case the port we want
+            // is being used.
+            var tries = HTTP_SERVER_PORTS_TO_TRY;
+            var succeeded = false;
+            do {
+                try {
+                    gServer.start(HTTP_SERVER_PORT);
+                    succeeded = true;
+                } catch (ex) {
+                    gServer.stop();
+                    ++HTTP_SERVER_PORT;
+                    if (--tries == 0) {
+                        throw ex;
+                    }
+                }
+            } while (!succeeded);
+        }
+        // Need to read the manifest once we have the final HTTP_SERVER_PORT.
         ReadTopManifest(window.arguments[0]);
         BuildUseCounts();
-        if (gServer) {
-            gServer.registerContentType("sjs", "sjs");
-            gServer.start(HTTP_SERVER_PORT);
-        }
         gTotalTests = gURLs.length;
         gURICanvases = {};
         StartCurrentTest();
     } catch (ex) {
         //gBrowser.loadURI('data:text/plain,' + ex);
         ++gTestResults.Exception;
         dump("REFTEST TEST-UNEXPECTED-FAIL | | EXCEPTION: " + ex + "\n");
         DoneTests();

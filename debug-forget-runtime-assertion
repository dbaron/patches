Debug assertion about forgetting a cycle-collection runtime that's not registered.

diff --git a/js/src/xpconnect/src/nsXPConnect.cpp b/js/src/xpconnect/src/nsXPConnect.cpp
--- a/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/js/src/xpconnect/src/nsXPConnect.cpp
@@ -76,6 +76,7 @@ nsXPConnect::nsXPConnect()
         mObjRefcounts(nsnull),
         mCycleCollectionContext(nsnull)
 {
+printf("nsXPConnect[%p]::nsXPConnect()\n", this);
     // Ignore the result. If the runtime service is not ready to rumble
     // then we'll set this up later as needed.
     CreateRuntime();
@@ -217,6 +218,7 @@ struct JSObjectRefcounts
 
 nsXPConnect::~nsXPConnect()
 {
+printf("nsXPConnect[%p]::~nsXPConnect()\n", this);
     // XXX It would be nice if we could get away with doing a GC here and also
     // calling Release on the natives no longer reachable via XPConnect. As
     // noted all over the place, this makes bad things happen since shutdown is

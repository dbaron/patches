Make top and bottom values of vertical-align align the subtree rather than the element itself.  b=118501

diff --git a/layout/generic/nsLineLayout.cpp b/layout/generic/nsLineLayout.cpp
--- a/layout/generic/nsLineLayout.cpp
+++ b/layout/generic/nsLineLayout.cpp
@@ -1532,8 +1532,7 @@ nsLineLayout::PlaceTopBottomFrames(PerSp
     switch (pfd->mVerticalAlign) {
       case VALIGN_TOP:
         if (span) {
-          pfd->mBounds.y = -aDistanceFromTop - pfd->mBorderPadding.top +
-            span->mTopLeading;
+          pfd->mBounds.y = -aDistanceFromTop - span->mMinY;
         }
         else {
           pfd->mBounds.y = -aDistanceFromTop + pfd->mMargin.top;
@@ -1551,9 +1550,7 @@ nsLineLayout::PlaceTopBottomFrames(PerSp
       case VALIGN_BOTTOM:
         if (span) {
           // Compute bottom leading
-          pfd->mBounds.y = -aDistanceFromTop + aLineHeight -
-            pfd->mBounds.height + pfd->mBorderPadding.bottom -
-            span->mBottomLeading;
+          pfd->mBounds.y = -aDistanceFromTop + aLineHeight - span->mMaxY;
         }
         else {
           pfd->mBounds.y = -aDistanceFromTop + aLineHeight -
@@ -1869,18 +1866,34 @@ nsLineLayout::VerticalAlignFrames(PerSpa
             break;
 
           case NS_STYLE_VERTICAL_ALIGN_TOP:
+          {
             pfd->mVerticalAlign = VALIGN_TOP;
-            if (logicalHeight > maxTopBoxHeight) {
-              maxTopBoxHeight = logicalHeight;
+            nscoord subtreeHeight = logicalHeight;
+            if (frameSpan) {
+              subtreeHeight = frameSpan->mMaxY - frameSpan->mMinY;
+              NS_ASSERTION(subtreeHeight >= logicalHeight,
+                           "unexpected subtree height");
+            }
+            if (subtreeHeight > maxTopBoxHeight) {
+              maxTopBoxHeight = subtreeHeight;
             }
             break;
+          }
 
           case NS_STYLE_VERTICAL_ALIGN_BOTTOM:
+          {
             pfd->mVerticalAlign = VALIGN_BOTTOM;
-            if (logicalHeight > maxBottomBoxHeight) {
-              maxBottomBoxHeight = logicalHeight;
+            nscoord subtreeHeight = logicalHeight;
+            if (frameSpan) {
+              subtreeHeight = frameSpan->mMaxY - frameSpan->mMinY;
+              NS_ASSERTION(subtreeHeight >= logicalHeight,
+                           "unexpected subtree height");
+            }
+            if (subtreeHeight > maxBottomBoxHeight) {
+              maxBottomBoxHeight = subtreeHeight;
             }
             break;
+          }
 
           case NS_STYLE_VERTICAL_ALIGN_MIDDLE:
             // Align the midpoint of the frame with 1/2 the parents

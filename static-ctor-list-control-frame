Fix static constructor in nsListControlFrame.

diff --git a/layout/build/nsLayoutStatics.cpp b/layout/build/nsLayoutStatics.cpp
--- a/layout/build/nsLayoutStatics.cpp
+++ b/layout/build/nsLayoutStatics.cpp
@@ -73,6 +73,7 @@
 #include "nsStackLayout.h"
 #include "nsStyleSet.h"
 #include "nsTextControlFrame.h"
+#include "nsListControlFrame.h"
 #include "nsXBLWindowKeyHandler.h"
 #include "txMozillaXSLTProcessor.h"
 #include "nsDOMStorage.h"
@@ -293,6 +294,7 @@ nsLayoutStatics::Shutdown()
   nsGlobalWindow::ShutDown();
   nsDOMClassInfo::ShutDown();
   nsTextControlFrame::ShutDown();
+  nsListControlFrame::Shutdown();
   nsXBLWindowKeyHandler::ShutDown();
   nsAutoCopyListener::Shutdown();
 
diff --git a/layout/forms/nsListControlFrame.cpp b/layout/forms/nsListControlFrame.cpp
--- a/layout/forms/nsListControlFrame.cpp
+++ b/layout/forms/nsListControlFrame.cpp
@@ -97,6 +97,7 @@ const PRInt32 kNothingSelected          
 
 
 nsListControlFrame * nsListControlFrame::mFocused = nsnull;
+static nsString *gIncrementalString = nsnull;
 
 // Using for incremental typing navigation
 #define INCREMENTAL_SEARCH_KEYPRESS_TIME 1000
@@ -187,6 +188,12 @@ nsListControlFrame::~nsListControlFrame(
 nsListControlFrame::~nsListControlFrame()
 {
   mComboboxFrame = nsnull;
+}
+
+/* static */ void
+nsListControlFrame::Shutdown()
+{
+  delete gIncrementalString;
 }
 
 // for Bug 47302 (remove this comment later)
@@ -2467,8 +2474,10 @@ nsAString&
 nsAString& 
 nsListControlFrame::GetIncrementalString()
 { 
-  static nsString incrementalString;
-  return incrementalString; 
+  if (!gIncrementalString) {
+    gIncrementalString = new nsString;
+  }
+  return *gIncrementalString; 
 }
 
 void
diff --git a/layout/forms/nsListControlFrame.h b/layout/forms/nsListControlFrame.h
--- a/layout/forms/nsListControlFrame.h
+++ b/layout/forms/nsListControlFrame.h
@@ -79,6 +79,8 @@ class nsListControlFrame : public nsHTML
 {
 public:
   friend nsIFrame* NS_NewListControlFrame(nsIPresShell* aPresShell, nsStyleContext* aContext);
+
+  static void Shutdown();
 
    // nsISupports
   NS_IMETHOD QueryInterface(const nsIID& aIID, void** aInstancePtr);

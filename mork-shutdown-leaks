From: L. David Baron <dbaron@dbaron.org>

Add comments about various shutdown leaks.

diff --git a/db/mork/src/morkFactory.cpp b/db/mork/src/morkFactory.cpp
--- a/db/mork/src/morkFactory.cpp
+++ b/db/mork/src/morkFactory.cpp
@@ -101,16 +101,17 @@ morkFactory::~morkFactory() /*i*/ // ass
   MORK_ASSERT(mFactory_Env.IsShutNode());
   MORK_ASSERT(this->IsShutNode());
 }
 
 /*public non-poly*/
 morkFactory::morkFactory() // uses orkinHeap
 : morkObject(morkUsage::kGlobal, (nsIMdbHeap*) 0, morkColor_kNone)
 , mFactory_Env(morkUsage::kMember, (nsIMdbHeap*) 0, this,
+  // XXXldb Nothing ever frees this new orkinHeap
   new orkinHeap())
 , mFactory_Heap()
 {
   if ( mFactory_Env.Good() )
   {
     mNode_Derived = morkDerived_kFactory;
     mNode_Refs += morkFactory_kWeakRefCountBonus;
   }
@@ -142,16 +143,17 @@ morkFactory::morkFactory(morkEnv* ev, /*
     mNode_Refs += morkFactory_kWeakRefCountBonus;
   }
 }
 
 NS_IMPL_ISUPPORTS_INHERITED1(morkFactory, morkObject, nsIMdbFactory)
 
 extern "C" nsIMdbFactory* MakeMdbFactory() 
 {
+  // XXXldb Nothing ever frees this new orkinHeap
   return new morkFactory(new orkinHeap());
 }
 
 
 /*public non-poly*/ void
 morkFactory::CloseFactory(morkEnv* ev) /*i*/ // called by CloseMorkNode();
 {
   if ( this )
@@ -265,16 +267,17 @@ morkFactory::CreateNewFile(nsIMdbEnv* me
 NS_IMETHODIMP
 morkFactory::MakeEnv(nsIMdbHeap* ioHeap, nsIMdbEnv** acqEnv)
 // ioHeap can be nil, causing a MakeHeap() style heap instance to be used
 {
   mdb_err outErr = 0;
   nsIMdbEnv* outEnv = 0;
   mork_bool ownsHeap = (ioHeap == 0);
   if ( !ioHeap )
+    // XXXldb Nothing ever frees this new orkinHeap
     ioHeap = new orkinHeap();
 
   if ( acqEnv && ioHeap )
   {
     morkEnv* fenv = this->GetInternalFactoryEnv(&outErr);
     if ( fenv )
     {
       morkEnv* newEnv = new(*ioHeap, fenv)
@@ -305,16 +308,17 @@ morkFactory::MakeEnv(nsIMdbHeap* ioHeap,
 NS_IMETHODIMP
 morkFactory::MakeHeap(nsIMdbEnv* mev, nsIMdbHeap** acqHeap)
 {
   mdb_err outErr = 0;
   nsIMdbHeap* outHeap = 0;
   morkEnv* ev = morkEnv::FromMdbEnv(mev);
   if ( ev )
   {
+    // XXXldb Nothing ever frees this new orkinHeap
     outHeap = new orkinHeap();
     if ( !outHeap )
       ev->OutOfMemoryError();
   }
   MORK_ASSERT(acqHeap);
   if ( acqHeap )
     *acqHeap = outHeap;
   return outErr;

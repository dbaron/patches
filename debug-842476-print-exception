From: L. David Baron <dbaron@dbaron.org>

Bug 842476 debugging:  Print out the exception.

TODO: We should probably land a patch to properly report exceptions
here.  We probably want to report any exception other than those that
are integers in 0x80000000 <= exception <= 0xffffffff, since those are
failure nsresults.

diff --git a/js/xpconnect/src/XPCWrappedJSClass.cpp b/js/xpconnect/src/XPCWrappedJSClass.cpp
--- a/js/xpconnect/src/XPCWrappedJSClass.cpp
+++ b/js/xpconnect/src/XPCWrappedJSClass.cpp
@@ -9,16 +9,17 @@
 
 #include "xpcprivate.h"
 #include "nsArrayEnumerator.h"
 #include "nsWrapperCache.h"
 #include "XPCWrapper.h"
 #include "AccessCheck.h"
 #include "nsJSUtils.h"
 #include "mozilla/Attributes.h"
+#include "nsPrintfCString.h"
 
 #include "jsapi.h"
 
 using namespace xpc;
 NS_IMPL_THREADSAFE_ISUPPORTS1(nsXPCWrappedJSClass, nsIXPCWrappedJSClass)
 
 // the value of this variable is never used - we use its address as a sentinel
 static uint32_t zero_methods_descriptor;
@@ -1093,16 +1094,21 @@ nsXPCWrappedJSClass::CheckForException(X
                     }
                     if (nullptr != scriptError)
                         consoleService->LogMessage(scriptError);
                 }
             }
             // Whether or not it passes the 'reportable' test, it might
             // still be an error and we have to do the right thing here...
             if (NS_FAILED(e_result)) {
+                {
+                    nsXPIDLCString str;
+                    xpc_exception->ToString(getter_Copies(str));
+                    NS_WARNING(nsPrintfCString("STORING THE FOLLOWING nsIXPCException:\n======\n%s\n======\n", str.get()).get());
+                }
                 XPCJSRuntime::Get()->SetPendingException(xpc_exception);
                 return e_result;
             }
         }
     } else {
         // see if JS code signaled failure result without throwing exception
         if (NS_FAILED(pending_result)) {
             return pending_result;

From: L. David Baron <dbaron@dbaron.org>

We might need to collect pushed floats from the overflow out-of-flows list too, just like normal floats.  (Bug 586806)

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -6755,20 +6755,28 @@ void nsBlockFrame::CollectFloats(nsIFram
       nsIFrame *outOfFlowFrame =
         aFrame->GetType() == nsGkAtoms::placeholderFrame ?
           nsLayoutUtils::GetFloatFromPlaceholder(aFrame) : nsnull;
       if (outOfFlowFrame) {
         if (outOfFlowFrame->GetStateBits() & NS_FRAME_IS_PUSHED_FLOAT) {
           if (outOfFlowFrame->GetParent() == this) {
             nsFrameList* list = GetPushedFloats();
             if (!list || !list->RemoveFrameIfPresent(outOfFlowFrame)) {
-              mFloats.RemoveFrame(outOfFlowFrame);
+              if (aFromOverflow) {
+                nsAutoOOFFrameList oofs(this);
+                oofs.mList.RemoveFrame(outOfFlowFrame);
+              } else {
+                mFloats.RemoveFrame(outOfFlowFrame);
+              }
             }
             aList.AppendFrame(nsnull, outOfFlowFrame);
           }
+          // FIXME: By not pulling floats whose parent is one of our
+          // later siblings, are we risking the pushed floats getting
+          // out-of-order?
         } else {
           // Make sure that its parent is us. Otherwise we don't want
           // to mess around with it because it belongs to someone
           // else. I think this could happen if the overflow lines
           // contain a block descendant which owns its own floats.
           NS_ASSERTION(outOfFlowFrame->GetParent() == this,
                        "Out of flow frame doesn't have the expected parent");
           if (aFromOverflow) {

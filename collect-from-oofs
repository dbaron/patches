From: L. David Baron <dbaron@dbaron.org>

We might need to collect pushed floats from the overflow out-of-flows list too, just like normal floats.  (Bug 586806)

diff --git a/layout/generic/crashtests/586806-1.html b/layout/generic/crashtests/586806-1.html
new file mode 100644
--- /dev/null
+++ b/layout/generic/crashtests/586806-1.html
@@ -0,0 +1,29 @@
+<html class="reftest-wait">
+<head>
+<script>
+function doe2(i) {
+document.getElementById('b').style.position = 'static';
+document.getElementById('a').setAttribute('style', 'position: absolute; -moz-column-count: 2;');
+document.documentElement.removeAttribute("class");
+}
+setTimeout(doe2,100);
+
+</script>
+</head>
+<style>body * {border: 1px solid black;}</style>
+<body>
+<div style="width: 500px;border: 1px solid black;">
+<div style="display: inline-block; width: 100px; height: 100px;"></div>
+<span style="position: absolute;"></span>
+mmmmmmmmmmmmmmmmmmmmmmm
+
+<span id="a">mmmmmmmmmmmmmmmmmmmm
+
+<div id="b" style="display: inline-block; width: 240px; height: 100px; position: absolute;"></div>
+m mm mm mm mm mm mm mm mm m
+<span style="float: left;">m</span>
+</span>
+</div>
+</body>
+
+</html>
diff --git a/layout/generic/crashtests/586806-3.html b/layout/generic/crashtests/586806-3.html
new file mode 100644
--- /dev/null
+++ b/layout/generic/crashtests/586806-3.html
@@ -0,0 +1,9 @@
+<body style="font-size: 16px">
+<div style="width: 400px;">
+mmmmmmmmmmmmmmmmmmmmmmm
+<span style="position: absolute; -moz-column-count: 2">mmmmmmmmmmmmmmmmmmmm
+<div style="display: inline-block; width: 240px; height: 100px"></div>
+m mm mm mm mm mm mm mm mm m
+<div style="float: left;">m</div>
+</span>
+</div>
diff --git a/layout/generic/crashtests/crashtests.list b/layout/generic/crashtests/crashtests.list
--- a/layout/generic/crashtests/crashtests.list
+++ b/layout/generic/crashtests/crashtests.list
@@ -324,9 +324,11 @@ load 547338.xul
 load 547843-1.xhtml
 load 551635-1.html
 load 564368-1.xhtml
 load 564968.xhtml
 load 570160.html
 load 571618-1.svg
 load 574958.xhtml
 load 585598-1.xhtml
+load 586806-1.html
 load 586806-2.html
+load 586806-3.html
diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -6686,20 +6686,28 @@ void nsBlockFrame::CollectFloats(nsIFram
       nsIFrame *outOfFlowFrame =
         aFrame->GetType() == nsGkAtoms::placeholderFrame ?
           nsLayoutUtils::GetFloatFromPlaceholder(aFrame) : nsnull;
       if (outOfFlowFrame) {
         if (outOfFlowFrame->GetStateBits() & NS_FRAME_IS_PUSHED_FLOAT) {
           if (outOfFlowFrame->GetParent() == this) {
             nsFrameList* list = GetPushedFloats();
             if (!list || !list->RemoveFrameIfPresent(outOfFlowFrame)) {
-              mFloats.RemoveFrame(outOfFlowFrame);
+              if (aFromOverflow) {
+                nsAutoOOFFrameList oofs(this);
+                oofs.mList.RemoveFrame(outOfFlowFrame);
+              } else {
+                mFloats.RemoveFrame(outOfFlowFrame);
+              }
             }
             aList.AppendFrame(nsnull, outOfFlowFrame);
           }
+          // FIXME: By not pulling floats whose parent is one of our
+          // later siblings, are we risking the pushed floats getting
+          // out-of-order?
         } else {
           // Make sure that its parent is us. Otherwise we don't want
           // to mess around with it because it belongs to someone
           // else. I think this could happen if the overflow lines
           // contain a block descendant which owns its own floats.
           NS_ASSERTION(outOfFlowFrame->GetParent() == this,
                        "Out of flow frame doesn't have the expected parent");
           if (aFromOverflow) {

From: L. David Baron <dbaron@dbaron.org>

Bug 977991 patch 6 - Use the faster eRestyle_StyleAttribute path for style attribute changes.  r=birtles

diff --git a/content/base/src/Element.cpp b/content/base/src/Element.cpp
--- a/content/base/src/Element.cpp
+++ b/content/base/src/Element.cpp
@@ -1571,17 +1571,18 @@ Element::SetSMILOverrideStyleRule(css::S
   if (aNotify) {
     nsIDocument* doc = GetCurrentDoc();
     // Only need to request a restyle if we're in a document.  (We might not
     // be in a document, if we're clearing animation effects on a target node
     // that's been detached since the previous animation sample.)
     if (doc) {
       nsCOMPtr<nsIPresShell> shell = doc->GetShell();
       if (shell) {
-        shell->RestyleForAnimation(this, eRestyle_Self);
+        shell->RestyleForAnimation(this,
+          eRestyle_StyleAttribute | eRestyle_ChangeAnimationPhase);
       }
     }
   }
 
   return NS_OK;
 }
 
 bool
diff --git a/layout/style/nsHTMLCSSStyleSheet.cpp b/layout/style/nsHTMLCSSStyleSheet.cpp
--- a/layout/style/nsHTMLCSSStyleSheet.cpp
+++ b/layout/style/nsHTMLCSSStyleSheet.cpp
@@ -73,17 +73,17 @@ nsHTMLCSSStyleSheet::ElementRulesMatchin
   rule = aElement->GetSMILOverrideStyleRule();
   if (rule) {
     if (aPresContext->IsProcessingRestyles() &&
         !aPresContext->IsProcessingAnimationStyleChange()) {
       // Non-animation restyle -- don't process SMIL override style, because we
       // don't want SMIL animation to trigger new CSS transitions. Instead,
       // request an Animation restyle, so we still get noticed.
       aPresContext->PresShell()->RestyleForAnimation(aElement,
-                                                     eRestyle_Self);
+        eRestyle_StyleAttribute | eRestyle_ChangeAnimationPhase);
     } else {
       // Animation restyle (or non-restyle traversal of rules)
       // Now we can walk SMIL overrride style, without triggering transitions.
       rule->RuleMatched();
       aRuleWalker->Forward(rule);
     }
   }
 }
@@ -138,17 +138,17 @@ nsHTMLCSSStyleSheet::HasDocumentStateDep
 
 // Test if style is dependent on attribute
 /* virtual */ nsRestyleHint
 nsHTMLCSSStyleSheet::HasAttributeDependentStyle(AttributeRuleProcessorData* aData)
 {
   // Perhaps should check that it's XUL, SVG, (or HTML) namespace, but
   // it doesn't really matter.
   if (aData->mAttrHasChanged && aData->mAttribute == nsGkAtoms::style) {
-    return eRestyle_Self;
+    return eRestyle_StyleAttribute | eRestyle_ChangeAnimationPhase;
   }
 
   return nsRestyleHint(0);
 }
 
 /* virtual */ bool
 nsHTMLCSSStyleSheet::MediumFeaturesChanged(nsPresContext* aPresContext)
 {

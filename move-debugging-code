From: L. David Baron <dbaron@dbaron.org>

Move temporary debugging code for bug 538462 to where it's more likely to work when we leak the world.

diff --git a/js/src/xpconnect/src/nsXPConnect.cpp b/js/src/xpconnect/src/nsXPConnect.cpp
--- a/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/js/src/xpconnect/src/nsXPConnect.cpp
@@ -148,24 +148,16 @@ nsXPConnect::~nsXPConnect()
         JS_BeginRequest(cx);
 
         // XXX Call even if |mRuntime| null?
         XPCWrappedNativeScope::SystemIsBeingShutDown(cx);
 
         mRuntime->SystemIsBeingShutDown(cx);
 
         JS_EndRequest(cx);
-
-        // Temporary code to debug a persistent leak on tinderbox
-        // unit tests (bug 538462).
-#if defined(DEBUG_cltbld) && defined(XP_MACOSX)
-        printf("Dump of entire JS heap at shutdown:\n");
-        JS_DumpHeap(cx, stdout, nsnull, 0, nsnull, size_t(-1), nsnull);
-#endif
-
         JS_DestroyContext(cx);
     }
 
     NS_IF_RELEASE(mDefaultSecurityManager);
 
     gScriptSecurityManager = nsnull;
 
     // shutdown the logging system
@@ -231,16 +223,29 @@ nsXPConnect::ReleaseXPConnectSingleton()
 #ifdef XPC_TOOLS_SUPPORT
         if(xpc->mProfiler)
         {
             xpc->mProfiler->Stop();
             xpc->mProfiler->WriteResults(xpc->mProfilerOutputFile);
         }
 #endif
 
+        // Temporary code to debug a persistent leak on tinderbox
+        // unit tests (bug 538462).
+#if defined(DEBUG_cltbld) && defined(XP_MACOSX)
+        {
+            XPCCallContext ccx(NATIVE_CALLER);
+            if(ccx.IsValid())
+            {
+                printf("Dump of entire JS heap at shutdown:\n");
+                JS_DumpHeap(ccx, stdout, nsnull, 0, nsnull, size_t(-1), nsnull);
+            }
+        }
+#endif
+
 #ifdef DEBUG
         // force a dump of the JavaScript gc heap if JS is still alive
         // if requested through XPC_SHUTDOWN_HEAP_DUMP environment variable
         {
             // autoscope
             XPCCallContext ccx(NATIVE_CALLER);
             if(ccx.IsValid())
             {

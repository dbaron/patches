From: L. David Baron <dbaron@dbaron.org>

Bug 976777:  Truncate long source lines in script errors before sending them to the parent process.  r=bent

This fixes an out-of-memory foreground-tab crash that I could reliably
reproduce on a 256MB Firefox OS phone, and I think also significantly
reduces the number of background tabs I'm seeing killed due to low
memory.

diff --git a/dom/ipc/ContentChild.cpp b/dom/ipc/ContentChild.cpp
--- a/dom/ipc/ContentChild.cpp
+++ b/dom/ipc/ContentChild.cpp
@@ -263,16 +263,26 @@ ConsoleListener::Observe(nsIConsoleMessa
         uint32_t lineNum, colNum, flags;
 
         nsresult rv = scriptError->GetErrorMessage(msg);
         NS_ENSURE_SUCCESS(rv, rv);
         rv = scriptError->GetSourceName(sourceName);
         NS_ENSURE_SUCCESS(rv, rv);
         rv = scriptError->GetSourceLine(sourceLine);
         NS_ENSURE_SUCCESS(rv, rv);
+
+        // Before we send the error to the parent process (which
+        // involves copying the memory), truncate any long lines.  CSS
+        // errors in particular share the memory for long lines with
+        // repeated errors, but the IPC communication we're about to do
+        // will break that sharing, so we better truncate now.
+        if (sourceLine.Length() > 1000) {
+            sourceLine.Truncate(1000);
+        }
+
         rv = scriptError->GetCategory(getter_Copies(category));
         NS_ENSURE_SUCCESS(rv, rv);
         rv = scriptError->GetLineNumber(&lineNum);
         NS_ENSURE_SUCCESS(rv, rv);
         rv = scriptError->GetColumnNumber(&colNum);
         NS_ENSURE_SUCCESS(rv, rv);
         rv = scriptError->GetFlags(&flags);
         NS_ENSURE_SUCCESS(rv, rv);

From: L. David Baron <dbaron@dbaron.org>

Remove unused (and unnecessarily slow) method gfxAlphaBoxBlur::PremultiplyAlpha.  (Bug 633369)

diff --git a/gfx/thebes/gfxBlur.cpp b/gfx/thebes/gfxBlur.cpp
--- a/gfx/thebes/gfxBlur.cpp
+++ b/gfx/thebes/gfxBlur.cpp
@@ -112,29 +112,16 @@ gfxAlphaBoxBlur::Init(const gfxRect& aRe
     // at the coordinates of rect.
     mImageSurface->SetDeviceOffset(-rect.TopLeft());
 
     mContext = new gfxContext(mImageSurface);
 
     return mContext;
 }
 
-void
-gfxAlphaBoxBlur::PremultiplyAlpha(gfxFloat alpha)
-{
-    if (!mImageSurface)
-        return;
-
-    unsigned char* data = mImageSurface->Data();
-    PRInt32 length = mImageSurface->GetDataSize();
-
-    for (PRInt32 i=0; i<length; ++i)
-        data[i] = static_cast<unsigned char>(data[i] * alpha);
-}
-
 /**
  * Box blur involves looking at one pixel, and setting its value to the average
  * of its neighbouring pixels.
  * @param aInput The input buffer.
  * @param aOutput The output buffer.
  * @param aLeftLobe The number of pixels to blend on the left.
  * @param aRightLobe The number of pixels to blend on the right.
  * @param aWidth The number of columns in the buffers.
diff --git a/gfx/thebes/gfxBlur.h b/gfx/thebes/gfxBlur.h
--- a/gfx/thebes/gfxBlur.h
+++ b/gfx/thebes/gfxBlur.h
@@ -99,21 +99,16 @@ public:
      * its creation.
      */
     gfxContext* GetContext()
     {
         return mContext;
     }
 
     /**
-     * Premultiplies the image by the given alpha.
-     */
-    void PremultiplyAlpha(gfxFloat alpha);
-
-    /**
      * Does the actual blurring/spreading and mask applying. Users of this
      * object must have drawn whatever they want to be blurred onto the internal
      * gfxContext returned by GetContext before calling this.
      *
      * @param aDestinationCtx The graphics context on which to apply the
      *  blurred mask.
      */
     void Paint(gfxContext* aDestinationCtx, const gfxPoint& offset = gfxPoint(0.0, 0.0));

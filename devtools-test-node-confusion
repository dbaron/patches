From: L. David Baron <dbaron@dbaron.org>

Bug 1111440 followup - Are these intending to read/write element.style.marginInlineStart instead of just element.marginInlineStart?

MozReview-Commit-ID: BHCexWmrHoT

diff --git a/devtools/client/performance/test/browser_perf-tree-abstract-01.js b/devtools/client/performance/test/browser_perf-tree-abstract-01.js
--- a/devtools/client/performance/test/browser_perf-tree-abstract-01.js
+++ b/devtools/client/performance/test/browser_perf-tree-abstract-01.js
@@ -33,17 +33,17 @@ add_task(function*() {
     "The root node's target is a child of the container node.");
 
   is(treeRoot.root, treeRoot,
     "The root node has the correct root.");
   is(treeRoot.parent, null,
     "The root node has the correct parent.");
   is(treeRoot.level, 0,
     "The root node has the correct level.");
-  is(treeRoot.target.marginInlineStart, "0px",
+  is(treeRoot.target.style.marginInlineStart, "0px",
     "The root node's indentation is correct.");
   is(treeRoot.target.textContent, "root",
     "The root node's text contents are correct.");
   is(treeRoot.container, container,
     "The root node's container is correct.");
 
   // Expand the root and test the child items...
 
@@ -72,30 +72,30 @@ add_task(function*() {
     "The 'bar' node's target is a child of the container node.");
 
   is(fooItem.root, treeRoot,
     "The 'foo' node has the correct root.");
   is(fooItem.parent, treeRoot,
     "The 'foo' node has the correct parent.");
   is(fooItem.level, 1,
     "The 'foo' node has the correct level.");
-  is(fooItem.target.marginInlineStart, "10px",
+  is(fooItem.target.style.marginInlineStart, "10px",
     "The 'foo' node's indentation is correct.");
   is(fooItem.target.textContent, "foo",
     "The 'foo' node's text contents are correct.");
   is(fooItem.container, container,
     "The 'foo' node's container is correct.");
 
   is(barItem.root, treeRoot,
     "The 'bar' node has the correct root.");
   is(barItem.parent, treeRoot,
     "The 'bar' node has the correct parent.");
   is(barItem.level, 1,
     "The 'bar' node has the correct level.");
-  is(barItem.target.marginInlineStart, "10px",
+  is(barItem.target.style.marginInlineStart, "10px",
     "The 'bar' node's indentation is correct.");
   is(barItem.target.textContent, "bar",
     "The 'bar' node's text contents are correct.");
   is(barItem.container, container,
     "The 'bar' node's container is correct.");
 
   // Test clicking on the `foo` node...
 
@@ -138,17 +138,17 @@ add_task(function*() {
     "The 'baz' node's target is a child of the container node.");
 
   is(bazItem.root, treeRoot,
     "The 'baz' node has the correct root.");
   is(bazItem.parent, barItem,
     "The 'baz' node has the correct parent.");
   is(bazItem.level, 2,
     "The 'baz' node has the correct level.");
-  is(bazItem.target.marginInlineStart, "20px",
+  is(bazItem.target.style.marginInlineStart, "20px",
     "The 'baz' node's indentation is correct.");
   is(bazItem.target.textContent, "baz",
     "The 'baz' node's text contents are correct.");
   is(bazItem.container, container,
     "The 'baz' node's container is correct.");
 
   container.remove();
 });
diff --git a/devtools/client/performance/test/helpers/synth-utils.js b/devtools/client/performance/test/helpers/synth-utils.js
--- a/devtools/client/performance/test/helpers/synth-utils.js
+++ b/devtools/client/performance/test/helpers/synth-utils.js
@@ -60,17 +60,17 @@ exports.synthesizeCustomTreeClass = () =
   function MyCustomTreeItem(dataSrc, properties) {
     AbstractTreeItem.call(this, properties);
     this.itemDataSrc = dataSrc;
   }
 
   MyCustomTreeItem.prototype = Heritage.extend(AbstractTreeItem.prototype, {
     _displaySelf: function(document, arrowNode) {
       let node = document.createElement("hbox");
-      node.marginInlineStart = (this.level * 10) + "px";
+      node.style.marginInlineStart = (this.level * 10) + "px";
       node.appendChild(arrowNode);
       node.appendChild(document.createTextNode(this.itemDataSrc.label));
       return node;
     },
 
     _populateSelf: function(children) {
       for (let childDataSrc of this.itemDataSrc.children) {
         children.push(new MyCustomTreeItem(childDataSrc, {
diff --git a/devtools/client/shared/widgets/AbstractTreeItem.jsm b/devtools/client/shared/widgets/AbstractTreeItem.jsm
--- a/devtools/client/shared/widgets/AbstractTreeItem.jsm
+++ b/devtools/client/shared/widgets/AbstractTreeItem.jsm
@@ -44,17 +44,17 @@ this.EXPORTED_SYMBOLS = ["AbstractTreeIt
  *   _displaySelf: function(document, arrowNode) {
  *     let node = document.createElement("hbox");
  *     ...
  *     // Append the provided arrow node wherever you want.
  *     node.appendChild(arrowNode);
  *     ...
  *     // Use `this.itemDataSrc` to customize the tree item and
  *     // `this.level` to calculate the indentation.
- *     node.marginInlineStart = (this.level * 10) + "px";
+ *     node.style.marginInlineStart = (this.level * 10) + "px";
  *     node.appendChild(document.createTextNode(this.itemDataSrc.label));
  *     ...
  *     return node;
  *   },
  *   _populateSelf: function(children) {
  *     ...
  *     // Use `this.itemDataSrc` to get the data source for the child items.
  *     let someChildDataSrc = this.itemDataSrc.children[0];

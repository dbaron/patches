From: L. David Baron <dbaron@dbaron.org>

Bug 978833 patch 6 - Make Declaration create an ImportantStyleSource.

diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -68,16 +68,30 @@ Declaration::MapRuleInfoInto(nsRuleData 
 {
   MOZ_ASSERT(mData, "called while expanded");
   mData->MapRuleInfoInto(aRuleData);
   if (mVariables) {
     mVariables->MapRuleInfoInto(aRuleData);
   }
 }
 
+ImportantStyleSource*
+Declaration::GetImportantStyleSource()
+{
+  // FIXME: Maybe do this at a specific time to avoid wasting time
+  // handling laziness?
+  if (!HasImportantData()) {
+    MOZ_ASSERT(!mImportantStyleSource);
+    return nullptr;
+  }
+
+  mImportantStyleSource = new ImportantStyleSource(this);
+  return mImportantStyleSource;
+}
+
 void
 Declaration::ValueAppended(nsCSSProperty aProperty)
 {
   MOZ_ASSERT(!mData && !mImportantData,
              "should only be called while expanded");
   MOZ_ASSERT(!nsCSSProps::IsShorthand(aProperty),
              "shorthands forbidden");
   // order IS important for CSS, so remove and add to the end
diff --git a/layout/style/Declaration.h b/layout/style/Declaration.h
--- a/layout/style/Declaration.h
+++ b/layout/style/Declaration.h
@@ -31,16 +31,18 @@
 // feec07b8-3fe6-491e-90d5-cc93f853e048
 #define NS_CSS_DECLARATION_IMPL_CID \
 { 0xfeec07b8, 0x3fe6, 0x491e, \
   { 0x90, 0xd5, 0xcc, 0x93, 0xf8, 0x53, 0xe0, 0x48 } }
 
 namespace mozilla {
 namespace css {
 
+class ImportantStyleSource;
+
 // Declaration objects have unusual lifetime rules.  Every declaration
 // begins life in an invalid state which ends when InitializeEmpty or
 // CompressFrom is called upon it.  After that, it can be attached to
 // exactly one style rule, and will be destroyed when that style rule
 // is destroyed.  A declaration becomes immutable when its style rule's
 // |RuleMatched| method is called; after that, it must be copied before
 // it can be modified, which is taken care of by |EnsureMutable|.
 
@@ -65,16 +67,18 @@ private:
 public:
 
   // nsIStyleRule implementation
   virtual void MapRuleInfoInto(nsRuleData *aRuleData) override;
 #ifdef DEBUG
   virtual void List(FILE* out = stdout, int32_t aIndent = 0) const override;
 #endif
 
+  ImportantStyleSource* GetImportantStyleSource();
+
   /**
    * |ValueAppended| must be called to maintain this declaration's
    * |mOrder| whenever a property is parsed into an expanded data block
    * for this declaration.  aProperty must not be a shorthand.
    */
   void ValueAppended(nsCSSProperty aProperty);
 
   void RemoveProperty(nsCSSProperty aProperty);
@@ -359,16 +363,18 @@ private:
   nsAutoPtr<CSSVariableDeclarations> mVariables;
 
   // may be null
   nsAutoPtr<CSSVariableDeclarations> mImportantVariables;
 
   // The style rule that owns this declaration.  May be null.
   Rule* mOwningRule;
 
+  RefPtr<ImportantStyleSource> mImportantStyleSource;
+
   // set by style rules when |RuleMatched| is called;
   // also by ToString (hence the 'mutable').
   mutable bool mImmutable;
 };
 
 } // namespace css
 } // namespace mozilla
 

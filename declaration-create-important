From: L. David Baron <dbaron@dbaron.org>

Bug 978833 patch 7 - Make Declaration create an ImportantStyleData.

This adds code to Declaration that is equivalent to the StyleRule code
removed in patch 11.  But the removal and addition need to be on
opposite sides of patch 10.

FIXME: This leaks, since there's a cycle between ImportantStyleData and
Declaration.  Fix this by fusing the objects and maintaining a single
reference count; ImportantStyleData should be just one word that way.

diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -97,16 +97,33 @@ Declaration::MapRuleInfoInto(nsRuleData 
 {
   MOZ_ASSERT(mData, "called while expanded");
   mData->MapRuleInfoInto(aRuleData);
   if (mVariables) {
     mVariables->MapRuleInfoInto(aRuleData);
   }
 }
 
+ImportantStyleData*
+Declaration::GetImportantStyleData()
+{
+  // FIXME: Maybe do this at a specific time to avoid wasting time
+  // handling laziness?
+  if (!HasImportantData()) {
+    MOZ_ASSERT(!mImportantStyleData);
+    return nullptr;
+  }
+
+  if (!mImportantStyleData) {
+    mImportantStyleData = new ImportantStyleData(this);
+  }
+
+  return mImportantStyleData;
+}
+
 void
 Declaration::ValueAppended(nsCSSProperty aProperty)
 {
   MOZ_ASSERT(!mData && !mImportantData,
              "should only be called while expanded");
   MOZ_ASSERT(!nsCSSProps::IsShorthand(aProperty),
              "shorthands forbidden");
   // order IS important for CSS, so remove and add to the end
diff --git a/layout/style/Declaration.h b/layout/style/Declaration.h
--- a/layout/style/Declaration.h
+++ b/layout/style/Declaration.h
@@ -86,16 +86,18 @@ private:
 public:
 
   // nsIStyleRule implementation
   virtual void MapRuleInfoInto(nsRuleData *aRuleData) override;
 #ifdef DEBUG
   virtual void List(FILE* out = stdout, int32_t aIndent = 0) const override;
 #endif
 
+  ImportantStyleData* GetImportantStyleData();
+
   /**
    * |ValueAppended| must be called to maintain this declaration's
    * |mOrder| whenever a property is parsed into an expanded data block
    * for this declaration.  aProperty must not be a shorthand.
    */
   void ValueAppended(nsCSSProperty aProperty);
 
   void RemoveProperty(nsCSSProperty aProperty);
@@ -382,16 +384,18 @@ private:
   nsAutoPtr<CSSVariableDeclarations> mVariables;
 
   // may be null
   nsAutoPtr<CSSVariableDeclarations> mImportantVariables;
 
   // The style rule that owns this declaration.  May be null.
   Rule* mOwningRule;
 
+  RefPtr<ImportantStyleData> mImportantStyleData;
+
   // set by style rules when |RuleMatched| is called;
   // also by ToString (hence the 'mutable').
   mutable bool mImmutable;
 };
 
 NS_DEFINE_STATIC_IID_ACCESSOR(Declaration, NS_CSS_DECLARATION_IMPL_CID)
 
 } // namespace css

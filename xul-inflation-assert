From: L. David Baron <dbaron@dbaron.org>

Fix font size inflation assertion when XUL is in native-anonymous content by making XUL always be a container for font size inflation.  (Bug 708036)

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -4583,26 +4583,30 @@ nsLayoutUtils::IsContainerForFontSizeInf
    * (possibly with inline elements) flowing within a block to count the
    * block (or higher) as its container.
    *
    * We also want form controls, including the text in the anonymous
    * content inside of them, to match each other and the text next to
    * them, so they and their anonymous content should also not be a
    * container.
    *
+   * However, because we can't reliably compute sizes across XUL during
+   * reflow, any XUL frame is always a container.
+   *
    * There are contexts where it would be nice if some blocks didn't
    * count as a container, so that, for example, an indented quotation
    * didn't end up with a smaller font size.  However, it's hard to
    * distinguish these situations where we really do want the indented
    * thing to count as a container, so we don't try, and blocks are
    * always containers.
    */
-  bool isInline = aFrame->GetStyleDisplay()->mDisplay ==
-                    NS_STYLE_DISPLAY_INLINE ||
-                  aFrame->GetContent()->IsInNativeAnonymousSubtree();
+  bool isInline = (aFrame->GetStyleDisplay()->mDisplay ==
+                     NS_STYLE_DISPLAY_INLINE ||
+                   aFrame->GetContent()->IsInNativeAnonymousSubtree()) &&
+                  !aFrame->IsBoxFrame();
   NS_ASSERTION(!aFrame->IsFrameOfType(nsIFrame::eLineParticipant) || isInline,
                "line participants must not be containers");
   NS_ASSERTION(aFrame->GetType() != nsGkAtoms::bulletFrame || isInline,
                "bullets should not be containers");
   return !isInline;
 }
 
 static bool
@@ -4625,16 +4629,19 @@ nsLayoutUtils::InflationMinFontSizeFor(c
 {
 #ifdef DEBUG
   {
     const nsHTMLReflowState *rs = &aReflowState;
     const nsIFrame *f = aReflowState.frame;
     for (; rs; rs = rs->parentReflowState, f = f->GetParent()) {
       NS_ABORT_IF_FALSE(rs->frame == f,
                         "reflow state parentage must match frame parentage");
+      NS_ABORT_IF_FALSE(rs->parentReflowState ||
+                        IsContainerForFontSizeInflation(f),
+                        "must hit container at top of reflow state chain");
     }
   }
 #endif
 
   if (!FontSizeInflationEnabled(aReflowState.frame->PresContext())) {
     return 0;
   }
 

From: L. David Baron <dbaron@dbaron.org>

Fix font size inflation assertion when XUL is in native-anonymous content by making XUL always be a container for font size inflation.  (Bug 708036)

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -4583,26 +4583,30 @@ nsLayoutUtils::IsContainerForFontSizeInf
    * (possibly with inline elements) flowing within a block to count the
    * block (or higher) as its container.
    *
    * We also want form controls, including the text in the anonymous
    * content inside of them, to match each other and the text next to
    * them, so they and their anonymous content should also not be a
    * container.
    *
+   * However, because we can't reliably compute sizes across XUL during
+   * reflow, any XUL frame is always a container.
+   *
    * There are contexts where it would be nice if some blocks didn't
    * count as a container, so that, for example, an indented quotation
    * didn't end up with a smaller font size.  However, it's hard to
    * distinguish these situations where we really do want the indented
    * thing to count as a container, so we don't try, and blocks are
    * always containers.
    */
-  bool isInline = aFrame->GetStyleDisplay()->mDisplay ==
-                    NS_STYLE_DISPLAY_INLINE ||
-                  aFrame->GetContent()->IsInNativeAnonymousSubtree();
+  bool isInline = (aFrame->GetStyleDisplay()->mDisplay ==
+                     NS_STYLE_DISPLAY_INLINE ||
+                   aFrame->GetContent()->IsInNativeAnonymousSubtree()) &&
+                  !aFrame->IsBoxFrame();
   NS_ASSERTION(!aFrame->IsFrameOfType(nsIFrame::eLineParticipant) || isInline,
                "line participants must not be containers");
   NS_ASSERTION(aFrame->GetType() != nsGkAtoms::bulletFrame || isInline,
                "bullets should not be containers");
   return !isInline;
 }
 
 static bool
@@ -4625,16 +4629,19 @@ nsLayoutUtils::InflationMinFontSizeFor(c
 {
 #ifdef DEBUG
   {
     const nsHTMLReflowState *rs = &aReflowState;
     const nsIFrame *f = aReflowState.frame;
     for (; rs; rs = rs->parentReflowState, f = f->GetParent()) {
       NS_ABORT_IF_FALSE(rs->frame == f,
                         "reflow state parentage must match frame parentage");
+      NS_ABORT_IF_FALSE(rs->parentReflowState ||
+                        IsContainerForFontSizeInflation(f),
+                        "must hit container at top of reflow state chain");
     }
   }
 #endif
 
   if (!FontSizeInflationEnabled(aReflowState.frame->PresContext())) {
     return 0;
   }
 
diff --git a/layout/base/tests/Makefile.in b/layout/base/tests/Makefile.in
--- a/layout/base/tests/Makefile.in
+++ b/layout/base/tests/Makefile.in
@@ -377,16 +377,17 @@ ifeq (,$(filter windows,$(MOZ_WIDGET_TOO
 endif
 
 _BROWSER_FILES = \
 	browser_bug617076.js \
 	$(NULL)
 
 _INFLATION_REFTEST_FILES = \
 		$(shell find $(srcdir)/font-inflation/ -name '*.html' -o -name '*.xhtml') \
+		$(srcdir)/../../reftests/webm-video/black140x100.webm
 		$(NULL)
 
 libs:: $(_TEST_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
 libs:: $(_BROWSER_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/browser/$(relativesrcdir)
 libs:: $(_INFLATION_REFTEST_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)/font-inflation/
diff --git a/layout/base/tests/font-inflation/video-1.html b/layout/base/tests/font-inflation/video-1.html
new file mode 100644
--- /dev/null
+++ b/layout/base/tests/font-inflation/video-1.html
@@ -0,0 +1,2 @@
+<!DOCTYPE HTML>
+<video src="black140x100.webm"></video>
diff --git a/layout/base/tests/test_font_inflation_reftests.html b/layout/base/tests/test_font_inflation_reftests.html
--- a/layout/base/tests/test_font_inflation_reftests.html
+++ b/layout/base/tests/test_font_inflation_reftests.html
@@ -40,16 +40,17 @@ var gTests = [
   "== input-text-1.html input-text-1-ref.html",
   "== input-text-2.html input-text-2-ref.html",
   "== input-text-3.html input-text-3-ref.html",
   "== textarea-1.html textarea-1-ref.html",
   "== textarea-2.html textarea-2-ref.html",
   "== textarea-3.html textarea-3-ref.html",
   "== css-transform-1.html css-transform-1-ref.html",
   "== css-transform-2.html css-transform-2-ref.html",
+  "!= video-1.html about:blank", // crashtest
 ];
 
 // Maintain a reference count of how many things we're waiting for until
 // we can say the tests are done.
 var gDelayCount = 0;
 function AddFinishDependency()
   { ++gDelayCount; }
 function RemoveFinishDependency()

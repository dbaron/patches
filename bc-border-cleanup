From: L. David Baron <dbaron@dbaron.org>

A little cleanup of border-collapse code while reviewing bug 1405929.

MozReview-Commit-ID: A3zoPCvu4jU

diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -900,20 +900,19 @@ bool nsTableCellMap::RowHasSpanningCells
 
 // FIXME: The only value callers pass for aSide is eLogicalSideBEnd.
 // Consider removing support for the other three values.
 void
 nsTableCellMap::ResetBStartStart(LogicalSide aSide,
                                  nsCellMap&  aCellMap,
                                  uint32_t    aRowGroupStart,
                                  uint32_t    aRowIndex,
-                                 uint32_t    aColIndex,
-                                 bool        aIsBEndIEnd)
+                                 uint32_t    aColIndex)
 {
-  if (!mBCInfo || aIsBEndIEnd) ABORT0();
+  if (!mBCInfo) ABORT0();
 
   BCCellData* cellData;
   BCData* bcData = nullptr;
 
   switch(aSide) {
   case eLogicalSideBEnd:
     aRowIndex++;
     MOZ_FALLTHROUGH;
@@ -952,17 +951,17 @@ nsTableCellMap::ResetBStartStart(Logical
     break;
   }
   if (bcData) {
     bcData->SetBStartStart(false);
   }
 }
 
 // store the aSide border segment at coord = (aRowIndex, aColIndex). For bStart/iStart, store
-// the info at coord. For bEnd/iStart store it at the adjacent location so that it is
+// the info at coord. For bEnd/iEnd store it at the adjacent location so that it is
 // bStart/iStart at that location. If the new location is at the iEnd or bEnd edge of the
 // table, then store it one of the special arrays (iEnd-most borders, bEnd-most borders).
 void
 nsTableCellMap::SetBCBorderEdge(LogicalSide aSide,
                                 nsCellMap&    aCellMap,
                                 uint32_t      aCellMapStart,
                                 uint32_t      aRowIndex,
                                 uint32_t      aColIndex,
diff --git a/layout/tables/nsCellMap.h b/layout/tables/nsCellMap.h
--- a/layout/tables/nsCellMap.h
+++ b/layout/tables/nsCellMap.h
@@ -188,18 +188,17 @@ protected:
                               int32_t                     aNumRowsToRemove,
                               TableArea&                  aDamageArea);
 
 public:
   void ResetBStartStart(mozilla::LogicalSide aSide,
                         nsCellMap& aCellMap,
                         uint32_t   aRowGroupStart,
                         uint32_t   aYPos,
-                        uint32_t   aXPos,
-                        bool       aIsBEndIEnd = false);
+                        uint32_t   aXPos);
 
   void SetBCBorderEdge(mozilla::LogicalSide aEdge,
                        nsCellMap&    aCellMap,
                        uint32_t      aCellMapStart,
                        uint32_t      aYPos,
                        uint32_t      aXPos,
                        uint32_t      aLength,
                        BCBorderOwner aOwner,

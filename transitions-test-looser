From: L. David Baron <dbaron@dbaron.org>

Increase test tolerance to reflect observed errors in bug 435441 comments 103 and 105, and handle timer firing after 8 seconds (comment 104).

diff --git a/layout/style/test/test_transitions.html b/layout/style/test/test_transitions.html
--- a/layout/style/test/test_transitions.html
+++ b/layout/style/test/test_transitions.html
@@ -397,17 +397,17 @@ function check_transition_value(func, st
     function value_at(elapsed, error_direction) {
         var time_portion = (elapsed - start_time) / (end_time - start_time);
         if (time_portion < 0)
             time_portion = 0;
         else if (time_portion > 1)
             time_portion = 1;
         // Assume a small error since bezier computation can be off slightly.
         // (This test's computation is probably more accurate than Mozilla's.)
-        var value_portion = func(time_portion) + error_direction * 0.0005;
+        var value_portion = func(time_portion) + error_direction * 0.0007;
         if (value_portion < 0)
             value_portion = 0;
         else if (value_portion > 1)
             value_portion = 1;
         var value = (1 - value_portion) * start_value + value_portion * end_value;
         if (start_value > end_value)
             error_direction = -error_direction;
         // Computed values get rounded to 1/60th of a pixel.
@@ -447,18 +447,24 @@ function check_transition_value(func, st
        "px at time between " + time_range[0] + "s and " + time_range[1] + "s.");
 }
 
 function check_ref_range()
 {
     // This is the only test where we compare the progress of the
     // transitions to an actual time; we need considerable tolerance at
     // the low end (we are using half a second).
-    var expected_range = [ (gCurrentTime - gStartTime2 - 500) / 8,
+    var expected_range = [ (gCurrentTime - gStartTime2 - 750) / 8,
                            (Date.now() - gStartTime1 + 20) / 8 ];
+    if (expected_range[0] > 1000) {
+        expected_range[0] = 1000;
+    }
+    if (expected_range[1] > 1000) {
+        expected_range[1] = 1000;
+    }
     function check(desc, value) {
         ok(expected_range[0] <= value && value <= expected_range[1],
            desc + ": computed value " + value + "px should be between " +
            expected_range[0].toFixed(6) + "px and " +
            expected_range[1].toFixed(6) + "px at time between " +
            expected_range[0]/125 + "s and " + expected_range[1]/125 + "s.");
     }
     check("early reference", px_to_num(earlyrefcs.textIndent));

Make outlines on inlines containing blocks outline the blocks.  b=424236,270191  r+sr=roc

diff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp
+++ b/layout/base/nsCSSRendering.cpp
@@ -52,6 +52,7 @@
 #include "nsFrameManager.h"
 #include "nsStyleContext.h"
 #include "nsGkAtoms.h"
+#include "nsCSSAnonBoxes.h"
 #include "nsTransform2D.h"
 #include "nsIDeviceContext.h"
 #include "nsIContent.h"
@@ -2867,9 +2868,7 @@ nsCSSRendering::PaintOutline(nsPresConte
   // Get our style context's color struct.
   const nsStyleColor* ourColor = aStyleContext->GetStyleColor();
 
-  nscoord width, offset;
-  float percent;
-
+  nscoord width;
   aOutlineStyle.GetOutlineWidth(width);
 
   if (width == 0) {
@@ -2892,7 +2891,7 @@ nsCSSRendering::PaintOutline(nsPresConte
 
     switch (bordStyleRadius[i].GetUnit()) {
       case eStyleUnit_Percent:
-        percent = bordStyleRadius[i].GetPercentValue();
+        float percent = bordStyleRadius[i].GetPercentValue();
         twipsRadii[i] = (nscoord)(percent * aBorderArea.width);
         break;
 
@@ -2905,10 +2904,41 @@ nsCSSRendering::PaintOutline(nsPresConte
     }
   }
 
-  nsRect overflowArea = aForFrame->GetOverflowRect();
-
-  // get the offset for our outline
+  nscoord offset;
   aOutlineStyle.GetOutlineOffset(offset);
+
+  // When the outline property is set on :-moz-anonymous-block or
+  // :-moz-anonyomus-positioned-block pseudo-elements, it inherited that
+  // outline from the inline that was broken because it contained a
+  // block.  In that case, we don't want a really wide outline if the
+  // block inside the inline is narrow, so union the actual contents of
+  // the anonymous blocks.
+  nsIFrame *frameForArea = aForFrame;
+  do {
+    nsIAtom *pseudoType = frameForArea->GetStyleContext()->GetPseudoType();
+    if (pseudoType != nsCSSAnonBoxes::mozAnonymousBlock &&
+        pseudoType != nsCSSAnonBoxes::mozAnonymousPositionedBlock)
+      break;
+    // If we're done, we really want it and all its later siblings.
+    frameForArea = frameForArea->GetFirstChild(nsnull);
+    NS_ASSERTION(frameForArea, "anonymous block with no children?");
+  } while (frameForArea);
+  nsRect overflowArea;
+  if (frameForArea == aForFrame) {
+    overflowArea = aForFrame->GetOverflowRect();
+  } else {
+    for (; frameForArea; frameForArea = frameForArea->GetNextSibling()) {
+      // The outline has already been included in aForFrame's overflow
+      // area, but not in those of its descendants, so we have to
+      // include it.  Otherwise we'll end up drawing the outline inside
+      // the border.
+      nsRect r(frameForArea->GetOverflowRect() +
+               frameForArea->GetOffsetTo(aForFrame));
+      r.Inflate(offset + width, offset + width);
+      overflowArea.UnionRect(overflowArea, r);
+    }
+  }
+
   nsRect outerRect(overflowArea + aBorderArea.TopLeft());
   nsRect innerRect(outerRect);
   if (width + offset >= 0) {
diff --git a/layout/reftests/bugs/424236-1-ref.html b/layout/reftests/bugs/424236-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-1-ref.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	/* can't compare to border combined with negative margin because of
+	   margin collapsing */
+	body > div { display: block; outline: 1px dotted black; }
+
+	</style>
+</head>
+<body>
+
+<span></span><div>text</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-1.html b/layout/reftests/bugs/424236-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-1.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	body > span > span { display: block; }
+
+	</style>
+</head>
+<body>
+
+<span><span>text</span></span>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-2-ref.html b/layout/reftests/bugs/424236-2-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-2-ref.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	/* can't compare to border combined with negative margin because of
+	   margin collapsing */
+	body > div { display: block; outline: 1px dotted black; }
+
+	</style>
+</head>
+<body>
+
+&nbsp;&nbsp;<span>A</span><div>B</div><span>C</span>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-2.html b/layout/reftests/bugs/424236-2.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-2.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	body > span > span { display: block; }
+
+	</style>
+</head>
+<body>
+
+&nbsp;&nbsp;<span>A<span>B</span>C</span>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-3-ref.html b/layout/reftests/bugs/424236-3-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-3-ref.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	/* can't compare to border combined with negative margin because of
+	   margin collapsing */
+	body > div { display: block; outline: 1px dotted black; width: 5em; }
+
+	</style>
+</head>
+<body>
+
+<span></span><div>text</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-3.html b/layout/reftests/bugs/424236-3.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-3.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	body > span > span { display: block; width: 5em; }
+
+	</style>
+</head>
+<body>
+
+<span><span>text</span></span>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-4-ref.html b/layout/reftests/bugs/424236-4-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-4-ref.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body > span { outline: 1px dotted black; }
+	/* can't compare to border combined with negative margin because of
+	   margin collapsing */
+	body > div { display: block; outline: 1px dotted black; width: 10em; }
+
+	</style>
+</head>
+<body>
+
+<span></span><div>text</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/424236-4.html b/layout/reftests/bugs/424236-4.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/424236-4.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>reftest, bug 424236</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	body { width: 5em; }
+	body > span { outline: 1px dotted black; }
+	body > span > span { display: block; width: 10em; }
+
+	</style>
+</head>
+<body>
+
+<span><span>text</span></span>
+
+</body>
+</html>
diff --git a/layout/style/ua.css b/layout/style/ua.css
--- a/layout/style/ua.css
+++ b/layout/style/ua.css
@@ -131,6 +131,11 @@
   /* XXX shouldn't unicode-bidi inherit? */
 }
 
+*|*::-moz-anonymous-block, *|*::-moz-anonymous-positioned-block {
+  /* we currently inherit from the inline that is split */
+  outline: inherit;
+}
+
 *|*::-moz-xul-anonymous-block {
   display: block ! important;
   position: static ! important;

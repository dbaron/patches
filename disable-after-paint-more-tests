From: L. David Baron <dbaron@dbaron.org>

Additional test fixes for disable-after-paint (to merge into it).

diff --git a/content/events/test/test_bug426082.html b/content/events/test/test_bug426082.html
--- a/content/events/test/test_bug426082.html
+++ b/content/events/test/test_bug426082.html
@@ -23,16 +23,32 @@ https://bugzilla.mozilla.org/show_bug.cg
   
 </div>
 <pre id="test">
 <script type="application/javascript;version=1.8">
 
 /** Test for Bug 426082 **/
 SimpleTest.waitForExplicitFinish();
 
+function get_after_paint_pref()
+{
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"].
+                  getService(Components.interfaces.nsIPrefBranch);
+    return prefs.getBoolPref("dom.send_after_paint_to_content");
+}
+
+function set_after_paint_pref(val)
+{
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"].
+                  getService(Components.interfaces.nsIPrefBranch);
+    prefs.setBoolPref("dom.send_after_paint_to_content", val);
+}
+
 var normalButtonCanvas, pressedButtonCanvas, normalFocusedButtonCanvas,
     pressedFocusedButtonCanvas, currentSnapshot, button, label, outside;
 
 function runTests() {
   normalButtonCanvas = $("normalButtonCanvas");
   pressedButtonCanvas = $("pressedButtonCanvas");
   normalFocusedButtonCanvas = $("normalFocusedButtonCanvas");
   pressedFocusedButtonCanvas = $("pressedFocusedButtonCanvas");
@@ -84,16 +100,18 @@ function executeTests() {
       button.getBoundingClientRect(); // Flush.
       SimpleTest.executeSoon(execNext);
     } catch (e) {}
   }
   execNext();
 }
 
 function tests() {
+  var orig_after_paint_pref = get_after_paint_pref();
+  set_after_paint_pref(true);
   window.addEventListener("MozAfterPaint", paintListener, false);
   // Press the label.
   sendMouseEvent("mousemove", label);
   sendMouseEvent("mousedown", label);
   yield;
   compareSnapshots_(normalButtonCanvas, currentSnapshot, false, "Pressing the label should have pressed the button.");
   takeSnapshot(pressedButtonCanvas);
   // Move the mouse down from the label.
@@ -112,16 +130,17 @@ function tests() {
   sendMouseEvent("mousemove", label);
   sendMouseEvent("mousedown", label);
   yield;
   label.parentNode.removeChild(label);
   yield;
   compareSnapshots_(normalButtonCanvas, currentSnapshot, true, "Removing the label should have unpressed the button.");
   sendMouseEvent("mouseup", label);
   window.removeEventListener("MozAfterPaint", paintListener, false);
+  set_after_paint_pref(orig_after_paint_pref);
   SimpleTest.finish();
 }
 
 function sendMouseEvent(t, elem) {
   var r = elem.getBoundingClientRect();
   synthesizeMouse(elem, r.width / 2, r.height / 2, {type: t});
 }
 
diff --git a/layout/tools/reftest/reftest-cmdline.js b/layout/tools/reftest/reftest-cmdline.js
--- a/layout/tools/reftest/reftest-cmdline.js
+++ b/layout/tools/reftest/reftest-cmdline.js
@@ -87,21 +87,30 @@ RefTestCmdLineHandler.prototype =
     }
 
     /* Ignore the platform's online/offline status while running reftests. */
     var ios = Components.classes["@mozilla.org/network/io-service;1"]
               .getService(Components.interfaces.nsIIOService2);
     ios.manageOfflineStatus = false;
     ios.offline = false;
 
-    /* Force sRGB as an output profile for color management before we load a
-       window. */
+    /**
+     * Manipulate preferences by adding to the *default* branch.  Adding
+     * to the default branch means the changes we make won't get written
+     * back to user preferences.
+     *
+     * We want to do this here rather than in reftest.js because it's
+     * important to force sRGB as an output profile for color management
+     * before we load a window.
+     */
     var prefs = Components.classes["@mozilla.org/preferences-service;1"].
-                getService(Components.interfaces.nsIPrefBranch2);
-    prefs.setBoolPref("gfx.color_management.force_srgb", true);
+                getService(Components.interfaces.nsIPrefService);
+    var branch = prefs.getDefaultBranch("");
+    branch.setBoolPref("gfx.color_management.force_srgb", true);
+    branch.setBoolPref("dom.send_after_paint_to_content", true);
 
     var wwatch = Components.classes["@mozilla.org/embedcomp/window-watcher;1"]
                            .getService(nsIWindowWatcher);
     wwatch.openWindow(null, "chrome://reftest/content/reftest.xul", "_blank",
                       "chrome,dialog=no,all", args);
     cmdLine.preventDefault = true;
   },
 
diff --git a/layout/tools/reftest/reftest.js b/layout/tools/reftest/reftest.js
--- a/layout/tools/reftest/reftest.js
+++ b/layout/tools/reftest/reftest.js
@@ -354,21 +354,16 @@ function StartTests()
         ++gTestResults.Exception;
         gDumpLog("REFTEST TEST-UNEXPECTED-FAIL | | EXCEPTION: " + ex + "\n");
         DoneTests();
     }
 }
 
 function OnRefTestUnload()
 {
-    /* Clear the sRGB forcing pref to leave the profile as we found it. */
-    var prefs = Components.classes["@mozilla.org/preferences-service;1"].
-                getService(Components.interfaces.nsIPrefBranch2);
-    prefs.clearUserPref("gfx.color_management.force_srgb");
-
     gBrowser.removeEventListener("load", OnDocumentLoad, true);
     MozillaFileLogger.close();
 }
 
 // Read all available data from an input stream and return it
 // as a string.
 function getStreamContent(inputStream)
 {

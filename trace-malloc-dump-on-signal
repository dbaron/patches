From: L. David Baron <dbaron@dbaron.org>

Give trace-malloc a SIGUSR1 handler to dump allocations.

diff --git a/tools/trace-malloc/lib/nsTraceMalloc.c b/tools/trace-malloc/lib/nsTraceMalloc.c
--- a/tools/trace-malloc/lib/nsTraceMalloc.c
+++ b/tools/trace-malloc/lib/nsTraceMalloc.c
@@ -31,16 +31,22 @@
 #include "nscore.h"
 #include "prinit.h"
 #include "prthread.h"
 #include "plstr.h"
 #include "nsStackWalk.h"
 #include "nsTraceMallocCallbacks.h"
 #include "nsTypeInfo.h"
 #include "mozilla/mozPoisonWrite.h"
+#ifdef linux
+#include <signal.h>
+#include <sys/types.h>
+#include <unistd.h>
+#include <time.h>
+#endif
 
 #if defined(XP_MACOSX)
 
 #include <malloc/malloc.h>
 
 #define WRITE_FLAGS "w"
 
 #define __libc_malloc(x)                malloc(x)
@@ -1316,16 +1322,40 @@ static const char magic[] = NS_TRACE_MAL
 static void
 log_header(int logfd)
 {
     uint32_t ticksPerSec = PR_htonl(PR_TicksPerSecond());
     (void) write(logfd, magic, NS_TRACE_MALLOC_MAGIC_SIZE);
     (void) write(logfd, &ticksPerSec, sizeof ticksPerSec);
 }
 
+#ifdef linux
+static void
+DumpAllocationsHook(int signum)
+{
+    char filename[64];
+    snprintf(filename, sizeof(filename),
+             "trace-malloc.%d.%ld.dump", (int)getpid(), time(NULL));
+    NS_TraceMallocDumpAllocations(filename);
+}
+
+static void
+SetupDumpAllocationsHook(void)
+{
+    sigset_t mset;
+    struct sigaction dump_action;
+
+    sigemptyset(&mset);
+    dump_action.sa_handler = DumpAllocationsHook;
+    dump_action.sa_mask  = mset;
+    dump_action.sa_flags = SA_RESTART;
+    sigaction(SIGUSR1, &dump_action, NULL);
+}
+#endif
+
 PR_IMPLEMENT(void)
 NS_TraceMallocStartup(int logfd)
 {
     const char* stack_disable_env;
 
     /* We must be running on the primordial thread. */
     PR_ASSERT(tracing_enabled == 0);
     PR_ASSERT(logfp == &default_logfile);
@@ -1351,16 +1381,20 @@ NS_TraceMallocStartup(int logfd)
 
     RegisterTraceMallocShutdown();
 
     tmlock = PR_NewLock();
     (void) tm_get_thread(); /* ensure index initialization while it's easy */
 
     if (tracing_enabled)
         StartupHooker();
+
+#ifdef linux
+    SetupDumpAllocationsHook();
+#endif
 }
 
 /*
  * Options for log files, with the log file name either as the next option
  * or separated by '=' (e.g. "./mozilla --trace-malloc * malloc.log" or
  * "./mozilla --trace-malloc=malloc.log").
  */
 static const char TMLOG_OPTION[] = "--trace-malloc";

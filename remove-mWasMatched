From: L. David Baron <dbaron@dbaron.org>

Bug 978833 patch 17 - Remove Rule::mWasMatched.

diff --git a/layout/style/Rule.h b/layout/style/Rule.h
--- a/layout/style/Rule.h
+++ b/layout/style/Rule.h
@@ -31,27 +31,25 @@ class GroupRule;
   virtual nsIDOMCSSRule* GetExistingDOMRule() override;
 
 class Rule : public nsISupports {
 protected:
   Rule(uint32_t aLineNumber, uint32_t aColumnNumber)
     : mSheet(0),
       mParentRule(nullptr),
       mLineNumber(aLineNumber),
-      mColumnNumber(aColumnNumber),
-      mWasMatched(false)
+      mColumnNumber(aColumnNumber)
   {
   }
 
   Rule(const Rule& aCopy)
     : mSheet(aCopy.mSheet),
       mParentRule(aCopy.mParentRule),
       mLineNumber(aCopy.mLineNumber),
-      mColumnNumber(aCopy.mColumnNumber),
-      mWasMatched(false)
+      mColumnNumber(aCopy.mColumnNumber)
   {
   }
 
   virtual ~Rule() {}
 
 public:
 
 #ifdef DEBUG
@@ -139,16 +137,15 @@ protected:
   // if the low bit is 0, the latter if the low bit is 1.
   uintptr_t         mSheet;
   // When the parent GroupRule is destroyed, it will call SetParentRule(nullptr)
   // on this object. (Through SetParentRuleReference);
   GroupRule* MOZ_NON_OWNING_REF mParentRule;
 
   // Keep the same type so that MSVC packs them.
   uint32_t          mLineNumber;
-  uint32_t          mColumnNumber : 31;
-  uint32_t          mWasMatched : 1;
+  uint32_t          mColumnNumber;
 };
 
 } // namespace css
 } // namespace mozilla
 
 #endif /* mozilla_css_Rule_h___ */
diff --git a/layout/style/StyleRule.cpp b/layout/style/StyleRule.cpp
--- a/layout/style/StyleRule.cpp
+++ b/layout/style/StyleRule.cpp
@@ -1445,20 +1445,16 @@ NS_INTERFACE_MAP_BEGIN(StyleRule)
 NS_INTERFACE_MAP_END
 
 NS_IMPL_ADDREF(StyleRule)
 NS_IMPL_RELEASE(StyleRule)
 
 void
 StyleRule::RuleMatched()
 {
-  if (!mWasMatched) {
-    mWasMatched = true;
-  }
-
   mDeclaration->SetImmutable();
 }
 
 /* virtual */ int32_t
 StyleRule::GetType() const
 {
   return Rule::STYLE_RULE;
 }

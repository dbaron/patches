From: L. David Baron <dbaron@dbaron.org>

Bug 1227493 - Use a value outside the valid nscoord range for NS_INTRINSIC_WIDTH_UNKNOWN.

I tested locally that without this patch, the crashtest in the previous
patch fails with an assertion count of 6, and this patch does in fact
change it to 4.

diff --git a/layout/base/LayoutConstants.h b/layout/base/LayoutConstants.h
--- a/layout/base/LayoutConstants.h
+++ b/layout/base/LayoutConstants.h
@@ -20,12 +20,18 @@
 //       namely NS_UNCONSTRAINEDSIZE.
 #define NS_INTRINSICSIZE    NS_UNCONSTRAINEDSIZE
 #define NS_AUTOHEIGHT       NS_UNCONSTRAINEDSIZE
 #define NS_AUTOOFFSET       NS_UNCONSTRAINEDSIZE
 
 // +1 is to avoid clamped huge margin values being processed as auto margins
 #define NS_AUTOMARGIN       (NS_UNCONSTRAINEDSIZE + 1)
 
-#define NS_INTRINSIC_WIDTH_UNKNOWN nscoord_MIN
+// Use a value outside of the "valid" nscoord range for
+// NS_INTRINSIC_WIDTH_UNKNOWN.
+#define NS_INTRINSIC_WIDTH_UNKNOWN (nscoord_MIN - 1)
+static_assert(nscoord(NS_INTRINSIC_WIDTH_UNKNOWN) < 0,
+              "NS_INTRINSIC_WIDTH_UNKNOWN should be negative");
+static_assert(nscoord(NS_INTRINSIC_WIDTH_UNKNOWN) < nscoord(nscoord_MIN),
+              "NS_INTRINSIC_WIDTH_UNKNOWN should be less than nscoord_MIN");
 
 
 #endif // LayoutConstants_h___
diff --git a/layout/generic/crashtests/crashtests.list b/layout/generic/crashtests/crashtests.list
--- a/layout/generic/crashtests/crashtests.list
+++ b/layout/generic/crashtests/crashtests.list
@@ -623,17 +623,17 @@ load 1221904.html
 load 1222783.xhtml
 load 1223522.xhtml
 load 1223568-1.html
 load 1223568-2.html
 load 1224230-1.html
 load 1225118.html
 load 1225376.html
 load 1225592.html
-asserts(6) load 1227493-1.html
+asserts(4) load 1227493-1.html
 load 1229437-1.html
 load 1229437-2.html
 load details-containing-only-text.html
 load details-display-none-summary-1.html
 load details-display-none-summary-2.html
 load details-display-none-summary-3.html
 load details-open-overflow-auto.html
 load details-open-overflow-hidden.html

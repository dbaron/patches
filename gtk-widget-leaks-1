Some cleanup of shutdown leaks in GTK widget code.

diff --git a/widget/src/gtk2/nsLookAndFeel.cpp b/widget/src/gtk2/nsLookAndFeel.cpp
--- a/widget/src/gtk2/nsLookAndFeel.cpp
+++ b/widget/src/gtk2/nsLookAndFeel.cpp
@@ -75,18 +75,17 @@ nsLookAndFeel::nsLookAndFeel() : nsXPLoo
     if (!sInitialized) {
         sInitialized = PR_TRUE;
         InitLookAndFeel();
     }
 }
 
 nsLookAndFeel::~nsLookAndFeel()
 {
-    //  gtk_widget_destroy(mWidget);
-    gtk_widget_unref(mWidget);
+    g_object_unref(mStyle);
 }
 
 nsresult nsLookAndFeel::NativeGetColor(const nsColorID aID, nscolor& aColor)
 {
     nsresult res = NS_OK;
 
     switch (aID) {
         // These colors don't seem to be used for anything anymore in Mozilla
@@ -777,16 +776,15 @@ nsLookAndFeel::GetPasswordCharacter()
     return sInvisibleCharacter;
 }
 
 NS_IMETHODIMP
 nsLookAndFeel::LookAndFeelChanged()
 {
     nsXPLookAndFeel::LookAndFeelChanged();
 
-    if (mWidget)
-        gtk_widget_unref(mWidget);
+    g_object_unref(mStyle);
  
     InitWidget();
     InitLookAndFeel();
 
     return NS_OK;
 }
diff --git a/widget/src/gtk2/nsLookAndFeel.h b/widget/src/gtk2/nsLookAndFeel.h
--- a/widget/src/gtk2/nsLookAndFeel.h
+++ b/widget/src/gtk2/nsLookAndFeel.h
@@ -51,17 +51,16 @@ public:
     nsresult NativeGetColor(const nsColorID aID, nscolor &aColor);
     NS_IMETHOD GetMetric(const nsMetricID aID, PRInt32 & aMetric);
     NS_IMETHOD GetMetric(const nsMetricFloatID aID, float & aMetric);
     NS_IMETHOD LookAndFeelChanged();
     virtual PRUnichar GetPasswordCharacter();
 
 protected:
     GtkStyle *mStyle;
-    GtkWidget *mWidget;
 
     // Cached colors, we have to create a dummy widget to actually
     // get the style
 
     static nscolor sInfoBackground;
     static nscolor sInfoText;
     static nscolor sMenuBackground;
     static nscolor sMenuText;
@@ -73,17 +72,18 @@ protected:
     static nscolor sButtonInnerDarkBorder;
     static nscolor sOddCellBackground;
     static nscolor sNativeHyperLinkText;
     static PRUnichar sInvisibleCharacter;
     static float   sCaretRatio;
 
     static void InitLookAndFeel();
     void InitWidget() {
-        mWidget = gtk_invisible_new();
-        gtk_object_ref(GTK_OBJECT(mWidget));
-        gtk_object_sink(GTK_OBJECT(mWidget));
-        gtk_widget_ensure_style(mWidget);
-        mStyle = gtk_widget_get_style(mWidget);
+        GtkWidget *widget = gtk_invisible_new();
+        gtk_object_ref(GTK_OBJECT(widget));
+        gtk_object_sink(GTK_OBJECT(widget));
+        gtk_widget_ensure_style(widget);
+        mStyle = gtk_style_copy(gtk_widget_get_style(widget));
+        gtk_widget_unref(widget);
     }
 };
 
 #endif

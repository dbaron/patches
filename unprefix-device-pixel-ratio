From: L. David Baron <dbaron@dbaron.org>

Bug 771329 - Add support for unprefixed device-pixel-ratio.

diff --git a/dom/base/nsGkAtomList.h b/dom/base/nsGkAtomList.h
--- a/dom/base/nsGkAtomList.h
+++ b/dom/base/nsGkAtomList.h
@@ -2216,16 +2216,17 @@ GK_ATOM(_moz_mac_lion_theme, "-moz-mac-l
 GK_ATOM(_moz_mac_yosemite_theme, "-moz-mac-yosemite-theme")
 GK_ATOM(_moz_windows_compositor, "-moz-windows-compositor")
 GK_ATOM(_moz_windows_classic, "-moz-windows-classic")
 GK_ATOM(_moz_windows_glass, "-moz-windows-glass")
 GK_ATOM(_moz_windows_theme, "-moz-windows-theme")
 GK_ATOM(_moz_os_version, "-moz-os-version")
 GK_ATOM(_moz_touch_enabled, "-moz-touch-enabled")
 GK_ATOM(_moz_menubar_drag, "-moz-menubar-drag")
+GK_ATOM(device_pixel_ratio, "device-pixel-ratio")
 GK_ATOM(_moz_device_pixel_ratio, "-moz-device-pixel-ratio")
 GK_ATOM(_moz_device_orientation, "-moz-device-orientation")
 GK_ATOM(_moz_is_resource_document, "-moz-is-resource-document")
 GK_ATOM(_moz_swipe_animation_enabled, "-moz-swipe-animation-enabled")
 GK_ATOM(_moz_physical_home_button, "-moz-physical-home-button")
 
 // application commands
 GK_ATOM(Back, "Back")
diff --git a/layout/style/nsMediaFeatures.cpp b/layout/style/nsMediaFeatures.cpp
--- a/layout/style/nsMediaFeatures.cpp
+++ b/layout/style/nsMediaFeatures.cpp
@@ -529,16 +529,26 @@ nsMediaFeatures::features[] = {
         nsMediaFeature::eFloat,
         nsMediaFeature::eHasWebkitPrefix,
         { nullptr },
         GetDevicePixelRatio
     },
 
     // Mozilla extensions
     {
+        // unprefixed
+        &nsGkAtoms::device_pixel_ratio,
+        nsMediaFeature::eMinMaxAllowed,
+        nsMediaFeature::eFloat,
+        nsMediaFeature::eNoRequirements,
+        { nullptr },
+        GetDevicePixelRatio
+    },
+    {
+        // prefixed; unprefixed supported above
         &nsGkAtoms::_moz_device_pixel_ratio,
         nsMediaFeature::eMinMaxAllowed,
         nsMediaFeature::eFloat,
         nsMediaFeature::eNoRequirements,
         { nullptr },
         GetDevicePixelRatio
     },
     {
diff --git a/layout/style/test/test_media_queries.html b/layout/style/test/test_media_queries.html
--- a/layout/style/test/test_media_queries.html
+++ b/layout/style/test/test_media_queries.html
@@ -111,16 +111,20 @@ function run() {
 
   function expression_should_not_be_parseable(e) {
     ok(!expression_is_parseable(e),
        "expression " + e + " should not be parseable");
   }
 
   // Helper to share code between -moz & -webkit device-pixel-ratio versions:
   function test_device_pixel_ratio(equal_name, min_name, max_name) {
+    expression_should_be_parseable(equal_name + ": 1.0");
+    expression_should_be_parseable(min_name + ": 1.0");
+    expression_should_be_parseable(max_name + ": 1.0");
+
     var real_dpr = 1.0 * getScreenPixelsPerCSSPixel();
     var high_dpr = 1.1 * getScreenPixelsPerCSSPixel();
     var low_dpr = 0.9 * getScreenPixelsPerCSSPixel();
     should_apply("all and (" + max_name + ": " + real_dpr + ")");
     should_apply("all and (" + min_name + ": " + real_dpr + ")");
     should_not_apply("not all and (" + max_name + ": " + real_dpr + ")");
     should_not_apply("not all and (" + min_name + ": " + real_dpr + ")");
     should_apply("all and (" + min_name + ": " + low_dpr + ")");
@@ -425,25 +429,19 @@ function run() {
   // Tests for -moz- & -webkit versions of "device-pixel-ratio"
   // (Note that the vendor prefixes go in different places.)
   test_device_pixel_ratio("-moz-device-pixel-ratio",
                           "min--moz-device-pixel-ratio",
                           "max--moz-device-pixel-ratio");
   test_device_pixel_ratio("-webkit-device-pixel-ratio",
                           "-webkit-min-device-pixel-ratio",
                           "-webkit-max-device-pixel-ratio");
-
-  // Make sure that we don't accidentally start accepting *unprefixed*
-  // "device-pixel-ratio" expressions:
-  expression_should_be_parseable("-webkit-device-pixel-ratio: 1.0");
-  expression_should_not_be_parseable("device-pixel-ratio: 1.0");
-  expression_should_be_parseable("-webkit-min-device-pixel-ratio: 1.0");
-  expression_should_not_be_parseable("min-device-pixel-ratio: 1.0");
-  expression_should_be_parseable("-webkit-max-device-pixel-ratio: 1.0");
-  expression_should_not_be_parseable("max-device-pixel-ratio: 1.0");
+  test_device_pixel_ratio("device-pixel-ratio",
+                          "min-device-pixel-ratio",
+                          "max-device-pixel-ratio");
 
   features = [ "max-aspect-ratio", "device-aspect-ratio" ];
   for (i in features) {
     feature = features[i];
     expression_should_be_parseable(feature + ": 1/1");
     expression_should_be_parseable(feature + ": 1  /1");
     expression_should_be_parseable(feature + ": 1  / \t\n1");
     expression_should_be_parseable(feature + ": 1/\r1");

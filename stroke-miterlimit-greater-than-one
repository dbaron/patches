Enforce the restriction that values of stroke-miterlimit are greater than 1, rather than just using ParsePositiveVariant.  (Bug 470706)  r=jwatt

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -5454,18 +5454,20 @@ CSSParserImpl::ParseSingleValueProperty(
                         nsnull);
   case eCSSProperty_stroke_linecap:
     return ParseVariant(aValue, VARIANT_HK,
                         nsCSSProps::kStrokeLinecapKTable);
   case eCSSProperty_stroke_linejoin:
     return ParseVariant(aValue, VARIANT_HK,
                         nsCSSProps::kStrokeLinejoinKTable);
   case eCSSProperty_stroke_miterlimit:
-    return ParsePositiveVariant(aValue, VARIANT_HN,
-                                nsnull);
+    return ParseVariant(aValue, VARIANT_HN, nsnull) &&
+           // Enforce the restriction that the value is greater than 1.
+           (aValue.GetUnit() != eCSSUnit_Number || 
+            aValue.GetFloatValue() >= 1.0f);
   case eCSSProperty_stroke_opacity:
     return ParseVariant(aValue, VARIANT_HN,
                         nsnull);
   case eCSSProperty_stroke_width:
     return ParsePositiveVariant(aValue, VARIANT_HLPN,
                         nsnull);
   case eCSSProperty_text_anchor:
     return ParseVariant(aValue, VARIANT_HK,
diff --git a/layout/style/test/property_database.js b/layout/style/test/property_database.js
--- a/layout/style/test/property_database.js
+++ b/layout/style/test/property_database.js
@@ -1965,18 +1965,18 @@ var gCSSProperties = {
 		other_values: [ "round", "bevel" ],
 		invalid_values: []
 	},
 	"stroke-miterlimit": {
 		domProp: null,
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "4" ],
-		other_values: [ "1", "7", "5000" ],
-		invalid_values: [ "0.9", "0", "-1", "3px" ]
+		other_values: [ "1", "7", "5000", "1.1" ],
+		invalid_values: [ "0.9", "0", "-1", "3px", "-0.3" ]
 	},
 	"stroke-opacity": {
 		domProp: null,
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "1", "2.8", "1.000" ],
 		other_values: [ "0", "0.3", "-7.3" ],
 		invalid_values: []
diff --git a/layout/style/test/test_property_syntax_errors.html b/layout/style/test/test_property_syntax_errors.html
--- a/layout/style/test/test_property_syntax_errors.html
+++ b/layout/style/test/test_property_syntax_errors.html
@@ -20,18 +20,17 @@
 <script class="testbody" type="text/javascript">
 
 var gDeclaration = document.getElementById("testnode").style;
 
 var gKnownFails = {
   "pitch-range": [ " -0.01", "100.2", "108", "-3" ],
   "richness": [ " -0.01", "100.2", "108", "-3" ],
   "stress": [ " -0.01", "100.2", "108", "-3" ],
-  "volume": [ " -0.01", "100.2", "108", "-3" ],
-  "stroke-miterlimit": [ "0.9", "0" ]
+  "volume": [ " -0.01", "100.2", "108", "-3" ]
 }
 
 for (var property in gCSSProperties) {
   var info = gCSSProperties[property];
   for (var idx in info.invalid_values) {
     var badval = info.invalid_values[idx];
 
     gDeclaration.setProperty(property, badval, "");

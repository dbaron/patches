From: L. David Baron <dbaron@dbaron.org>

Media queries spec defines <resolution> values as allowing <number>, not just <integer>.

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -1888,18 +1888,17 @@ CSSParserImpl::ParseMediaQueryExpression
              ParseVariant(a->Item(1), VARIANT_INTEGER, nsnull) &&
              a->Item(1).GetIntValue() > 0;
       }
       break;
     case nsMediaFeature::eResolution:
       rv = GetToken(PR_TRUE);
       if (!rv)
         break;
-      rv = mToken.mType == eCSSToken_Dimension &&
-           mToken.mIntegerValid && mToken.mNumber > 0.0f;
+      rv = mToken.mType == eCSSToken_Dimension && mToken.mNumber > 0.0f;
       if (!rv) {
         UngetToken();
         break;
       }
       // No worries about whether unitless zero is allowed, since the
       // value must be positive (and we checked that above).
       NS_ASSERTION(!mToken.mIdent.IsEmpty(), "unit lied");
       if (mToken.mIdent.LowerCaseEqualsLiteral("dpi")) {
diff --git a/layout/style/test/test_media_queries.html b/layout/style/test/test_media_queries.html
--- a/layout/style/test/test_media_queries.html
+++ b/layout/style/test/test_media_queries.html
@@ -457,18 +457,18 @@ function run() {
   should_apply("(max-color-index: 1)");
   should_apply("(max-color-index: 157)");
 
   features = [ "resolution", "min-resolution", "max-resolution" ];
   for (i in features) {
     feature = features[i];
     expression_should_be_parseable(feature + ": 3dpi");
     expression_should_be_parseable(feature + ":3dpi");
-    expression_should_not_be_parseable(feature + ": 3.0dpi");
-    expression_should_not_be_parseable(feature + ": 3.4dpi");
+    expression_should_be_parseable(feature + ": 3.0dpi");
+    expression_should_be_parseable(feature + ": 3.4dpi");
     expression_should_be_parseable(feature + "\t: 120dpcm");
     expression_should_not_be_parseable(feature + ": 0dpi");
     expression_should_not_be_parseable(feature + ": -3dpi");
   }
 
   // Find the resolution using max-resolution
   var resolution = 0;
   do {

From: L. David Baron <dbaron@dbaron.org>

Add previously-skipped border and outline properties to nsStyleAnimation.  (Bug 521292)

diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -571,20 +571,18 @@ CSS_PROP_BORDER(
     border_bottom_color,
     BorderBottomColor,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mBottom,
     eCSSType_Value,
     kBorderColorKTable,
-    // FIXME: should be animatable (but currently involves complex split
-    // between color and an extra bit on the style, all private members)
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-bottom-colors,
     border_bottom_colors,
     MozBorderBottomColors,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColors.mBottom,
@@ -608,17 +606,17 @@ CSS_PROP_BORDER(
     border_bottom_width,
     BorderBottomWidth,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mBottom,
     eCSSType_Value,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_TABLEBORDER(
     border-collapse,
     border_collapse,
     BorderCollapse,
     0,
     Table,
     mBorderCollapse,
     eCSSType_Value,
@@ -716,20 +714,18 @@ CSS_PROP_BORDER(
     border_left_color_value,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mLeft,
     eCSSType_Value,
     kBorderColorKTable,
-    // FIXME: should be animatable (but currently involves complex split
-    // between color and an extra bit on the style, all private members)
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-color-ltr-source,
     border_left_color_ltr_source,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_DIRECTIONAL_SOURCE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
@@ -817,17 +813,17 @@ CSS_PROP_BORDER(
     border_left_width_value,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mLeft,
     eCSSType_Value,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-width-ltr-source,
     border_left_width_ltr_source,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_DIRECTIONAL_SOURCE,
     Margin,
     mBorderLeftWidthLTRSource,
@@ -864,20 +860,18 @@ CSS_PROP_BORDER(
     border_right_color_value,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mRight,
     eCSSType_Value,
     kBorderColorKTable,
-    // FIXME: should be animatable (but currently involves complex split
-    // between color and an extra bit on the style, all private members)
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-color-ltr-source,
     border_right_color_ltr_source,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_DIRECTIONAL_SOURCE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
@@ -965,17 +959,17 @@ CSS_PROP_BORDER(
     border_right_width_value,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mRight,
     eCSSType_Value,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-width-ltr-source,
     border_right_width_ltr_source,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_DIRECTIONAL_SOURCE,
     Margin,
     mBorderRightWidthLTRSource,
@@ -1081,20 +1075,18 @@ CSS_PROP_BORDER(
     border_top_color,
     BorderTopColor,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mTop,
     eCSSType_Value,
     kBorderColorKTable,
-    // FIXME: should be animatable (but currently involves complex split
-    // between color and an extra bit on the style, all private members)
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-top-colors,
     border_top_colors,
     MozBorderTopColors,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColors.mTop,
@@ -1118,17 +1110,17 @@ CSS_PROP_BORDER(
     border_top_width,
     BorderTopWidth,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mTop,
     eCSSType_Value,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_SHORTHAND(
     border-width,
     border_width,
     BorderWidth,
     0)
 CSS_PROP_POSITION(
     bottom,
     bottom,
@@ -1850,20 +1842,18 @@ CSS_PROP_OUTLINE(
     outline-color,
     outline_color,
     OutlineColor,
     CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mOutlineColor,
     eCSSType_Value,
     kOutlineColorKTable,
-    // FIXME: should be animatable (but currently involves complex split
-    // between color and an extra bit on the style, all private members)
     CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    eStyleAnimType_Custom)
 CSS_PROP_OUTLINE(
     outline-style,
     outline_style,
     OutlineStyle,
     0,
     Margin,
     mOutlineStyle,
     eCSSType_Value,
diff --git a/layout/style/nsCSSProps.h b/layout/style/nsCSSProps.h
--- a/layout/style/nsCSSProps.h
+++ b/layout/style/nsCSSProps.h
@@ -64,16 +64,20 @@
 // Note that 'background-color' is ignored differently from the other
 // properties that have this set, but that's just special-cased.
 #define CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED (1<<4)
 
 /**
  * Types of animatable values.
  */
 enum nsStyleAnimType {
+  // requires a custom implementation in
+  // nsStyleAnimation::ExtractComputedValue
+  eStyleAnimType_Custom,
+
   // nsStyleCoord with animatable values
   eStyleAnimType_Coord,
 
   // same as Coord, except for one side of an nsStyleSides
   // listed in the same order as the NS_STYLE_* constants
   eStyleAnimType_Sides_Top,
   eStyleAnimType_Sides_Right,
   eStyleAnimType_Sides_Bottom,
diff --git a/layout/style/nsStyleAnimation.cpp b/layout/style/nsStyleAnimation.cpp
--- a/layout/style/nsStyleAnimation.cpp
+++ b/layout/style/nsStyleAnimation.cpp
@@ -498,30 +498,100 @@ StyleDataAtOffset(const void* aStyleStru
 }
 
 inline void*
 StyleDataAtOffset(void* aStyleStruct, ptrdiff_t aOffset)
 {
   return reinterpret_cast<char*>(aStyleStruct) + aOffset;
 }
 
+static void
+ExtractBorderColor(nsStyleContext* aStyleContext, const void* aStyleBorder,
+                   PRUint8 aSide, nsStyleCoord& aComputedValue)
+{
+  nscolor color; 
+  PRBool foreground;
+  static_cast<const nsStyleBorder*>(aStyleBorder)->
+    GetBorderColor(aSide, color, foreground);
+  if (foreground) {
+    // FIXME: should add test for this
+    color = aStyleContext->GetStyleColor()->mColor;
+  }
+  aComputedValue.SetColorValue(color);
+}
+
 PRBool
 nsStyleAnimation::ExtractComputedValue(nsCSSProperty aProperty,
                                        nsStyleContext* aStyleContext,
                                        nsStyleCoord& aComputedValue)
 {
   NS_ABORT_IF_FALSE(0 <= aProperty &&
                     aProperty < eCSSProperty_COUNT_no_shorthands,
                     "bad property");
   const void* styleStruct =
     aStyleContext->GetStyleData(nsCSSProps::kSIDTable[aProperty]);
   ptrdiff_t ssOffset = nsCSSProps::kStyleStructOffsetTable[aProperty];
-  NS_ABORT_IF_FALSE(0 <= ssOffset, "must be dealing with animatable property");
   nsStyleAnimType animType = nsCSSProps::kAnimTypeTable[aProperty];
+  NS_ABORT_IF_FALSE(0 <= ssOffset || animType == eStyleAnimType_Custom,
+                    "must be dealing with animatable property");
   switch (animType) {
+    case eStyleAnimType_Custom:
+      switch (aProperty) {
+        // For border-width, ignore the border-image business (which
+        // only exists until we update our implementation to the current
+        // spec) and use GetComputedBorder
+        
+        #define BORDER_WIDTH_CASE(prop_, side_)                               \
+        case prop_:                                                           \
+          aComputedValue.SetCoordValue(                                       \
+            static_cast<const nsStyleBorder*>(styleStruct)->                  \
+              GetComputedBorder().side_);                                     \
+          break;
+        BORDER_WIDTH_CASE(eCSSProperty_border_bottom_width, bottom)
+        BORDER_WIDTH_CASE(eCSSProperty_border_left_width_value, left)
+        BORDER_WIDTH_CASE(eCSSProperty_border_right_width_value, right)
+        BORDER_WIDTH_CASE(eCSSProperty_border_top_width, top)
+        #undef BORDER_WIDTH_CASE
+
+        case eCSSProperty_border_bottom_color:
+          ExtractBorderColor(aStyleContext, styleStruct, NS_SIDE_BOTTOM,
+                             aComputedValue);
+          break;
+        case eCSSProperty_border_left_color_value:
+          ExtractBorderColor(aStyleContext, styleStruct, NS_SIDE_LEFT,
+                             aComputedValue);
+          break;
+        case eCSSProperty_border_right_color_value:
+          ExtractBorderColor(aStyleContext, styleStruct, NS_SIDE_RIGHT,
+                             aComputedValue);
+          break;
+        case eCSSProperty_border_top_color:
+          ExtractBorderColor(aStyleContext, styleStruct, NS_SIDE_TOP,
+                             aComputedValue);
+          break;
+
+        case eCSSProperty_outline_color: {
+          const nsStyleOutline *styleOutline =
+            static_cast<const nsStyleOutline*>(styleStruct);
+          nscolor color;
+        #ifdef GFX_HAS_INVERT
+          styleOutline->GetOutlineColor(color);
+        #else
+          if (!styleOutline->GetOutlineColor(color))
+            color = aStyleContext->GetStyleColor()->mColor;
+        #endif
+          aComputedValue.SetColorValue(color);
+          break;
+        }
+
+        default:
+          NS_ABORT_IF_FALSE(PR_FALSE, "missing property implementation");
+          return PR_FALSE;
+      };
+      return PR_TRUE;
     case eStyleAnimType_Coord:
       aComputedValue = *static_cast<const nsStyleCoord*>(
         StyleDataAtOffset(styleStruct, ssOffset));
       return PR_TRUE;
     case eStyleAnimType_Sides_Top:
     case eStyleAnimType_Sides_Right:
     case eStyleAnimType_Sides_Bottom:
     case eStyleAnimType_Sides_Left:
diff --git a/layout/style/test/test_transitions_per_property.html b/layout/style/test/test_transitions_per_property.html
--- a/layout/style/test/test_transitions_per_property.html
+++ b/layout/style/test/test_transitions_per_property.html
@@ -45,16 +45,24 @@ function any_unit_to_num(str)
     return Number(String(str).match(/^([\d.]+)/)[1]);
 }
 
 var supported_properties = {
     "-moz-column-gap": [ test_length_transition ],
     "-moz-column-rule-color": [ test_color_transition ],
     "-moz-column-width": [ test_length_transition ],
     "background-color": [ test_color_transition ],
+    "border-bottom-color": [ test_color_transition ],
+    "border-bottom-width": [ test_length_transition ],
+    "border-left-color": [ test_color_transition ],
+    "border-left-width": [ test_length_transition ],
+    "border-right-color": [ test_color_transition ],
+    "border-right-width": [ test_length_transition ],
+    "border-top-color": [ test_color_transition ],
+    "border-top-width": [ test_length_transition ],
     "bottom": [ test_length_transition, test_percent_transition ],
     "color": [ test_color_transition ],
     "fill": [ test_color_transition ],
     "flood-color": [ test_color_transition ],
     "font-size": [ test_length_transition, test_percent_transition ],
     "height": [ test_length_transition, test_percent_transition ],
     "left": [ test_length_transition, test_percent_transition ],
     "letter-spacing": [ test_length_transition ],
@@ -64,16 +72,17 @@ var supported_properties = {
     "margin-left": [ test_length_transition, test_percent_transition ],
     "margin-right": [ test_length_transition, test_percent_transition ],
     "margin-top": [ test_length_transition, test_percent_transition ],
     "marker-offset": [ test_length_transition ],
     "max-height": [ test_length_transition, test_percent_transition ],
     "max-width": [ test_length_transition, test_percent_transition ],
     "min-height": [ test_length_transition, test_percent_transition ],
     "min-width": [ test_length_transition, test_percent_transition ],
+    "outline-color": [ test_color_transition ],
     "outline-offset": [ test_length_transition ],
     "outline-width": [ test_length_transition ],
     "padding-bottom": [ test_length_transition, test_percent_transition ],
     "padding-left": [ test_length_transition, test_percent_transition ],
     "padding-right": [ test_length_transition, test_percent_transition ],
     "padding-top": [ test_length_transition, test_percent_transition ],
     "right": [ test_length_transition, test_percent_transition ],
     "stop-color": [ test_color_transition ],

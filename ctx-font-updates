From: L. David Baron <dbaron@dbaron.org>

Update to latest spec changes for ctx.font setter and getter.  (Bug 508452)

diff --git a/content/canvas/src/nsCanvasRenderingContext2D.cpp b/content/canvas/src/nsCanvasRenderingContext2D.cpp
--- a/content/canvas/src/nsCanvasRenderingContext2D.cpp
+++ b/content/canvas/src/nsCanvasRenderingContext2D.cpp
@@ -63,16 +63,17 @@
 
 #include "nsIInterfaceRequestorUtils.h"
 #include "nsIFrame.h"
 #include "nsDOMError.h"
 #include "nsIScriptError.h"
 
 #include "nsCSSParser.h"
 #include "nsICSSStyleRule.h"
+#include "nsCSSDeclaration.h"
 #include "nsComputedDOMStyle.h"
 #include "nsStyleSet.h"
 
 #include "nsPrintfCString.h"
 
 #include "nsReadableUtils.h"
 
 #include "nsColor.h"
@@ -2029,18 +2030,16 @@ CreateFontStyleRule(const nsAString& aFo
         return rv;
 
     rv = parser.ParseProperty(eCSSProperty_font, aFont, docURL, baseURL,
                               principal, rule->GetDeclaration(), &changed,
                               PR_FALSE);
     if (NS_FAILED(rv))
         return rv;
 
-    rule->RuleMatched();
-
     rule.forget(aResult);
     return NS_OK;
 }
 
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetFont(const nsAString& font)
 {
     nsresult rv;
@@ -2066,16 +2065,39 @@ nsCanvasRenderingContext2D::SetFont(cons
 
     nsCOMArray<nsIStyleRule> rules;
 
     nsCOMPtr<nsICSSStyleRule> rule;
     rv = CreateFontStyleRule(font, document, getter_AddRefs(rule));
     if (NS_FAILED(rv))
         return rv;
 
+    nsCSSDeclaration *declaration = rule->GetDeclaration();
+    if (!declaration->EnsureMutable())
+        return NS_ERROR_OUT_OF_MEMORY;
+    // The easiest way to see whether we got a syntax error or whether
+    // we got 'inherit' or 'initial' is to look at font-size-adjust,
+    // which the shorthand resets to either 'none' or
+    // '-moz-system-font'.
+    nsCSSValue *fsaVal = static_cast<nsCSSValue*>(
+        declaration->SlotForValue(eCSSProperty_font_size_adjust));
+    if (!fsaVal || (fsaVal->GetUnit() != eCSSUnit_None &&
+                    fsaVal->GetUnit() != eCSSUnit_System_Font)) {
+        // We got an all-property value or a syntax error.  The spec says
+        // this value must be ignored.
+        return NS_OK;
+    }
+
+    // set line height to normal, as per spec
+    nsCSSValue *lhVal = static_cast<nsCSSValue*>(
+        declaration->SlotForValue(eCSSProperty_line_height));
+    NS_ASSERTION(lhVal, "should have since we parsed a font shorthand");
+    lhVal->SetNormalValue();
+
+    rule->RuleMatched();
     rules.AppendObject(rule);
 
     nsStyleSet* styleSet = presShell->StyleSet();
 
     // have to get a parent style context for inherit-like relative
     // values (2em, bolder, etc.)
     nsRefPtr<nsStyleContext> parentContext;
 
@@ -2088,16 +2110,17 @@ nsCanvasRenderingContext2D::SetFont(cons
     } else {
         // otherwise inherit from default (10px sans-serif)
         nsCOMPtr<nsICSSStyleRule> parentRule;
         rv = CreateFontStyleRule(NS_LITERAL_STRING("10px sans-serif"),
                                  document,
                                  getter_AddRefs(parentRule));
         if (NS_FAILED(rv))
             return rv;
+        parentRule->RuleMatched();
         nsCOMArray<nsIStyleRule> parentRules;
         parentRules.AppendObject(parentRule);
         parentContext = styleSet->ResolveStyleForRules(nsnull, parentRules);
     }
 
     if (!parentContext)
         return NS_ERROR_FAILURE;
 
@@ -2132,17 +2155,23 @@ nsCanvasRenderingContext2D::SetFont(cons
                        fontStyle->mFont.familyNameQuirks,
                        printerFont);
 
     CurrentState().fontGroup =
         gfxPlatform::GetPlatform()->CreateFontGroup(fontStyle->mFont.name,
                                                     &style,
                                                     presShell->GetPresContext()->GetUserFontSet());
     NS_ASSERTION(CurrentState().fontGroup, "Could not get font group");
-    CurrentState().font = font;
+
+    // The font getter is required to be reserialized based on what we
+    // parsed (including having line-height removed).  (Older drafts of
+    // the spec required font sizes be converted to pixels, but that no
+    // longer seems to be required.)
+    declaration->GetValue(eCSSProperty_font, CurrentState().font);
+
     return NS_OK;
 }
 
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::GetFont(nsAString& font)
 {
     /* will initilize the value if not set, else does nothing */
     GetCurrentFontStyle();
diff --git a/content/canvas/test/test_canvas_font_setter.html b/content/canvas/test/test_canvas_font_setter.html
--- a/content/canvas/test/test_canvas_font_setter.html
+++ b/content/canvas/test/test_canvas_font_setter.html
@@ -13,17 +13,55 @@ https://bugzilla.mozilla.org/show_bug.cg
 <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=">Mozilla Bug </a>
 <canvas id="display" height="200" width="200"></canvas>
 <pre id="test">
 <script type="application/javascript">
 
 var canvas = document.getElementById("display");
 var cx = canvas.getContext("2d");
 
+is(cx.font, "10px sans-serif", "initial font of canvas context");
+
 cx.font = "italic 16px sans-serif";
 is(cx.font, "italic 16px sans-serif", "valid font should round-trip");
 cx.font = "bold 12px serif; background: green";
 is(cx.font, "italic 16px sans-serif", "invalid font should be ignored");
 
+cx.font = "bold 12px/3.0 serif";
+is(cx.font, "bold 12px serif", "line-height should be dropped");
+cx.font = "inherit";
+is(cx.font, "bold 12px serif", "inherit should be ignored");
+cx.font = "menu";
+todo_is(cx.font, "menu", "system fonts should work");
+
+function textmeas() {
+  return cx.measureText("hello").width;
+}
+
+cx.font = "66px serif";
+var w_at_66 = textmeas();
+cx.font = "20px serif";
+var w_at_20 = textmeas();
+ok(w_at_66 > w_at_20, "text should be wider at 66px than at 20px");
+
+canvas.style.fontSize = "33px";
+cx.font = "2em serif";
+is(cx.font, "2em serif", "serialization of em");
+is(textmeas(), w_at_66, "em should be relative to canvas font size");
+canvas.style.fontSize = "16px";
+is(cx.font, "2em serif", "serialization of em");
+is(textmeas(), w_at_66,
+   "em should be relative to canvas font size at time of setting");
+document.body.removeChild(canvas);
+is(cx.font, "2em serif", "serialization of em");
+is(textmeas(), w_at_66,
+   "em should be relative to canvas font size at time of setting");
+canvas.style.fontSize = "33px";
+cx.font = "2em serif";
+is(cx.font, "2em serif", "serialization of em");
+is(textmeas(), w_at_20,
+   "em should be relative to 10px when canvas not in document");
+document.body.appendChild(canvas);
+
 </script>
 </pre>
 </body>
 </html>

From: L. David Baron <dbaron@dbaron.org>

Don't repeatedly try to initialize GLXLibrary.  (Bug 605992)

diff --git a/gfx/thebes/GLContextProviderGLX.cpp b/gfx/thebes/GLContextProviderGLX.cpp
--- a/gfx/thebes/GLContextProviderGLX.cpp
+++ b/gfx/thebes/GLContextProviderGLX.cpp
@@ -67,16 +67,22 @@ static int gGLXVersion = 0;
 
 PRBool
 GLXLibrary::EnsureInitialized()
 {
     if (mInitialized) {
         return PR_TRUE;
     }
 
+    // Don't repeatedly try to initialize.
+    if (mTriedInitializing) {
+        return PR_FALSE;
+    }
+    mTriedInitializing = PR_TRUE;
+
     if (!mOGLLibrary) {
         mOGLLibrary = PR_LoadLibrary("libGL.so.1");
         if (!mOGLLibrary) {
 	    NS_WARNING("Couldn't load OpenGL shared library.");
 	    return PR_FALSE;
         }
     }
 
diff --git a/gfx/thebes/GLXLibrary.h b/gfx/thebes/GLXLibrary.h
--- a/gfx/thebes/GLXLibrary.h
+++ b/gfx/thebes/GLXLibrary.h
@@ -40,17 +40,18 @@ typedef realGLboolean GLboolean;
 #include <GL/glx.h>
 
 namespace mozilla {
 namespace gl {
 
 class GLXLibrary
 {
 public:
-    GLXLibrary() : mInitialized(PR_FALSE), mOGLLibrary(nsnull) {}
+    GLXLibrary() : mInitialized(PR_FALSE), mTriedInitializing(PR_FALSE),
+                   mOGLLibrary(nsnull) {}
 
     typedef void (GLAPIENTRY * PFNGLXDESTROYCONTEXTPROC) (Display*,
                                                           GLXContext);
     PFNGLXDESTROYCONTEXTPROC xDestroyContext;
     typedef Bool (GLAPIENTRY * PFNGLXMAKECURRENTPROC) (Display*,
                                                        GLXDrawable,
                                                        GLXContext);
     PFNGLXMAKECURRENTPROC xMakeCurrent;
@@ -109,16 +110,17 @@ public:
                                                            GLXContext,
                                                            Bool);
     PFNGLXCREATECONTEXT xCreateContext;
 
     PRBool EnsureInitialized();
 
 private:
     PRBool mInitialized;
+    PRBool mTriedInitializing;
     PRLibrary *mOGLLibrary;
 };
 
 // a global GLXLibrary instance
 extern GLXLibrary sGLXLibrary;
 
 } /* namespace gl */
 } /* namespace mozilla */

From: L. David Baron <dbaron@dbaron.org>

Fix variable shadowing that would become noisy with -Wshadow enabled.  (Bug 563195)

diff --git a/js/src/jsapi.h b/js/src/jsapi.h
--- a/js/src/jsapi.h
+++ b/js/src/jsapi.h
@@ -630,27 +630,27 @@ class JSAutoSuspendRequest {
     static void operator delete(void *, size_t) { };
 #endif
 };
 
 class JSAutoTransferRequest
 {
   public:
     JSAutoTransferRequest(JSContext* cx1, JSContext* cx2)
-        : cx1(cx1), cx2(cx2) {
-        if(cx1 != cx2)
-            JS_TransferRequest(cx1, cx2);
+        : mContext1(cx1), mContext2(cx2) {
+        if (mContext1 != mContext2)
+            JS_TransferRequest(mContext1, mContext2);
     }
     ~JSAutoTransferRequest() {
-        if(cx1 != cx2)
-            JS_TransferRequest(cx2, cx1);
+        if (mContext1 != mContext2)
+            JS_TransferRequest(mContext2, mContext1);
     }
   private:
-    JSContext* const cx1;
-    JSContext* const cx2;
+    JSContext* const mContext1;
+    JSContext* const mContext2;
 
     /* Not copyable. */
     JSAutoTransferRequest(JSAutoTransferRequest &);
     void operator =(JSAutoTransferRequest&);
 };
 
 JS_BEGIN_EXTERN_C
 #endif
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -183,17 +183,17 @@ JSObjectOps::isNative() const
 {
     return JS_LIKELY(this == &js_ObjectOps) || !objectMap;
 }
 
 struct JSObjectMap {
     const JSObjectOps * const   ops;    /* high level object operation vtable */
     uint32                      shape;  /* shape identifier */
 
-    explicit JSObjectMap(const JSObjectOps *ops, uint32 shape) : ops(ops), shape(shape) {}
+    explicit JSObjectMap(const JSObjectOps *opsarg, uint32 shapearg) : ops(opsarg), shape(shapearg) {}
 
     enum { SHAPELESS = 0xffffffff };
 
 private:
     /* No copy or assignment semantics. */
     JSObjectMap(JSObjectMap &);
     void operator=(JSObjectMap &);
 };

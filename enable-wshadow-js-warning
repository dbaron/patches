From: L. David Baron <dbaron@dbaron.org>

Fix variable shadowing that would become noisy with -Wshadow enabled.  (Bug 563195)

diff --git a/js/src/jsapi.h b/js/src/jsapi.h
--- a/js/src/jsapi.h
+++ b/js/src/jsapi.h
@@ -988,20 +988,20 @@ class JS_PUBLIC_API(JSAutoCrossCompartme
     }
 };
 
 class JSAutoEnterCompartment
 {
     JSContext *cx;
     JSCompartment *compartment;
   public:
-    JSAutoEnterCompartment(JSContext *cx, JSCompartment *newCompartment) : cx(cx) {
+    JSAutoEnterCompartment(JSContext *cxarg, JSCompartment *newCompartment) : cx(cxarg) {
         compartment = js_SwitchToCompartment(cx, newCompartment);
     }
-    JSAutoEnterCompartment(JSContext *cx, JSObject *target) : cx(cx) {
+    JSAutoEnterCompartment(JSContext *cxarg, JSObject *target) : cx(cxarg) {
         compartment = js_SwitchToObjectCompartment(cx, target);
     }
     ~JSAutoEnterCompartment() {
         js_SwitchToCompartment(cx, compartment);
     }
 };
 
 JS_BEGIN_EXTERN_C
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -178,17 +178,17 @@ typedef Vector<PropDesc, 1> PropDescArra
 } /* namespace js */
 
 struct JSObjectMap {
     static JS_FRIEND_DATA(const JSObjectMap) sharedNonNative;
 
     uint32 shape;       /* shape identifier */
     uint32 slotSpan;    /* one more than maximum live slot number */
 
-    explicit JSObjectMap(uint32 shape) : shape(shape), slotSpan(0) {}
+    explicit JSObjectMap(uint32 shapearg) : shape(shapearg), slotSpan(0) {}
     JSObjectMap(uint32 shape, uint32 slotSpan) : shape(shape), slotSpan(slotSpan) {}
 
     enum { INVALID_SHAPE = 0x8fffffff, SHAPELESS = 0xffffffff };
 
     bool isNative() const { return this != &sharedNonNative; }
 
   private:
     /* No copy or assignment semantics. */

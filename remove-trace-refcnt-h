From: L. David Baron <dbaron@dbaron.org>

Move the contents of nsTraceRefcnt.h into nsISupportsImpl.h.

diff --git a/xpcom/base/nscore.h b/xpcom/base/nscore.h
--- a/xpcom/base/nscore.h
+++ b/xpcom/base/nscore.h
@@ -254,17 +254,17 @@
 #  else
 #    define NS_COM_GLUE
 #  endif
 #endif
 
 #if (defined(DEBUG) || defined(FORCE_BUILD_REFCNT_LOGGING))
 /* Make refcnt logging part of the build. This doesn't mean that
  * actual logging will occur (that requires a separate enable; see
- * nsTraceRefcnt.h for more information).  */
+ * nsTraceRefcnt and nsISupportsImpl.h for more information).  */
 #define NS_BUILD_REFCNT_LOGGING
 #endif
 
 /* If NO_BUILD_REFCNT_LOGGING is defined then disable refcnt logging
  * in the build. This overrides FORCE_BUILD_REFCNT_LOGGING. */
 #if defined(NO_BUILD_REFCNT_LOGGING)
 #undef NS_BUILD_REFCNT_LOGGING
 #endif
diff --git a/xpcom/build/XPCOM.h b/xpcom/build/XPCOM.h
--- a/xpcom/build/XPCOM.h
+++ b/xpcom/build/XPCOM.h
@@ -17,17 +17,16 @@
 #include "nscore.h"
 
 #include "nsXPCOMCID.h"
 #include "nsXPCOM.h"
 
 #include "nsError.h"
 #include "nsDebug.h"
 #include "nsMemory.h"
-#include "nsTraceRefcnt.h"
 
 #include "nsID.h"
 
 #include "nsISupports.h"
 
 #include "nsTArray.h"
 #include "nsTWeakRef.h"
 
diff --git a/xpcom/glue/moz.build b/xpcom/glue/moz.build
--- a/xpcom/glue/moz.build
+++ b/xpcom/glue/moz.build
@@ -50,17 +50,16 @@ EXPORTS += [
     'nsTArray-inl.h',
     'nsTArray.h',
     'nsTArrayForwardDeclare.h',
     'nsTextFormatter.h',
     'nsTHashtable.h',
     'nsThreadUtils.h',
     'nsTObserverArray.h',
     'nsTPriorityQueue.h',
-    'nsTraceRefcnt.h',
     'nsTWeakRef.h',
     'nsVersionComparator.h',
     'nsVoidArray.h',
     'nsWeakReference.h',
     'nsXPTCUtils.h',
     'pldhash.h',
 ]
 
diff --git a/xpcom/glue/nsISupportsImpl.h b/xpcom/glue/nsISupportsImpl.h
--- a/xpcom/glue/nsISupportsImpl.h
+++ b/xpcom/glue/nsISupportsImpl.h
@@ -21,17 +21,17 @@
 #endif
 
 
 #if !defined(XPCOM_GLUE_AVOID_NSPR)
 #include "prthread.h" /* needed for thread-safety checks */
 #endif // !XPCOM_GLUE_AVOID_NSPR
 
 #include "nsDebug.h"
-#include "nsTraceRefcnt.h"
+#include "nsXPCOM.h"
 #ifndef XPCOM_GLUE
 #include "mozilla/Atomics.h"
 #endif
 #include "mozilla/Attributes.h"
 #include "mozilla/Assertions.h"
 #include "mozilla/Likely.h"
 
 inline nsISupports*
@@ -67,16 +67,70 @@ private:
 #else // !DEBUG && !(NIGHTLY_BUILD && !MOZ_PROFILING)
 
 #define NS_DECL_OWNINGTHREAD            /* nothing */
 #define NS_ASSERT_OWNINGTHREAD_AGGREGATE(agg, _class) ((void)0)
 #define NS_ASSERT_OWNINGTHREAD(_class)  ((void)0)
 
 #endif // DEBUG || (NIGHTLY_BUILD && !MOZ_PROFILING)
 
+
+// Macros for reference-count and constructor logging
+
+#ifdef NS_BUILD_REFCNT_LOGGING
+
+#define NS_LOG_ADDREF(_p, _rc, _type, _size) \
+  NS_LogAddRef((_p), (_rc), (_type), (uint32_t) (_size))
+
+#define NS_LOG_RELEASE(_p, _rc, _type) \
+  NS_LogRelease((_p), (_rc), (_type))
+
+#define MOZ_COUNT_CTOR(_type)                                 \
+do {                                                          \
+  NS_LogCtor((void*)this, #_type, sizeof(*this));             \
+} while (0)
+
+#define MOZ_COUNT_CTOR_INHERITED(_type, _base)                    \
+do {                                                              \
+  NS_LogCtor((void*)this, #_type, sizeof(*this) - sizeof(_base)); \
+} while (0)
+
+#define MOZ_COUNT_DTOR(_type)                                 \
+do {                                                          \
+  NS_LogDtor((void*)this, #_type, sizeof(*this));             \
+} while (0)
+
+#define MOZ_COUNT_DTOR_INHERITED(_type, _base)                    \
+do {                                                              \
+  NS_LogDtor((void*)this, #_type, sizeof(*this) - sizeof(_base)); \
+} while (0)
+
+/* nsCOMPtr.h allows these macros to be defined by clients
+ * These logging functions require dynamic_cast<void*>, so they don't
+ * do anything useful if we don't have dynamic_cast<void*>. */
+#define NSCAP_LOG_ASSIGNMENT(_c, _p)                                \
+  if (_p)                                                           \
+    NS_LogCOMPtrAddRef((_c),static_cast<nsISupports*>(_p))
+
+#define NSCAP_LOG_RELEASE(_c, _p)                                   \
+  if (_p)                                                           \
+    NS_LogCOMPtrRelease((_c), static_cast<nsISupports*>(_p))
+
+#else /* !NS_BUILD_REFCNT_LOGGING */
+
+#define NS_LOG_ADDREF(_p, _rc, _type, _size)
+#define NS_LOG_RELEASE(_p, _rc, _type)
+#define MOZ_COUNT_CTOR(_type)
+#define MOZ_COUNT_CTOR_INHERITED(_type, _base)
+#define MOZ_COUNT_DTOR(_type)
+#define MOZ_COUNT_DTOR_INHERITED(_type, _base)
+
+#endif /* NS_BUILD_REFCNT_LOGGING */
+
+
 // Support for ISupports classes which interact with cycle collector.
 
 #define NS_NUMBER_OF_FLAGS_IN_REFCNT 2
 #define NS_IN_PURPLE_BUFFER (1 << 0)
 #define NS_IS_PURPLE (1 << 1)
 #define NS_REFCOUNT_CHANGE (1 << NS_NUMBER_OF_FLAGS_IN_REFCNT)
 #define NS_REFCOUNT_VALUE(_val) (_val >> NS_NUMBER_OF_FLAGS_IN_REFCNT)
 
diff --git a/xpcom/glue/nsTraceRefcnt.h b/xpcom/glue/nsTraceRefcnt.h
deleted file mode 100644
--- a/xpcom/glue/nsTraceRefcnt.h
+++ /dev/null
@@ -1,60 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-#ifndef nsTraceRefcnt_h___
-#define nsTraceRefcnt_h___
-
-#include "nsXPCOM.h"
-
-#ifdef NS_BUILD_REFCNT_LOGGING
-
-#define NS_LOG_ADDREF(_p, _rc, _type, _size) \
-  NS_LogAddRef((_p), (_rc), (_type), (uint32_t) (_size))
-
-#define NS_LOG_RELEASE(_p, _rc, _type) \
-  NS_LogRelease((_p), (_rc), (_type))
-
-#define MOZ_COUNT_CTOR(_type)                                 \
-do {                                                          \
-  NS_LogCtor((void*)this, #_type, sizeof(*this));             \
-} while (0)
-
-#define MOZ_COUNT_CTOR_INHERITED(_type, _base)                    \
-do {                                                              \
-  NS_LogCtor((void*)this, #_type, sizeof(*this) - sizeof(_base)); \
-} while (0)
-
-#define MOZ_COUNT_DTOR(_type)                                 \
-do {                                                          \
-  NS_LogDtor((void*)this, #_type, sizeof(*this));             \
-} while (0)
-
-#define MOZ_COUNT_DTOR_INHERITED(_type, _base)                    \
-do {                                                              \
-  NS_LogDtor((void*)this, #_type, sizeof(*this) - sizeof(_base)); \
-} while (0)
-
-/* nsCOMPtr.h allows these macros to be defined by clients
- * These logging functions require dynamic_cast<void*>, so they don't
- * do anything useful if we don't have dynamic_cast<void*>. */
-#define NSCAP_LOG_ASSIGNMENT(_c, _p)                                \
-  if (_p)                                                           \
-    NS_LogCOMPtrAddRef((_c),static_cast<nsISupports*>(_p))
-
-#define NSCAP_LOG_RELEASE(_c, _p)                                   \
-  if (_p)                                                           \
-    NS_LogCOMPtrRelease((_c), static_cast<nsISupports*>(_p))
-
-#else /* !NS_BUILD_REFCNT_LOGGING */
-
-#define NS_LOG_ADDREF(_p, _rc, _type, _size)
-#define NS_LOG_RELEASE(_p, _rc, _type)
-#define MOZ_COUNT_CTOR(_type)
-#define MOZ_COUNT_CTOR_INHERITED(_type, _base)
-#define MOZ_COUNT_DTOR(_type)
-#define MOZ_COUNT_DTOR_INHERITED(_type, _base)
-
-#endif /* NS_BUILD_REFCNT_LOGGING */
-
-#endif /* nsTraceRefcnt_h___ */

Fix generation of precompiled cmaps on 64-bit platforms to match what the code expects.  (Bug 445626)  r=smontagu

diff --git a/gfx/src/shared/ignorable.x-ccmap b/gfx/src/shared/ignorable.x-ccmap
--- a/gfx/src/shared/ignorable.x-ccmap
+++ b/gfx/src/shared/ignorable.x-ccmap
@@ -4304,17 +4304,17 @@
    0X0E0FFE :  
    0X0E0FFF :  
 */
 
 #if (defined(IS_LITTLE_ENDIAN) && ALU_SIZE == 64)
 // Precompiled CCMap for Little Endian(64bit)
 #define gIgnorableCCMapExt_SIZE 468
 #define gIgnorableCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0001,0x0000,0x0100,0x0000,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0100,    \
 /* 000000 */ 0x0030,0x0080,0x00B0,0x0010,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x00D0,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0020,0x0060,0x0070,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
@@ -4556,17 +4556,17 @@
 /* 0001b0 */ 0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,    \
              0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,    \
 /* 0001c0 */ 0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,    \
              0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,
 #elif (ALU_SIZE == 64)
 // Precompiled CCMap for Big Endian(64bit)
 #define gIgnorableCCMapExt_SIZE 468
 #define gIgnorableCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0000,0x0001,0x0000,0x0100,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0100,    \
 /* 000000 */ 0x0030,0x0080,0x00B0,0x0010,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x00D0,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0020,0x0060,0x0070,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
diff --git a/intl/unicharutil/src/ignorables_abjadpoints.x-ccmap b/intl/unicharutil/src/ignorables_abjadpoints.x-ccmap
--- a/intl/unicharutil/src/ignorables_abjadpoints.x-ccmap
+++ b/intl/unicharutil/src/ignorables_abjadpoints.x-ccmap
@@ -4401,17 +4401,17 @@
    0X0E0FFE :  
    0X0E0FFF :  
 */
 
 #if (defined(IS_LITTLE_ENDIAN) && ALU_SIZE == 64)
 // Precompiled CCMap for Little Endian(64bit)
 #define gIgnorableCCMapExt_SIZE 532
 #define gIgnorableCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0001,0x0000,0x0140,0x0000,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0140,    \
 /* 000000 */ 0x0030,0x0090,0x00D0,0x00F0,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0110,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0060,0x0070,0x0080,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
@@ -4685,17 +4685,17 @@
 /* 0001f0 */ 0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,    \
              0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,    \
 /* 000200 */ 0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,    \
              0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,0x0030,
 #elif (ALU_SIZE == 64)
 // Precompiled CCMap for Big Endian(64bit)
 #define gIgnorableCCMapExt_SIZE 532
 #define gIgnorableCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0000,0x0001,0x0000,0x0140,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0140,    \
 /* 000000 */ 0x0030,0x0090,0x00D0,0x00F0,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0010,0x0110,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0060,0x0070,0x0080,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
diff --git a/intl/unicharutil/tools/ccmapbin.pl b/intl/unicharutil/tools/ccmapbin.pl
--- a/intl/unicharutil/tools/ccmapbin.pl
+++ b/intl/unicharutil/tools/ccmapbin.pl
@@ -406,40 +406,40 @@ sub print_ccmap
 # doesn't matter (16, 32, 64). For Big endian
 # machines with 32/64 bit ALU, two/four 16bit words 
 # have to be rearranged to be interpreted correctly
 # as 32bit or 64bit integers with the 16bit word
 # at the lowest address taking the highest place value.
 # This shuffling is NOT necessary for the upper pointer section
 # and mid-pointer sections.
 
-# If non-BMP characters are presente, 16 plane indices 
+# If non-BMP characters are present, 16 plane indices 
 # (32bit integers stored in two 16bit shorts in
 # BE order) have to be treated differently based on the
 # the endianness as well.
 
 # For BMP-only CCMap, 16BE CCMap is identical to LE CCMaps.
 # With non-BMP characters present, to avoid the misalignment on 64bit
-# machines, we have to store the ccmap flag (indicating whether the map 
-# is extended or not) and the BMP map size in two 32bit integers instead of
-# two 16bit integers (bug 225340)
+# machines, we add two 16-bit units of 0-padding before the ccmap flag
+# (indicating whether the map is extended or not) and the BMP map size
+# (bug 225340, bug 445626).
   my @fmts = $is_ext ? ("64LE", "LE", "16BE", "32BE", "64BE") : ("LE", "32BE", "64BE") ;
   foreach my $fmt (@fmts)
   { 
 
     my($offset) = 0;
     for ($fmt) {
       /64LE/ and do {
         @idxlist = (0, 1, 2, 3);
         @int16toint32 = (1, 0, 3, 2);
         print OUT "#if (defined(IS_LITTLE_ENDIAN) && ALU_SIZE == 64)\n" .
 		          "// Precompiled CCMap for Little Endian(64bit)\n"; 
         printf OUT "#define ${variable}_SIZE %d\n", scalar @$ccmap_p + 2;
         printf OUT "#define ${variable}_INITIALIZER    \\\n";
-        printf OUT "/* EXTFLG */ 0x%04X,0x0000,0x%04X,0x0000,    \\\n", 
+        printf OUT "/* EXTFLG */ 0x0000,0x0000,0x%04X,0x%04X,    \\\n", 
 	               $ccmap_p->[0], $ccmap_p->[1];
         last;
 	    };
       /LE/ and do {
         @idxlist = (0, 1, 2, 3);
         @int16toint32 = (1, 0, 3, 2);
         print OUT $is_ext ? 
                   "#elif defined(IS_LITTLE_ENDIAN)\n" . 
@@ -483,17 +483,17 @@ sub print_ccmap
         @idxlist = (3, 2, 1, 0);
         @int16toint32 = (0, 1, 2, 3);
         print OUT "#elif (ALU_SIZE == 64)\n" .
                   "// Precompiled CCMap for Big Endian(64bit)\n";
         printf OUT "#define ${variable}_SIZE %d\n", scalar @$ccmap_p + 
                    ($is_ext ? 2 : 0);
         printf OUT "#define ${variable}_INITIALIZER    \\\n";
         if ($is_ext) {
-             printf OUT "/* EXTFLG */ 0x0000,0x%04X,0x0000,0x%04X,    \\\n", 
+             printf OUT "/* EXTFLG */ 0x0000,0x0000,0x%04X,0x%04X,    \\\n", 
 	                   $ccmap_p->[0], $ccmap_p->[1];
         }
         last;
       };
     }
 
     $offset = $is_ext ? 2 : 0; 
 
diff --git a/layout/generic/punct_marks.x-ccmap b/layout/generic/punct_marks.x-ccmap
--- a/layout/generic/punct_marks.x-ccmap
+++ b/layout/generic/punct_marks.x-ccmap
@@ -511,17 +511,17 @@
    0X012472 : CUNEIFORM PUNCTUATION SIGN DIAGONAL COLON
    0X012473 : CUNEIFORM PUNCTUATION SIGN DIAGONAL TRICOLON
 */
 
 #if (defined(IS_LITTLE_ENDIAN) && ALU_SIZE == 64)
 // Precompiled CCMap for Little Endian(64bit)
 #define gPuncCharsCCMapExt_SIZE 804
 #define gPuncCharsCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0001,0x0000,0x0250,0x0000,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0250,    \
 /* 000000 */ 0x0030,0x00D0,0x0160,0x01D0,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x01F0,0x0010,0x0010,0x0010,0x0010,0x0210,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0060,0x0070,0x0080,    \
              0x0020,0x0090,0x0020,0x0020,0x0020,0x00A0,0x00B0,0x00C0,    \
@@ -931,17 +931,17 @@
 /* 000300 */ 0x0020,0x0020,0x0020,0x0020,0x0090,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000310 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x000F,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
 #elif (ALU_SIZE == 64)
 // Precompiled CCMap for Big Endian(64bit)
 #define gPuncCharsCCMapExt_SIZE 804
 #define gPuncCharsCCMapExt_INITIALIZER    \
-/* EXTFLG */ 0x0000,0x0001,0x0000,0x0250,    \
+/* EXTFLG */ 0x0000,0x0000,0x0001,0x0250,    \
 /* 000000 */ 0x0030,0x00D0,0x0160,0x01D0,0x0010,0x0010,0x0010,0x0010,    \
              0x0010,0x0010,0x01F0,0x0010,0x0010,0x0010,0x0010,0x0210,    \
 /* 000010 */ 0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
              0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,    \
 /* 000020 */ 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
              0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,    \
 /* 000030 */ 0x0040,0x0020,0x0020,0x0050,0x0020,0x0060,0x0070,0x0080,    \
              0x0020,0x0090,0x0020,0x0020,0x0020,0x00A0,0x00B0,0x00C0,    \

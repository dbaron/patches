From: L. David Baron <dbaron@dbaron.org>

Ensure that style resolution always happens inside a script blocker.  (Bug 435442, patch 13)

diff --git a/dom/base/nsDOMClassInfo.cpp b/dom/base/nsDOMClassInfo.cpp
--- a/dom/base/nsDOMClassInfo.cpp
+++ b/dom/base/nsDOMClassInfo.cpp
@@ -7757,16 +7757,21 @@ GetBindingURL(Element *aElement, nsIDocu
 
     return PR_TRUE;
   }
 
   // Get the computed -moz-binding directly from the style context
   nsPresContext *pctx = shell->GetPresContext();
   NS_ENSURE_TRUE(pctx, PR_FALSE);
 
+  // Style resolution expects to be in a script blocker; animation
+  // events can be fired when the block exits.
+  // REVIEW: Is doing that safe inside this function?
+  nsAutoScriptBlocker scriptBlocker;
+
   nsRefPtr<nsStyleContext> sc = pctx->StyleSet()->ResolveStyleFor(aElement,
                                                                   nsnull);
   NS_ENSURE_TRUE(sc, PR_FALSE);
 
   *aResult = sc->GetStyleDisplay()->mBinding;
 
   return PR_TRUE;
 }
diff --git a/layout/style/nsAnimationManager.cpp b/layout/style/nsAnimationManager.cpp
--- a/layout/style/nsAnimationManager.cpp
+++ b/layout/style/nsAnimationManager.cpp
@@ -376,16 +376,21 @@ nsAnimationManager::RulesMatching(XULTre
 {
 }
 #endif
 
 nsIStyleRule*
 nsAnimationManager::CheckAnimationRule(nsStyleContext* aStyleContext,
                                        mozilla::dom::Element* aElement)
 {
+  // Assert that our call below to nsContentUtils::AddScriptRunner won't
+  // execute it immediately.
+  NS_ASSERTION(!nsContentUtils::IsSafeToRunScript(),
+               "should only hit this code when we have a script blocker");
+
   if (!mPresContext->IsProcessingAnimationStyleChange()) {
     // Everything that causes our animation data to change triggers a
     // style change, which in turn triggers a non-animation restyle.
     // Likewise, when we initially construct frames, we're not in a
     // style change, but also not in an animation restyle.
 
     const nsStyleDisplay *disp = aStyleContext->GetStyleDisplay();
     ElementAnimations *ea =

From: L. David Baron <dbaron@dbaron.org>

Expose InflationMinimumFontSizeFor from nsLayoutUtils.  (Bug 706193)

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -4612,23 +4612,19 @@ nsReflowFrameRunnable::Run()
 {
   if (mWeakFrame.IsAlive()) {
     mWeakFrame->PresContext()->PresShell()->
       FrameNeedsReflow(mWeakFrame, mIntrinsicDirty, mBitToAdd);
   }
   return NS_OK;
 }
 
-/**
- * Compute the minimum font size inside of a container with the given
- * width, such that **when the user zooms the container to fill the full
- * width of the device**, the fonts satisfy our minima.
- */
-static nscoord
-MinimumFontSizeFor(nsPresContext* aPresContext, nscoord aContainerWidth)
+/* static */ nscoord
+nsLayoutUtils::InflationMinimumFontSizeFor(nsPresContext* aPresContext,
+                                           nscoord aContainerWidth)
 {
   if (sFontSizeInflationEmPerLine == 0 && sFontSizeInflationMinTwips == 0) {
     return 0;
   }
 
   // Clamp the container width to the device dimensions
   nscoord iFrameWidth = aPresContext->GetVisibleArea().width;
   nscoord effectiveContainerWidth = NS_MIN(iFrameWidth, aContainerWidth);
@@ -4733,28 +4729,28 @@ nsLayoutUtils::InflationMinFontSizeFor(c
   }
 
   if (aWidthDetermination == eInReflow) {
     nsPresContext *presContext = aFrame->PresContext();
     nsIFrame *container = presContext->mCurrentInflationContainer;
     if (!container || !ShouldInflateFontsForContainer(container)) {
       return 0;
     }
-    return MinimumFontSizeFor(presContext,
-                              presContext->mCurrentInflationContainerWidth);
+    return InflationMinimumFontSizeFor(presContext,
+             presContext->mCurrentInflationContainerWidth);
   }
 
   for (const nsIFrame *f = aFrame; f; f = f->GetParent()) {
     if (IsContainerForFontSizeInflation(f)) {
       if (!ShouldInflateFontsForContainer(f)) {
         return 0;
       }
 
-      return MinimumFontSizeFor(aFrame->PresContext(),
-                                f->GetContentRect().width);
+      return InflationMinimumFontSizeFor(aFrame->PresContext(),
+                                         f->GetContentRect().width);
     }
   }
 
   NS_ABORT_IF_FALSE(false, "root should always be container");
 
   return 0;
 }
 
diff --git a/layout/base/nsLayoutUtils.h b/layout/base/nsLayoutUtils.h
--- a/layout/base/nsLayoutUtils.h
+++ b/layout/base/nsLayoutUtils.h
@@ -1508,16 +1508,25 @@ public:
    * the font size inflation of its descendants.
    */
   static bool IsContainerForFontSizeInflation(const nsIFrame *aFrame)
   {
     return aFrame->GetStateBits() & NS_FRAME_FONT_INFLATION_CONTAINER;
   }
 
   /**
+   * Compute the minimum font size inside of a container with the given
+   * width, such that **when the user zooms the container to fill the full
+   * width of the device**, the fonts satisfy our minima.
+   */
+  static nscoord
+  InflationMinimumFontSizeFor(nsPresContext* aPresContext,
+                              nscoord aContainerWidth);
+
+  /**
    * Return the font size inflation *ratio* for a given frame.  This is
    * the factor by which font sizes should be inflated; it is never
    * smaller than 1.
    *
    * The WidthDetermination parameter says how we determine the width of
    * the nearest inflation container:  when not in reflow we look at the
    * frame tree; when in reflow we look at state stored on the pres
    * context.

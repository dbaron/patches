From: L. David Baron <dbaron@dbaron.org>

Bug 1089417 patch 12 - Assert about caller flushing pending media feature changes.

diff --git a/layout/base/nsPresContext.h b/layout/base/nsPresContext.h
--- a/layout/base/nsPresContext.h
+++ b/layout/base/nsPresContext.h
@@ -285,16 +285,19 @@ public:
                                              nsChangeHint aChangeHint = nsChangeHint(0));
 
   void PostMediaFeatureValuesChangedEvent();
   void HandleMediaFeatureValuesChangedEvent();
   void FlushPendingMediaFeatureValuesChanged() {
     if (mPendingMediaFeatureValuesChanged)
       MediaFeatureValuesChanged(nsRestyleHint(0));
   }
+  bool HasPendingMediaFeatureValuesChanged() const {
+    return mPendingMediaFeatureValuesChanged;
+  }
 
   /**
    * Updates the size mode on all remote children and recursively notifies this
    * document and all subdocuments (including remote children) that a media
    * feature value has changed.
    */
   void SizeModeChanged(nsSizeMode aSizeMode);
 
diff --git a/layout/style/nsCSSRuleProcessor.cpp b/layout/style/nsCSSRuleProcessor.cpp
--- a/layout/style/nsCSSRuleProcessor.cpp
+++ b/layout/style/nsCSSRuleProcessor.cpp
@@ -3688,16 +3688,20 @@ static int CompareWeightData(const void*
   const PerWeightData* arg1 = static_cast<const PerWeightData*>(aArg1);
   const PerWeightData* arg2 = static_cast<const PerWeightData*>(aArg2);
   return arg1->mWeight - arg2->mWeight; // put lower weight first
 }
 
 RuleCascadeData*
 nsCSSRuleProcessor::GetRuleCascade(nsPresContext* aPresContext)
 {
+  NS_ASSERTION(!aPresContext->HasPendingMediaFeatureValuesChanged(),
+               "caller didn't flush pending media feature changes, "
+               "which means the restyles we need to do for those changes "
+               "will be lost");
   // FIXME:  Make this infallible!
 
   // If anything changes about the presentation context, we will be
   // notified.  Otherwise, our cache is valid if mLastPresContext
   // matches aPresContext.  (The only rule processors used for multiple
   // pres contexts are for XBL.  These rule processors are probably less
   // likely to have @media rules, and thus the cache is pretty likely to
   // hit instantly even when we're switching between pres contexts.)

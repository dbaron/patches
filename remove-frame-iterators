From: L. David Baron <dbaron@dbaron.org>

Set iterators to valid position after deleting overflow lines.  (Bug 534082)  r=tnikkel

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -2595,25 +2595,27 @@ nsBlockFrame::PullFrameFrom(nsBlockReflo
       nsLineList* fromLineList = aFromOverflowLine
         ? aFromContainer->RemoveOverflowLines()
         : &aFromContainer->mLines;
       if (aFromLine.next() != fromLineList->end())
         aFromLine.next()->MarkPreviousMarginDirty();
 
       Invalidate(fromLine->GetCombinedArea());
       fromLineList->erase(aFromLine);
-      // Note that aFromLine just got incremented, so don't use it again here!
+      // aFromLine is now invalid
       aState.FreeLineBox(fromLine);
 
       // Put any remaining overflow lines back.
       if (aFromOverflowLine) {
         if (!fromLineList->empty()) {
           aFromContainer->SetOverflowLines(fromLineList);
         } else {
           delete fromLineList;
+          // Now any iterators into fromLineList are invalid (but
+          // aFromLine already was invalidated above)
         }
       }
     }
 
     // Stop pulling because we found a frame to pull
     aFrameResult = frame;
 #ifdef DEBUG
     VerifyLines(PR_TRUE);
@@ -5343,16 +5345,22 @@ nsBlockFrame::DoRemoveFrame(nsIFrame* aD
         Invalidate(lineCombinedArea);
       } else {
         nsLineList* lineList = RemoveOverflowLines();
         line = lineList->erase(line);
         if (!lineList->empty()) {
           SetOverflowLines(lineList);
         } else {
           delete lineList;
+          // We just invalidated our iterators.  Since we were in
+          // the overflow lines list, which is now empty, set them
+          // so we're at the end of the regular line list.
+          line_start = mLines.begin();
+          line_end = mLines.end();
+          line = line_end;
         }
       }
       cur->Destroy(presShell);
 
       // If we're removing a line, ReflowDirtyLines isn't going to
       // know that it needs to slide lines unless something is marked
       // dirty.  So mark the previous margin of the next line dirty if
       // there is one.
@@ -5477,26 +5485,32 @@ nsBlockFrame::StealFrame(nsPresContext* 
            line->MarkDirty();
         }
         else {
           // Remove the line box
           nsLineBox* lineBox = line;
           if (searchingOverflowList) {
             // Erase line, but avoid making the overflow line list empty
             nsLineList* lineList = RemoveOverflowLines();
-            lineList->erase(line);
+            line = lineList->erase(line);
             if (!lineList->empty()) {
               nsresult rv = SetOverflowLines(lineList);
               NS_ENSURE_SUCCESS(rv, rv);
             } else {
               delete lineList;
+              // We just invalidated our iterators.  Since we were in
+              // the overflow lines list, which is now empty, set them
+              // so we're at the end of the regular line list.
+              line_start = mLines.begin();
+              line_end = mLines.end();
+              line = line_end;
             }
           }
           else {
-            mLines.erase(line);
+            line = mLines.erase(line);
           }
           lineBox->Destroy(aPresContext->PresShell());
           if (line != line_end) {
             // Line disappeared, so tell next line it may have to change position
             line->MarkPreviousMarginDirty();
           }
         }
 

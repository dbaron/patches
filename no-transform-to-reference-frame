From: L. David Baron <dbaron@dbaron.org>

Bug 828173 patch 1:  Make AddAnimationsAndTransitionsToLayer no longer call aItem->ToReferenceFrame() for coordinate basis for transforms.

I was having trouble figuring out what this "origin" variable was the
origin of and why it was relevant to the layer.  Then I realized that
nsDisplayListBuilder::FindReferenceFrameFor makes any frame with a
transform a reference frame, which means that the ToReferenceFrame() for
any nsDisplayTransform is always nsPoint(0, 0).

diff --git a/layout/base/nsDisplayList.cpp b/layout/base/nsDisplayList.cpp
--- a/layout/base/nsDisplayList.cpp
+++ b/layout/base/nsDisplayList.cpp
@@ -360,16 +360,21 @@ AddAnimationsForProperty(nsIFrame* aFram
     }
   }
 }
 
 static void
 AddAnimationsAndTransitionsToLayer(Layer* aLayer, nsDisplayListBuilder* aBuilder,
                                    nsDisplayItem* aItem, nsCSSProperty aProperty)
 {
+  NS_ASSERTION(aProperty != eCSSProperty_transform ||
+               aItem->ToReferenceFrame() == nsPoint(0, 0),
+               "transform display items should always be at the "
+               "reference frame");
+
   aLayer->ClearAnimations();
 
   nsIFrame* frame = aItem->Frame();
 
   nsIContent* content = frame->GetContent();
   if (!content) {
     return;
   }
@@ -411,17 +416,17 @@ AddAnimationsAndTransitionsToLayer(Layer
     nscoord perspective = 0.0;
     nsStyleContext* parentStyleContext = frame->StyleContext()->GetParent();
     if (parentStyleContext) {
       const nsStyleDisplay* disp = parentStyleContext->StyleDisplay();
       if (disp && disp->mChildPerspective.GetUnit() == eStyleUnit_Coord) {
         perspective = disp->mChildPerspective.GetCoordValue();
       }
     }
-    nsPoint origin = aItem->ToReferenceFrame();
+    nsPoint origin(0, 0);
 
     data = TransformData(origin, offsetToTransformOrigin,
                          offsetToPerspectiveOrigin, bounds, perspective,
                          frame->PresContext()->AppUnitsPerDevPixel());
   } else if (aProperty == eCSSProperty_opacity) {
     data = null_t();
   }
 

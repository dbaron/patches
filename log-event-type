Log type of event on Linux and Mac.

diff --git a/xpcom/threads/nsThread.cpp b/xpcom/threads/nsThread.cpp
--- a/xpcom/threads/nsThread.cpp
+++ b/xpcom/threads/nsThread.cpp
@@ -373,10 +373,58 @@ nsThread::PutEvent(nsIRunnable *event)
 //-----------------------------------------------------------------------------
 // nsIEventTarget
 
+/* copied from nsTypeInfo.cpp */
+#if defined(linux) || defined(XP_MACOSX)
+
+#define __USE_GNU
+#include <dlfcn.h>
+#include <ctype.h>
+#include <string.h>
+
+static const char*
+GetTypeName(void* ptr)
+{
+#if defined(__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100 /* G++ V3 ABI */
+    const int expected_offset = 8;
+    const char vtable_sym_start[] = "_ZTV";
+    const int vtable_sym_start_length = sizeof(vtable_sym_start) - 1;
+#else
+    const int expected_offset = 0;
+    const char vtable_sym_start[] = "__vt_";
+    const int vtable_sym_start_length = sizeof(vtable_sym_start) - 1;
+#endif
+    void* vt = *(void**)ptr;
+    Dl_info info;
+    // If dladdr fails, if we're not at the expected offset in the vtable,
+    // or if the symbol name isn't a vtable symbol name, return "void*".
+    if ( !dladdr(vt, &info) ||
+         ((char*)info.dli_saddr) + expected_offset != vt ||
+         !info.dli_sname ||
+         strncmp(info.dli_sname, vtable_sym_start, vtable_sym_start_length))
+        return "void*";
+
+    // skip the garbage at the beginning of things like
+    // __vt_14nsRootBoxFrame (gcc 2.96) or _ZTV14nsRootBoxFrame (gcc 3.0)
+    const char* rv = info.dli_sname + vtable_sym_start_length;
+    while (*rv && isdigit(*rv))
+        ++rv;
+    return rv;
+}
+
+#else
+
+const char* GetTypeName(void* ptr)
+{
+    //TODO: COMPLETE THIS
+    return "void*";
+}
+
+#endif //XP_WIN32
+
 NS_IMETHODIMP
 nsThread::Dispatch(nsIRunnable *event, PRUint32 flags)
 {
-  LOG(("THRD(%p) Dispatch [%p %x]\n", this, event, flags));
+  LOG(("THRD(%p) Dispatch [%p(%s) %x]\n", this, event, GetTypeName(event), flags));
 
   NS_ENSURE_ARG_POINTER(event);
 
@@ -505,7 +553,7 @@ nsThread::ProcessNextEvent(PRBool mayWai
   nsresult rv = NS_OK;
 
   if (event) {
-    LOG(("THRD(%p) running [%p]\n", this, event.get()));
+    LOG(("THRD(%p) running [%p(%s)]\n", this, event.get(), GetTypeName(event)));
     ++mRunningEvent;
     event->Run();
     --mRunningEvent;

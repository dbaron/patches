From: L. David Baron <dbaron@dbaron.org>

Log type of event on Linux and Mac.

diff --git a/xpcom/threads/nsThread.cpp b/xpcom/threads/nsThread.cpp
--- a/xpcom/threads/nsThread.cpp
+++ b/xpcom/threads/nsThread.cpp
@@ -368,20 +368,34 @@ nsThread::PutEvent(nsIRunnable *event)
     obs->OnDispatchedEvent(this);
 
   return NS_OK;
 }
 
 //-----------------------------------------------------------------------------
 // nsIEventTarget
 
+#include "nsStackWalk.h"
+
+static char gBuf[1024];
+
+static const char*
+GetTypeName(void* ptr)
+{
+  nsCodeAddressDetails details;
+  void *vptr = *(void**)ptr;
+  NS_DescribeCodeAddress(vptr, &details);
+  NS_FormatCodeAddressDetails(vptr, &details, gBuf, sizeof(gBuf));
+  return gBuf;
+}
+
 NS_IMETHODIMP
 nsThread::Dispatch(nsIRunnable *event, PRUint32 flags)
 {
-  LOG(("THRD(%p) Dispatch [%p %x]\n", this, event, flags));
+  LOG(("THRD(%p) Dispatch [%p(%s) %x]\n", this, event, GetTypeName(event), flags));
 
   NS_ENSURE_ARG_POINTER(event);
 
   if (flags & DISPATCH_SYNC) {
     nsThread *thread = nsThreadManager::get()->GetCurrentThread();
     NS_ENSURE_STATE(thread);
 
     // XXX we should be able to do something better here... we should
@@ -500,17 +514,17 @@ nsThread::ProcessNextEvent(PRBool mayWai
   nsCOMPtr<nsIRunnable> event; 
   mEvents->GetEvent(mayWait && !ShuttingDown(), getter_AddRefs(event));
 
   *result = (event.get() != nsnull);
 
   nsresult rv = NS_OK;
 
   if (event) {
-    LOG(("THRD(%p) running [%p]\n", this, event.get()));
+    LOG(("THRD(%p) running [%p(%s)]\n", this, event.get(), GetTypeName(event)));
     ++mRunningEvent;
     event->Run();
     --mRunningEvent;
   } else if (mayWait) {
     NS_ASSERTION(ShuttingDown(), "This should only happen when shutting down");
     rv = NS_ERROR_UNEXPECTED;
   }
 

From: L. David Baron <dbaron@dbaron.org>

Make nsHTMLStyleSheet::RulesMatching follow the new rules for matching visitedness.  (Bug 147777)

diff --git a/layout/style/nsHTMLStyleSheet.cpp b/layout/style/nsHTMLStyleSheet.cpp
--- a/layout/style/nsHTMLStyleSheet.cpp
+++ b/layout/style/nsHTMLStyleSheet.cpp
@@ -234,16 +234,36 @@ nsHTMLStyleSheet::RulesMatching(ElementR
     nsRuleWalker *ruleWalker = aData->mRuleWalker;
     if (aData->mIsHTMLContent) {
       nsIAtom* tag = aData->mContentTag;
 
       // if we have anchor colors, check if this is an anchor with an href
       if (tag == nsGkAtoms::a) {
         if (mLinkRule || mVisitedRule || mActiveRule) {
           PRUint32 state = aData->ContentState();
+          if (state & (NS_EVENT_STATE_UNVISITED|NS_EVENT_STATE_VISITED)) {
+            switch (aData->mVisitedHandling) {
+              // If the node being matched is a link, then it's the
+              // relevant link.
+              case RuleProcessorData::eRelevantLinkUnvisited:
+                if (mLinkRule)
+                  ruleWalker->Forward(mLinkRule);
+                break;
+              case RuleProcessorData::eRelevantLinkVisited:
+                if (mVisitedRule)
+                  ruleWalker->Forward(mVisitedRule);
+                break;
+              case RuleProcessorData::eLinksVisitedOrUnvisited:
+                if (mLinkRule)
+                  ruleWalker->Forward(mLinkRule);
+                if (mVisitedRule)
+                  ruleWalker->Forward(mVisitedRule);
+                break;
+            }
+          }
           if (mLinkRule && (state & NS_EVENT_STATE_UNVISITED)) {
             ruleWalker->Forward(mLinkRule);
           }
           else if (mVisitedRule && (state & NS_EVENT_STATE_VISITED)) {
             ruleWalker->Forward(mVisitedRule);
           }
 
           // No need to add to the active rule if it's not a link

From: L. David Baron <dbaron@dbaron.org>

Bug 1067755 patch 3 - Make nsTransformedTextRun not hold on to style contexts.

diff --git a/layout/generic/nsTextRunTransformations.cpp b/layout/generic/nsTextRunTransformations.cpp
--- a/layout/generic/nsTextRunTransformations.cpp
+++ b/layout/generic/nsTextRunTransformations.cpp
@@ -300,24 +300,23 @@ nsCaseTransformTextRunFactory::Transform
   LanguageSpecificCasingBehavior languageSpecificCasing = GetCasingFor(lang);
   mozilla::GreekCasing::State greekState;
   mozilla::IrishCasing::State irishState;
   uint32_t irishMark = uint32_t(-1); // location of possible prefix letter(s)
 
   for (uint32_t i = 0; i < length; ++i) {
     uint32_t ch = str[i];
 
-    nsStyleContext* styleContext;
     if (aTextRun) {
-      styleContext = aTextRun->mStyles[i];
+      Style& s = aTextRun->mStyles[i];
       style = aAllUppercase ? NS_STYLE_TEXT_TRANSFORM_UPPERCASE :
-        styleContext->StyleText()->mTextTransform;
+        s.mTextTransform;
 
-      if (lang != styleContext->StyleFont()->mLanguage) {
-        lang = styleContext->StyleFont()->mLanguage;
+      if (lang != s.mLanguage) {
+        lang = s.mLanguage;
         languageSpecificCasing = GetCasingFor(lang);
         greekState.Reset();
         irishState.Reset();
         irishMark = uint32_t(-1);
       }
     }
 
     int extraChars = 0;
diff --git a/layout/generic/nsTextRunTransformations.h b/layout/generic/nsTextRunTransformations.h
--- a/layout/generic/nsTextRunTransformations.h
+++ b/layout/generic/nsTextRunTransformations.h
@@ -112,18 +112,23 @@ public:
       mFactory->RebuildTextRun(this, aRefContext);
     }
   }
 
   // override the gfxTextRun impls to account for additional members here
   virtual size_t SizeOfExcludingThis(mozilla::MallocSizeOf aMallocSizeOf) MOZ_MUST_OVERRIDE;
   virtual size_t SizeOfIncludingThis(mozilla::MallocSizeOf aMallocSizeOf) MOZ_MUST_OVERRIDE;
 
+  struct Style {
+    uint8_t mTextTransform;
+    nsCOMPtr<nsIAtom> mLanguage;
+  };
+
   nsTransformingTextRunFactory       *mFactory;
-  nsTArray<nsRefPtr<nsStyleContext> > mStyles;
+  nsTArray<Style>                     mStyles;
   nsTArray<bool>                      mCapitalize;
   nsString                            mString;
   bool                                mOwnsFactory;
   bool                                mNeedsRebuild;
 
 private:
   nsTransformedTextRun(const gfxTextRunFactory::Parameters* aParams,
                        nsTransformingTextRunFactory* aFactory,
@@ -134,17 +139,19 @@ private:
     : gfxTextRun(aParams, aLength, aFontGroup, aFlags),
       mFactory(aFactory), mString(aString, aLength),
       mOwnsFactory(aOwnsFactory), mNeedsRebuild(true)
   {
     mCharacterGlyphs = reinterpret_cast<CompressedGlyph*>(this + 1);
 
     uint32_t i;
     for (i = 0; i < aLength; ++i) {
-      mStyles.AppendElement(aStyles[i]);
+      Style* s = mStyles.AppendElement();
+      s->mTextTransform = aStyles[i]->StyleText()->mTextTransform;
+      s->mLanguage = aStyles[i]->StyleFont()->mLanguage;
     }
   }
 };
 
 /**
  * Copy a given textrun, but merge certain characters into a single logical
  * character. Glyphs for a character are added to the glyph list for the previous
  * character and then the merged character is eliminated. Visually the results

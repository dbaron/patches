Fix some shutdown leaks in NSS.  b=391770, 391771, 391773, 391774, 391775, 391776

diff --git a/security/nss/lib/certhigh/ocsp.c b/security/nss/lib/certhigh/ocsp.c
--- a/security/nss/lib/certhigh/ocsp.c
+++ b/security/nss/lib/certhigh/ocsp.c
@@ -889,6 +889,10 @@ SECStatus OCSP_ShutdownCache(void)
     OCSP_Global.cache.MRUitem = NULL;
     OCSP_Global.cache.LRUitem = NULL;
     PR_ExitMonitor(OCSP_Global.monitor);
+
+    PR_DestroyMonitor(OCSP_Global.monitor);
+    OCSP_Global.monitor = NULL;
+
     return SECSuccess;
 }
 
diff --git a/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_mem.c b/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_mem.c
--- a/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_mem.c
+++ b/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_mem.c
@@ -153,6 +153,8 @@ PKIX_PL_Realloc(
                         PORT_Memcpy(result, ptr, size);
                 }
                 *pMemory = result;
+
+                /* FIXME: not ok to just leak for lifetime of app */
         } else {
                 PKIX_MEM_DEBUG("\tCalling PR_Realloc.\n");
                 result = (void *) PR_Realloc(ptr, size);
@@ -191,6 +193,8 @@ PKIX_PL_Free(
                 if (context->arena == NULL) {
                     PKIX_MEM_DEBUG("\tCalling PR_Free.\n");
                     (void) PR_Free(ptr);
+                } else {
+                    /* FIXME: not ok to just leak for lifetime of app */
                 }
         } else {
                 PKIX_MEM_DEBUG("\tCalling PR_Free.\n");
@@ -210,17 +214,9 @@ PKIX_PL_Memcpy(
         void **pDest,
         void *plContext)
 {
-        PKIX_PL_NssContext *nssContext = NULL;
-
         PKIX_ENTER(MEM, "PKIX_PL_Memcpy");
         PKIX_NULLCHECK_TWO(source, pDest);
 
-        nssContext = (PKIX_PL_NssContext *)plContext; 
-
-        if (nssContext != NULL && nssContext->arena != NULL) {
-                return (PKIX_ALLOC_ERROR());
-        }
-
         PKIX_MEM_DEBUG("\tCalling PORT_Memcpy.\n");
         (void) PORT_Memcpy(*pDest, source, length);
 
diff --git a/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_object.c b/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_object.c
--- a/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_object.c
+++ b/security/nss/lib/libpkix/pkix_pl_nss/system/pkix_pl_object.c
@@ -721,22 +721,9 @@ PKIX_PL_Object_IncRef(
 {
         PKIX_Boolean refCountError = PKIX_FALSE;
         PKIX_PL_Object *objectHeader = NULL;
-        PKIX_PL_NssContext *context = NULL;
 
         PKIX_ENTER(OBJECT, "PKIX_PL_Object_IncRef");
         PKIX_NULLCHECK_ONE(object);
-
-        if (plContext){
-                /* 
-                 * PKIX_PL_NssContext is not a complete PKIX Type, it doesn't
-                 * have a header therefore we cannot verify its type before
-                 * casting.
-                 */  
-                context = (PKIX_PL_NssContext *) plContext;
-                if (context->arena != NULL) {
-                        goto cleanup;
-                }
-        }
 
         if (object == (PKIX_PL_Object*)PKIX_ALLOC_ERROR()) {
                 PKIX_ERROR_FATAL(PKIX_ATTEMPTTOINCREFALLOCERROR);
@@ -789,23 +776,10 @@ PKIX_PL_Object_DecRef(
         PKIX_PL_DestructorCallback func = NULL;
         PKIX_PL_Object *objectHeader = NULL;
         pkix_ClassTable_Entry entry;
-        PKIX_PL_NssContext *context = NULL;
         PKIX_Boolean refCountError = PKIX_FALSE;
 
         PKIX_ENTER(OBJECT, "PKIX_PL_Object_DecRef");
         PKIX_NULLCHECK_ONE(object);
-
-        if (plContext){
-                /* 
-                 * PKIX_PL_NssContext is not a complete PKIX Type, it doesn't
-                 * have a header therefore we cannot verify its type before
-                 * casting.
-                 */  
-                context = (PKIX_PL_NssContext *) plContext;
-                if (context->arena != NULL) {
-                        goto cleanup;
-                }
-        }
 
         if (object == (PKIX_PL_Object*)PKIX_ALLOC_ERROR()) {
                 PKIX_ERROR_FATAL(PKIX_ATTEMPTTODECREFALLOCERROR);
diff --git a/security/nss/lib/nss/nssinit.c b/security/nss/lib/nss/nssinit.c
--- a/security/nss/lib/nss/nssinit.c
+++ b/security/nss/lib/nss/nssinit.c
@@ -813,6 +813,19 @@ NSS_Shutdown(void)
 	shutdownRV = SECFailure;
     }
     pk11sdr_Shutdown();
+
+    if (plContext) {
+        PKIX_Shutdown(plContext);
+        plContext = NULL;
+    }
+    if (pk11_config_name != NULL) {
+        PORT_Free(pk11_config_name);
+        pk11_config_name = NULL;
+    }
+    if (pk11_config_strings != NULL) {
+	PR_smprintf_free(pk11_config_strings);
+	pk11_config_strings = NULL;
+    }
     if (status == PR_FAILURE) {
 	if (NSS_GetError() == NSS_ERROR_BUSY) {
 	    PORT_SetError(SEC_ERROR_BUSY);
diff --git a/security/nss/lib/pki/trustdomain.c b/security/nss/lib/pki/trustdomain.c
--- a/security/nss/lib/pki/trustdomain.c
+++ b/security/nss/lib/pki/trustdomain.c
@@ -131,6 +131,12 @@ NSSTrustDomain_Destroy (
 {
     PRStatus status = PR_SUCCESS;
     if (--td->refCount == 0) {
+#ifdef NSS_3_4_CODE
+        if (td->statusConfig) {
+            td->statusConfig->statusDestroy(td->statusConfig);
+            td->statusConfig = NULL;
+        }
+#endif
 	/* Destroy each token in the list of tokens */
 	if (td->tokens) {
 	    nssListIterator_Destroy(td->tokens);

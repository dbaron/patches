From: L. David Baron <dbaron@dbaron.org>

Bug 996796 patch 0 - Fix test_animations_omta_start.html so that additional tests will involve onscreen layers.  r=birtles

This removes each test element when we're done with it so that each
successive test element isn't 100px lower.  This is required to keep the
third test element (added in the next patch) onscreen when running tests
on the B2G emulator (other than when running a single test at a time).
This, in turn, is required to get animations in that test properly
shipped to the compositor thread, which is required for the test to
pass.

diff --git a/layout/style/test/test_animations_omta_start.html b/layout/style/test/test_animations_omta_start.html
--- a/layout/style/test/test_animations_omta_start.html
+++ b/layout/style/test/test_animations_omta_start.html
@@ -89,17 +89,17 @@ function testTransform() {
 
   waitForAllPaints(function() {
     gUtils.advanceTimeAndRefresh(10100);
     waitForAllPaints(function() {
       var transform = gUtils.getOMTAStyle(target, "transform");
       ok(matricesRoughlyEqual(convertTo3dMatrix(transform),
                               convertTo3dMatrix("matrix(1, 0, 0, 1, 50, 0)")),
          "transform is set on compositor thread after delayed start");
-      target.removeAttribute("style");
+      target.remove();
       gUtils.restoreNormalRefresh();
       testBackwardsFill();
     });
   });
 }
 
 function testBackwardsFill() {
   gUtils.advanceTimeAndRefresh(0);
@@ -115,17 +115,17 @@ function testBackwardsFill() {
     waitForAllPaints(function() {
       gUtils.advanceTimeAndRefresh(100);
       waitForAllPaints(function() {
         var transform = gUtils.getOMTAStyle(target, "transform");
         ok(matricesRoughlyEqual(convertTo3dMatrix(transform),
                                 convertTo3dMatrix("matrix(1, 0, 0, 1, 1, 0)")),
            "transform is set on compositor thread after delayed start " +
            "with backwards fill");
-        target.removeAttribute("style");
+        target.remove();
         gUtils.restoreNormalRefresh();
         SimpleTest.finish();
       });
     });
   });
 }
 
 </script>

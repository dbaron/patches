Add assertions to make underlying problem in bug 379090 more obvious, and fix another occurrence.

diff --git a/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp b/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
--- a/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
+++ b/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
@@ -84,7 +84,7 @@ nsGridRowLeafFrame::GetBorderAndPadding(
 
   PRBool isHorizontal = IsHorizontal();
 
-  nsBoxLayoutState state((nsPresContext*) PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
 
   PRInt32 firstIndex = 0;
   PRInt32 lastIndex = 0;
diff --git a/layout/xul/base/src/nsBox.cpp b/layout/xul/base/src/nsBox.cpp
--- a/layout/xul/base/src/nsBox.cpp
+++ b/layout/xul/base/src/nsBox.cpp
@@ -456,6 +456,9 @@ nsSize
 nsSize
 nsBox::GetPrefSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize pref(0,0);
   DISPLAY_PREF_SIZE(this, pref);
 
@@ -475,6 +478,9 @@ nsSize
 nsSize
 nsBox::GetMinSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize min(0,0);
   DISPLAY_MIN_SIZE(this, min);
 
@@ -495,6 +501,9 @@ nsSize
 nsSize
 nsBox::GetMaxSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize max(NS_INTRINSICSIZE, NS_INTRINSICSIZE);
   DISPLAY_MAX_SIZE(this, max);
 
@@ -547,6 +556,9 @@ nsresult
 nsresult
 nsIFrame::Layout(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsBox *box = NS_STATIC_CAST(nsBox*, this);
   DISPLAY_LAYOUT(box);
 
diff --git a/layout/xul/base/src/nsBoxFrame.cpp b/layout/xul/base/src/nsBoxFrame.cpp
--- a/layout/xul/base/src/nsBoxFrame.cpp
+++ b/layout/xul/base/src/nsBoxFrame.cpp
@@ -170,7 +170,7 @@ nsBoxFrame::SetInitialChildList(nsIAtom*
   nsresult r = nsContainerFrame::SetInitialChildList(aListName, aChildList);
   if (r == NS_OK) {
     // initialize our list of infos.
-    nsBoxLayoutState state(PresContext());
+    nsBoxLayoutState state(PresContext(), nsnull);
     CheckBoxOrder(state);
     if (mLayoutManager)
       mLayoutManager->ChildrenSet(this, state, mFrames.FirstChild());
@@ -805,6 +805,9 @@ nsSize
 nsSize
 nsBoxFrame::GetPrefSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(0,0);
   DISPLAY_PREF_SIZE(this, size);
   if (!DoesNeedRecalc(mPrefSize)) {
@@ -861,6 +864,9 @@ nsSize
 nsSize
 nsBoxFrame::GetMinSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(0,0);
   DISPLAY_MIN_SIZE(this, size);
   if (!DoesNeedRecalc(mMinSize)) {
@@ -894,6 +900,9 @@ nsSize
 nsSize
 nsBoxFrame::GetMaxSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(NS_INTRINSICSIZE, NS_INTRINSICSIZE);
   DISPLAY_MAX_SIZE(this, size);
   if (!DoesNeedRecalc(mMaxSize)) {
@@ -1002,7 +1011,7 @@ nsBoxFrame::MarkIntrinsicWidthsDirty()
   CoordNeedsRecalc(mAscent);
 
   if (mLayoutManager) {
-    nsBoxLayoutState state(PresContext());
+    nsBoxLayoutState state(PresContext(), nsnull);
     mLayoutManager->IntrinsicWidthsDirty(this, state);
   }
 
@@ -1016,7 +1025,7 @@ nsBoxFrame::RemoveFrame(nsIAtom*        
 {
   NS_PRECONDITION(!aListName, "We don't support out-of-flow kids");
   nsPresContext* presContext = PresContext();
-  nsBoxLayoutState state(presContext);
+  nsBoxLayoutState state(presContext, nsnull);
 
   // remove the child frame
   mFrames.RemoveFrame(aOldFrame);
@@ -1043,7 +1052,7 @@ nsBoxFrame::InsertFrames(nsIAtom*       
    NS_ASSERTION(!aPrevFrame || aPrevFrame->GetParent() == this,
                 "inserting after sibling frame with different parent");
    NS_PRECONDITION(!aListName, "We don't support out-of-flow kids");
-   nsBoxLayoutState state(PresContext());
+   nsBoxLayoutState state(PresContext(), nsnull);
 
    // insert the child frames
    mFrames.InsertFrames(this, aPrevFrame, aFrameList);
@@ -1070,7 +1079,7 @@ nsBoxFrame::AppendFrames(nsIAtom*       
                          nsIFrame*       aFrameList)
 {
    NS_PRECONDITION(!aListName, "We don't support out-of-flow kids");
-   nsBoxLayoutState state(PresContext());
+   nsBoxLayoutState state(PresContext(), nsnull);
 
    // append the new frames
    mFrames.AppendFrames(this, aFrameList);
@@ -1206,7 +1215,8 @@ nsBoxFrame::AttributeChanged(PRInt32 aNa
       FrameNeedsReflow(this, nsIPresShell::eStyleChange);
   }
   else if (aAttribute == nsGkAtoms::ordinal) {
-    nsBoxLayoutState state(PresContext());
+    // XXX THIS SHOULD NOT BE NULL!
+    nsBoxLayoutState state(PresContext(), nsnull);
 
     nsIFrame* frameToMove = this;
     if (GetStateBits() & NS_FRAME_OUT_OF_FLOW) {
@@ -1856,8 +1866,6 @@ nsBoxFrame::CreateViewForFrame(nsPresCon
   NS_ASSERTION(aForce, "We only get called to force view creation now");
   // If we don't yet have a view, see if we need a view
   if (!aFrame->HasView()) {
-    PRInt32 zIndex = 0;
-    PRBool  autoZIndex = PR_FALSE;
 
     if (aForce) {
       // Create a view
diff --git a/layout/xul/base/src/nsBoxLayoutState.h b/layout/xul/base/src/nsBoxLayoutState.h
--- a/layout/xul/base/src/nsBoxLayoutState.h
+++ b/layout/xul/base/src/nsBoxLayoutState.h
@@ -59,7 +59,7 @@ class nsBoxLayoutState
 class nsBoxLayoutState
 {
 public:
-  nsBoxLayoutState(nsPresContext* aPresContext, nsIRenderingContext* aRenderingContext = nsnull) NS_HIDDEN;
+  nsBoxLayoutState(nsPresContext* aPresContext, nsIRenderingContext* aRenderingContext) NS_HIDDEN;
   nsBoxLayoutState(const nsBoxLayoutState& aState) NS_HIDDEN;
 
   nsPresContext* PresContext() const { return mPresContext; }
diff --git a/layout/xul/base/src/nsDeckFrame.cpp b/layout/xul/base/src/nsDeckFrame.cpp
--- a/layout/xul/base/src/nsDeckFrame.cpp
+++ b/layout/xul/base/src/nsDeckFrame.cpp
@@ -149,7 +149,7 @@ nsDeckFrame::IndexChanged(nsPresContext*
     return;
 
   // redraw
-  nsBoxLayoutState state(aPresContext);
+  nsBoxLayoutState state(aPresContext, nsnull);
   Redraw(state);
 
   // hide the currently showing box
diff --git a/layout/xul/base/src/nsImageBoxFrame.cpp b/layout/xul/base/src/nsImageBoxFrame.cpp
--- a/layout/xul/base/src/nsImageBoxFrame.cpp
+++ b/layout/xul/base/src/nsImageBoxFrame.cpp
@@ -517,7 +517,7 @@ NS_IMETHODIMP nsImageBoxFrame::OnStopCon
 NS_IMETHODIMP nsImageBoxFrame::OnStopContainer(imgIRequest *request,
                                                imgIContainer *image)
 {
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
   this->Redraw(state);
 
   return NS_OK;
@@ -546,7 +546,7 @@ NS_IMETHODIMP nsImageBoxFrame::FrameChan
                                             gfxIImageFrame *newframe,
                                             nsRect * dirtyRect)
 {
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
   this->Redraw(state);
 
   return NS_OK;
diff --git a/layout/xul/base/src/nsListBoxBodyFrame.cpp b/layout/xul/base/src/nsListBoxBodyFrame.cpp
--- a/layout/xul/base/src/nsListBoxBodyFrame.cpp
+++ b/layout/xul/base/src/nsListBoxBodyFrame.cpp
@@ -889,7 +889,7 @@ nsListBoxBodyFrame::InternalPositionChan
     return NS_OK;
 
   nsPresContext *presContext = PresContext();
-  nsBoxLayoutState state(presContext);
+  nsBoxLayoutState state(presContext, nsnull);
 
   // begin timing how long it takes to scroll a row
   PRTime start = PR_Now();
@@ -1049,7 +1049,7 @@ nsListBoxBodyFrame::DestroyRows(PRInt32&
   // We need to destroy frames until our row count has been properly
   // reduced.  A reflow will then pick up and create the new frames.
   nsIFrame* childFrame = GetFirstFrame();
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
 
   while (childFrame && aRowsToLose > 0) {
     --aRowsToLose;
@@ -1071,7 +1071,7 @@ nsListBoxBodyFrame::ReverseDestroyRows(P
   // We need to destroy frames until our row count has been properly
   // reduced.  A reflow will then pick up and create the new frames.
   nsIFrame* childFrame = GetLastFrame();
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
 
   while (childFrame && aRowsToLose > 0) {
     --aRowsToLose;
@@ -1234,7 +1234,7 @@ nsListBoxBodyFrame::ContinueReflow(nscoo
       // We have some hangers on (probably caused by shrinking the size of the window).
       // Nuke them.
       nsIFrame* currFrame = startingPoint->GetNextSibling();
-      nsBoxLayoutState state(PresContext());
+      nsBoxLayoutState state(PresContext(), nsnull);
 
       while (currFrame) {
         nsIFrame* nextFrame = currFrame->GetNextSibling();
@@ -1256,7 +1256,7 @@ nsListBoxBodyFrame::ListBoxAppendFrames(
 nsListBoxBodyFrame::ListBoxAppendFrames(nsIFrame* aFrameList)
 {
   // append them after
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
   mFrames.AppendFrames(nsnull, aFrameList);
   if (mLayoutManager)
     mLayoutManager->ChildrenAppended(this, state, aFrameList);
@@ -1271,7 +1271,7 @@ nsListBoxBodyFrame::ListBoxInsertFrames(
 nsListBoxBodyFrame::ListBoxInsertFrames(nsIFrame* aPrevFrame, nsIFrame* aFrameList)
 {
   // insert the frames to our info list
-  nsBoxLayoutState state(PresContext());
+  nsBoxLayoutState state(PresContext(), nsnull);
   mFrames.InsertFrames(nsnull, aPrevFrame, aFrameList);
   if (mLayoutManager)
     mLayoutManager->ChildrenInserted(this, state, aPrevFrame, aFrameList);
@@ -1385,7 +1385,7 @@ nsListBoxBodyFrame::OnContentRemoved(nsP
     mTopFrame = mTopFrame->GetNextSibling();
 
   // Go ahead and delete the frame.
-  nsBoxLayoutState state(aPresContext);
+  nsBoxLayoutState state(aPresContext, nsnull);
   if (aChildFrame) {
     RemoveChildFrame(state, aChildFrame);
   }
diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -889,7 +889,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aAc
       }
 
       nsRect curRect(menuPopup->GetRect());
-      nsBoxLayoutState state(presContext);
+      nsBoxLayoutState state(presContext, nsnull);
       menuPopup->SetBounds(state, nsRect(0,0,mLastPref.width, mLastPref.height));
 
       nsIView* view = menuPopup->GetView();
@@ -1959,7 +1959,7 @@ public:
     PRBool shouldFlush = PR_FALSE;
     nsIFrame* frame = mWeakFrame.GetFrame();
     if (frame) {
-      nsBoxLayoutState state(frame->PresContext());
+      nsBoxLayoutState state(frame->PresContext(), nsnull);
       if (!frame->IsCollapsed(state)) {
         nsIMenuFrame* imenu = nsnull;
         CallQueryInterface(frame, &imenu);
diff --git a/layout/xul/base/src/nsMenuPopupFrame.cpp b/layout/xul/base/src/nsMenuPopupFrame.cpp
--- a/layout/xul/base/src/nsMenuPopupFrame.cpp
+++ b/layout/xul/base/src/nsMenuPopupFrame.cpp
@@ -1004,7 +1004,7 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPr
   nsBoxFrame::SetPosition(frameOrigin);
 
   if (sizedToPopup) {
-      nsBoxLayoutState state(PresContext());
+      nsBoxLayoutState state(PresContext(), nsnull);
       SetBounds(state, nsRect(mRect.x, mRect.y, parentRect.width, mRect.height));
   }
     
diff --git a/layout/xul/base/src/nsSplitterFrame.cpp b/layout/xul/base/src/nsSplitterFrame.cpp
--- a/layout/xul/base/src/nsSplitterFrame.cpp
+++ b/layout/xul/base/src/nsSplitterFrame.cpp
@@ -726,7 +726,8 @@ nsSplitterFrameInner::MouseDown(nsIDOMEv
 
   // XXXbz using this state for GetPrefSize/GetMinSize is wrong.  It
   // needs a rendering context!
-  nsBoxLayoutState state(outerPresContext);
+  // XXX temporary until 379090 lands
+  nsBoxLayoutState state(outerPresContext, nsnull);
   mCurrentPos = 0;
   mPressed = PR_TRUE;
 
@@ -1025,7 +1026,7 @@ nsSplitterFrameInner::AdjustChildren(nsP
 {
   ///printf("------- AdjustChildren------\n");
 
-  nsBoxLayoutState state(aPresContext);
+  nsBoxLayoutState state(aPresContext, nsnull);
 
   nscoord onePixel = nsPresContext::CSSPixelsToAppUnits(1);
 
@@ -1193,6 +1194,6 @@ nsSplitterFrameInner::MoveSplitterBy(nsP
 
   // redraw immediately only what changed. This is animation so 
   // it must be immediate.
-  nsBoxLayoutState state(aPresContext);
+  nsBoxLayoutState state(aPresContext, nsnull);
   mParentBox->Redraw(state, &invalid, PR_TRUE);
 }
diff --git a/layout/xul/base/src/nsTextBoxFrame.cpp b/layout/xul/base/src/nsTextBoxFrame.cpp
--- a/layout/xul/base/src/nsTextBoxFrame.cpp
+++ b/layout/xul/base/src/nsTextBoxFrame.cpp
@@ -127,7 +127,7 @@ nsTextBoxFrame::AttributeChanged(PRInt32
         PresContext()->PresShell()->
           FrameNeedsReflow(this, nsIPresShell::eStyleChange);
     } else if (aRedraw) {
-        nsBoxLayoutState state(PresContext());
+        nsBoxLayoutState state(PresContext(), nsnull);
         Redraw(state);
     }
 

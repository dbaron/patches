Add assertions to make underlying problem in bug 379090 more obvious, and fix another occurrence.

diff --git a/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp b/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
--- a/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
+++ b/layout/xul/base/src/grid/nsGridRowLeafFrame.cpp
@@ -84,7 +84,7 @@ nsGridRowLeafFrame::GetBorderAndPadding(
 
   PRBool isHorizontal = IsHorizontal();
 
-  nsBoxLayoutState state((nsPresContext*) PresContext());
+  nsBoxLayoutState state(PresContext());
 
   PRInt32 firstIndex = 0;
   PRInt32 lastIndex = 0;
diff --git a/layout/xul/base/src/nsBox.cpp b/layout/xul/base/src/nsBox.cpp
--- a/layout/xul/base/src/nsBox.cpp
+++ b/layout/xul/base/src/nsBox.cpp
@@ -456,6 +456,9 @@ nsSize
 nsSize
 nsBox::GetPrefSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize pref(0,0);
   DISPLAY_PREF_SIZE(this, pref);
 
@@ -475,6 +478,9 @@ nsSize
 nsSize
 nsBox::GetMinSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize min(0,0);
   DISPLAY_MIN_SIZE(this, min);
 
@@ -495,6 +501,9 @@ nsSize
 nsSize
 nsBox::GetMaxSize(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize max(NS_INTRINSICSIZE, NS_INTRINSICSIZE);
   DISPLAY_MAX_SIZE(this, max);
 
@@ -547,6 +556,9 @@ nsresult
 nsresult
 nsIFrame::Layout(nsBoxLayoutState& aState)
 {
+  NS_ASSERTION(aState.GetRenderingContext(),
+               "must have rendering context");
+
   nsBox *box = NS_STATIC_CAST(nsBox*, this);
   DISPLAY_LAYOUT(box);
 
diff --git a/layout/xul/base/src/nsBoxFrame.cpp b/layout/xul/base/src/nsBoxFrame.cpp
--- a/layout/xul/base/src/nsBoxFrame.cpp
+++ b/layout/xul/base/src/nsBoxFrame.cpp
@@ -805,6 +805,9 @@ nsSize
 nsSize
 nsBoxFrame::GetPrefSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(0,0);
   DISPLAY_PREF_SIZE(this, size);
   if (!DoesNeedRecalc(mPrefSize)) {
@@ -861,6 +864,9 @@ nsSize
 nsSize
 nsBoxFrame::GetMinSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(0,0);
   DISPLAY_MIN_SIZE(this, size);
   if (!DoesNeedRecalc(mMinSize)) {
@@ -894,6 +900,9 @@ nsSize
 nsSize
 nsBoxFrame::GetMaxSize(nsBoxLayoutState& aBoxLayoutState)
 {
+  NS_ASSERTION(aBoxLayoutState.GetRenderingContext(),
+               "must have rendering context");
+
   nsSize size(NS_INTRINSICSIZE, NS_INTRINSICSIZE);
   DISPLAY_MAX_SIZE(this, size);
   if (!DoesNeedRecalc(mMaxSize)) {
@@ -1856,8 +1865,6 @@ nsBoxFrame::CreateViewForFrame(nsPresCon
   NS_ASSERTION(aForce, "We only get called to force view creation now");
   // If we don't yet have a view, see if we need a view
   if (!aFrame->HasView()) {
-    PRInt32 zIndex = 0;
-    PRBool  autoZIndex = PR_FALSE;
 
     if (aForce) {
       // Create a view
diff --git a/layout/xul/base/src/nsSplitterFrame.cpp b/layout/xul/base/src/nsSplitterFrame.cpp
--- a/layout/xul/base/src/nsSplitterFrame.cpp
+++ b/layout/xul/base/src/nsSplitterFrame.cpp
@@ -726,6 +726,7 @@ nsSplitterFrameInner::MouseDown(nsIDOMEv
 
   // XXXbz using this state for GetPrefSize/GetMinSize is wrong.  It
   // needs a rendering context!
+  // XXX temporary until 379090 lands
   nsBoxLayoutState state(outerPresContext);
   mCurrentPos = 0;
   mPressed = PR_TRUE;

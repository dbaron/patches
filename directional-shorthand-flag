Add a CSS_PROPERTY_DIRECTIONAL_SHORTHAND flag.  (Bug 160403)

diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -289,80 +289,80 @@ CSS_PROP_SHORTHAND(border-bottom, border
 CSS_PROP_SHORTHAND(border-bottom, border_bottom, BorderBottom, 0)
 CSS_PROP_BORDER(border-bottom-color, border_bottom_color, BorderBottomColor, 0, Margin, mBorderColor.mBottom, eCSSType_Value, kBorderColorKTable)
 CSS_PROP_BORDER(-moz-border-bottom-colors, border_bottom_colors, MozBorderBottomColors, 0, Margin, mBorderColors.mBottom, eCSSType_ValueList, nsnull)
 CSS_PROP_BORDER(border-bottom-style, border_bottom_style, BorderBottomStyle, 0, Margin, mBorderStyle.mBottom, eCSSType_Value, kBorderStyleKTable)  // on/off will need reflow
 CSS_PROP_BORDER(border-bottom-width, border_bottom_width, BorderBottomWidth, 0, Margin, mBorderWidth.mBottom, eCSSType_Value, kBorderWidthKTable)
 CSS_PROP_TABLEBORDER(border-collapse, border_collapse, BorderCollapse, 0, Table, mBorderCollapse, eCSSType_Value, kBorderCollapseKTable)
 CSS_PROP_SHORTHAND(border-color, border_color, BorderColor, 0)
 CSS_PROP_SHORTHAND(-moz-border-end, border_end, MozBorderEnd, 0)
-CSS_PROP_SHORTHAND(-moz-border-end-color, border_end_color, MozBorderEndColor, 0)
+CSS_PROP_SHORTHAND(-moz-border-end-color, border_end_color, MozBorderEndColor, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-end-color-value, border_end_color_value, X, 0, Margin, mBorderEndColor, eCSSType_Value, kBorderColorKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-border-end-style, border_end_style, MozBorderEndStyle, 0)
+CSS_PROP_SHORTHAND(-moz-border-end-style, border_end_style, MozBorderEndStyle, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-end-style-value, border_end_style_value, X, 0, Margin, mBorderEndStyle, eCSSType_Value, kBorderStyleKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-border-end-width, border_end_width, MozBorderEndWidth, 0)
+CSS_PROP_SHORTHAND(-moz-border-end-width, border_end_width, MozBorderEndWidth, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-end-width-value, border_end_width_value, X, 0, Margin, mBorderEndWidth, eCSSType_Value, kBorderWidthKTable)
 #endif
 CSS_PROP_BORDER(-moz-border-image, border_image, MozBorderImage, 0, Margin, mBorderImage, eCSSType_Value, kBorderImageKTable)
 CSS_PROP_SHORTHAND(border-left, border_left, BorderLeft, 0)
-CSS_PROP_SHORTHAND(border-left-color, border_left_color, BorderLeftColor, 0)
+CSS_PROP_SHORTHAND(border-left-color, border_left_color, BorderLeftColor, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-left-color-value, border_left_color_value, X, 0, Margin, mBorderColor.mLeft, eCSSType_Value, kBorderColorKTable)
 CSS_PROP_BORDER(border-left-color-ltr-source, border_left_color_ltr_source, X, 0, Margin, mBorderLeftColorLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-left-color-rtl-source, border_left_color_rtl_source, X, 0, Margin, mBorderLeftColorRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
 CSS_PROP_BORDER(-moz-border-left-colors, border_left_colors, MozBorderLeftColors, 0, Margin, mBorderColors.mLeft, eCSSType_ValueList, nsnull)
-CSS_PROP_SHORTHAND(border-left-style, border_left_style, BorderLeftStyle, 0) // on/off will need reflow
+CSS_PROP_SHORTHAND(border-left-style, border_left_style, BorderLeftStyle, CSS_PROPERTY_DIRECTIONAL_SHORTHAND) // on/off will need reflow
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-left-style-value, border_left_style_value, X, 0, Margin, mBorderStyle.mLeft, eCSSType_Value, kBorderStyleKTable)
 CSS_PROP_BORDER(border-left-style-ltr-source, border_left_style_ltr_source, X, 0, Margin, mBorderLeftStyleLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-left-style-rtl-source, border_left_style_rtl_source, X, 0, Margin, mBorderLeftStyleRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(border-left-width, border_left_width, BorderLeftWidth, 0)
+CSS_PROP_SHORTHAND(border-left-width, border_left_width, BorderLeftWidth, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-left-width-value, border_left_width_value, X, 0, Margin, mBorderWidth.mLeft, eCSSType_Value, kBorderWidthKTable)
 CSS_PROP_BORDER(border-left-width-ltr-source, border_left_width_ltr_source, X, 0, Margin, mBorderLeftWidthLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-left-width-rtl-source, border_left_width_rtl_source, X, 0, Margin, mBorderLeftWidthRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
 CSS_PROP_SHORTHAND(border-right, border_right, BorderRight, 0)
-CSS_PROP_SHORTHAND(border-right-color, border_right_color, BorderRightColor, 0)
+CSS_PROP_SHORTHAND(border-right-color, border_right_color, BorderRightColor, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-right-color-value, border_right_color_value, X, 0, Margin, mBorderColor.mRight, eCSSType_Value, kBorderColorKTable)
 CSS_PROP_BORDER(border-right-color-ltr-source, border_right_color_ltr_source, X, 0, Margin, mBorderRightColorLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-right-color-rtl-source, border_right_color_rtl_source, X, 0, Margin, mBorderRightColorRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
 CSS_PROP_BORDER(-moz-border-right-colors, border_right_colors, MozBorderRightColors, 0, Margin, mBorderColors.mRight, eCSSType_ValueList, nsnull)
-CSS_PROP_SHORTHAND(border-right-style, border_right_style, BorderRightStyle, 0) // on/off will need reflow
+CSS_PROP_SHORTHAND(border-right-style, border_right_style, BorderRightStyle, CSS_PROPERTY_DIRECTIONAL_SHORTHAND) // on/off will need reflow
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-right-style-value, border_right_style_value, X, 0, Margin, mBorderStyle.mRight, eCSSType_Value, kBorderStyleKTable)
 CSS_PROP_BORDER(border-right-style-ltr-source, border_right_style_ltr_source, X, 0, Margin, mBorderRightStyleLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-right-style-rtl-source, border_right_style_rtl_source, X, 0, Margin, mBorderRightStyleRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(border-right-width, border_right_width, BorderRightWidth, 0)
+CSS_PROP_SHORTHAND(border-right-width, border_right_width, BorderRightWidth, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-right-width-value, border_right_width_value, X, 0, Margin, mBorderWidth.mRight, eCSSType_Value, kBorderWidthKTable)
 CSS_PROP_BORDER(border-right-width-ltr-source, border_right_width_ltr_source, X, 0, Margin, mBorderRightWidthLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_BORDER(border-right-width-rtl-source, border_right_width_rtl_source, X, 0, Margin, mBorderRightWidthRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
 CSS_PROP_TABLEBORDER(border-spacing, border_spacing, BorderSpacing, 0, Table, mBorderSpacing, eCSSType_ValuePair, nsnull) // XXX bug 3935
 CSS_PROP_SHORTHAND(-moz-border-start, border_start, MozBorderStart, 0)
-CSS_PROP_SHORTHAND(-moz-border-start-color, border_start_color, MozBorderStartColor, 0)
+CSS_PROP_SHORTHAND(-moz-border-start-color, border_start_color, MozBorderStartColor, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-start-color-value, border_start_color_value, X, 0, Margin, mBorderStartColor, eCSSType_Value, kBorderColorKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-border-start-style, border_start_style, MozBorderStartStyle, 0)
+CSS_PROP_SHORTHAND(-moz-border-start-style, border_start_style, MozBorderStartStyle, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-start-style-value, border_start_style_value, X, 0, Margin, mBorderStartStyle, eCSSType_Value, kBorderStyleKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-border-start-width, border_start_width, MozBorderStartWidth, 0)
+CSS_PROP_SHORTHAND(-moz-border-start-width, border_start_width, MozBorderStartWidth, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(border-start-width-value, border_start_width_value, X, 0, Margin, mBorderStartWidth, eCSSType_Value, kBorderWidthKTable)
 #endif
 CSS_PROP_SHORTHAND(border-style, border_style, BorderStyle, 0)  // on/off will need reflow
 CSS_PROP_SHORTHAND(border-top, border_top, BorderTop, 0)
 CSS_PROP_BORDER(border-top-color, border_top_color, BorderTopColor, 0, Margin, mBorderColor.mTop, eCSSType_Value, kBorderColorKTable)
 CSS_PROP_BORDER(-moz-border-top-colors, border_top_colors, MozBorderTopColors, 0, Margin, mBorderColors.mTop, eCSSType_ValueList, nsnull)
 CSS_PROP_BORDER(border-top-style, border_top_style, BorderTopStyle, 0, Margin, mBorderStyle.mTop, eCSSType_Value, kBorderStyleKTable)  // on/off will need reflow
@@ -411,33 +411,33 @@ CSS_PROP_TEXT(letter-spacing, letter_spa
 CSS_PROP_TEXT(letter-spacing, letter_spacing, LetterSpacing, 0, Text, mLetterSpacing, eCSSType_Value, nsnull)
 CSS_PROP_TEXT(line-height, line_height, LineHeight, 0, Text, mLineHeight, eCSSType_Value, nsnull)
 CSS_PROP_SHORTHAND(list-style, list_style, ListStyle, 0)
 CSS_PROP_LIST(list-style-image, list_style_image, ListStyleImage, 0, List, mImage, eCSSType_Value, nsnull)
 CSS_PROP_LIST(list-style-position, list_style_position, ListStylePosition, 0, List, mPosition, eCSSType_Value, kListStylePositionKTable)
 CSS_PROP_LIST(list-style-type, list_style_type, ListStyleType, 0, List, mType, eCSSType_Value, kListStyleKTable)
 CSS_PROP_SHORTHAND(margin, margin, Margin, 0)
 CSS_PROP_MARGIN(margin-bottom, margin_bottom, MarginBottom, 0, Margin, mMargin.mBottom, eCSSType_Value, nsnull)
-CSS_PROP_SHORTHAND(-moz-margin-end, margin_end, MozMarginEnd, 0)
+CSS_PROP_SHORTHAND(-moz-margin-end, margin_end, MozMarginEnd, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_MARGIN(margin-end-value, margin_end_value, X, 0, Margin, mMarginEnd, eCSSType_Value, nsnull)
 #endif
-CSS_PROP_SHORTHAND(margin-left, margin_left, MarginLeft, 0)
+CSS_PROP_SHORTHAND(margin-left, margin_left, MarginLeft, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_MARGIN(margin-left-value, margin_left_value, X, 0, Margin, mMargin.mLeft, eCSSType_Value, nsnull)
 CSS_PROP_MARGIN(margin-left-ltr-source, margin_left_ltr_source, X, 0, Margin, mMarginLeftLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_MARGIN(margin-left-rtl-source, margin_left_rtl_source, X, 0, Margin, mMarginLeftRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(margin-right, margin_right, MarginRight, 0)
+CSS_PROP_SHORTHAND(margin-right, margin_right, MarginRight, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_MARGIN(margin-right-value, margin_right_value, X, 0, Margin, mMargin.mRight, eCSSType_Value, nsnull)
 CSS_PROP_MARGIN(margin-right-ltr-source, margin_right_ltr_source, X, 0, Margin, mMarginRightLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_MARGIN(margin-right-rtl-source, margin_right_rtl_source, X, 0, Margin, mMarginRightRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-margin-start, margin_start, MozMarginStart, 0)
+CSS_PROP_SHORTHAND(-moz-margin-start, margin_start, MozMarginStart, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_MARGIN(margin-start-value, margin_start_value, X, 0, Margin, mMarginStart, eCSSType_Value, nsnull)
 #endif
 CSS_PROP_MARGIN(margin-top, margin_top, MarginTop, 0, Margin, mMargin.mTop, eCSSType_Value, nsnull)
 CSS_PROP_CONTENT(marker-offset, marker_offset, MarkerOffset, 0, Content, mMarkerOffset, eCSSType_Value, nsnull)
 CSS_PROP_BACKENDONLY(marks, marks, Marks, 0, Page, mMarks, eCSSType_Value, kPageMarksKTable)
 CSS_PROP_POSITION(max-height, max_height, MaxHeight, 0, Position, mMaxHeight, eCSSType_Value, nsnull)
 CSS_PROP_POSITION(max-width, max_width, MaxWidth, 0, Position, mMaxWidth, eCSSType_Value, kWidthKTable)
@@ -450,33 +450,33 @@ CSS_PROP_OUTLINE(outline-style, outline_
 CSS_PROP_OUTLINE(outline-style, outline_style, OutlineStyle, 0, Margin, mOutlineStyle, eCSSType_Value, kBorderStyleKTable)
 CSS_PROP_OUTLINE(outline-width, outline_width, OutlineWidth, 0, Margin, mOutlineWidth, eCSSType_Value, kBorderWidthKTable)
 CSS_PROP_OUTLINE(outline-offset, outline_offset, OutlineOffset, 0, Margin, mOutlineOffset, eCSSType_Value, nsnull)
 CSS_PROP_SHORTHAND(overflow, overflow, Overflow, 0)
 CSS_PROP_DISPLAY(overflow-x, overflow_x, OverflowX, 0, Display, mOverflowX, eCSSType_Value, kOverflowSubKTable)
 CSS_PROP_DISPLAY(overflow-y, overflow_y, OverflowY, 0, Display, mOverflowY, eCSSType_Value, kOverflowSubKTable)
 CSS_PROP_SHORTHAND(padding, padding, Padding, 0)
 CSS_PROP_PADDING(padding-bottom, padding_bottom, PaddingBottom, 0, Margin, mPadding.mBottom, eCSSType_Value, nsnull)
-CSS_PROP_SHORTHAND(-moz-padding-end, padding_end, MozPaddingEnd, 0)
+CSS_PROP_SHORTHAND(-moz-padding-end, padding_end, MozPaddingEnd, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(padding-end-value, padding_end_value, X, 0, Margin, mPaddingEnd, eCSSType_Value, nsnull)
 #endif
-CSS_PROP_SHORTHAND(padding-left, padding_left, PaddingLeft, 0)
+CSS_PROP_SHORTHAND(padding-left, padding_left, PaddingLeft, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(padding-left-value, padding_left_value, X, 0, Margin, mPadding.mLeft, eCSSType_Value, nsnull)
 CSS_PROP_PADDING(padding-left-ltr-source, padding_left_ltr_source, X, 0, Margin, mPaddingLeftLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_PADDING(padding-left-rtl-source, padding_left_rtl_source, X, 0, Margin, mPaddingLeftRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(padding-right, padding_right, PaddingRight, 0)
+CSS_PROP_SHORTHAND(padding-right, padding_right, PaddingRight, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(padding-right-value, padding_right_value, X, 0, Margin, mPadding.mRight, eCSSType_Value, nsnull)
 CSS_PROP_PADDING(padding-right-ltr-source, padding_right_ltr_source, X, 0, Margin, mPaddingRightLTRSource, eCSSType_Value, kBoxPropSourceKTable)
 CSS_PROP_PADDING(padding-right-rtl-source, padding_right_rtl_source, X, 0, Margin, mPaddingRightRTLSource, eCSSType_Value, kBoxPropSourceKTable)
 #endif
-CSS_PROP_SHORTHAND(-moz-padding-start, padding_start, MozPaddingStart, 0)
+CSS_PROP_SHORTHAND(-moz-padding-start, padding_start, MozPaddingStart, CSS_PROPERTY_DIRECTIONAL_SHORTHAND)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(padding-start-value, padding_start_value, X, 0, Margin, mPaddingStart, eCSSType_Value, nsnull)
 #endif
 CSS_PROP_PADDING(padding-top, padding_top, PaddingTop, 0, Margin, mPadding.mTop, eCSSType_Value, nsnull)
 CSS_PROP_BACKENDONLY(page, page, Page, 0, Breaks, mPage, eCSSType_Value, nsnull)
 CSS_PROP_DISPLAY(page-break-after, page_break_after, PageBreakAfter, 0, Display, mBreakAfter, eCSSType_Value, kPageBreakKTable) // temp fix for bug 24000
 CSS_PROP_DISPLAY(page-break-before, page_break_before, PageBreakBefore, 0, Display, mBreakBefore, eCSSType_Value, kPageBreakKTable) // temp fix for bug 24000
 CSS_PROP_BACKENDONLY(page-break-inside, page_break_inside, PageBreakInside, 0, Breaks, mPageBreakInside, eCSSType_Value, kPageBreakInsideKTable)
diff --git a/layout/style/nsCSSProps.h b/layout/style/nsCSSProps.h
--- a/layout/style/nsCSSProps.h
+++ b/layout/style/nsCSSProps.h
@@ -44,16 +44,23 @@
 #ifndef nsCSSProps_h___
 #define nsCSSProps_h___
 
 #include "nsString.h"
 #include "nsChangeHint.h"
 #include "nsCSSProperty.h"
 #include "nsStyleStruct.h"
 #include "nsCSSKeywords.h"
+
+// Flags for the kFlagsTable bitfield (flags_ in nsCSSPropList.h)
+
+// A property that is a shorthand *only* because it has hidden *-value
+// and *-source subproperties.  (Its subproperty table must be in the
+// order *-value, *-ltr-source, *-rtl-source.)
+#define CSS_PROPERTY_DIRECTIONAL_SHORTHAND (1<<0)
 
 class nsCSSProps {
 public:
   static void AddRefTable(void);
   static void ReleaseTable(void);
 
   // Given a property string, return the enum value
   static nsCSSProperty LookupProperty(const nsAString& aProperty);

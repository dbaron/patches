From: L. David Baron <dbaron@dbaron.org>

Backout temporary debugging code for bug 563980 (changesets 76e0ed39f6ad and 4498b6800a49).

diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2070,22 +2070,16 @@ nsGenericElement::nsGenericElement(nsINo
   SetFlags(NODE_IS_ELEMENT |
            (nsIProgrammingLanguage::JAVASCRIPT << NODE_SCRIPT_TYPE_OFFSET));
 }
 
 nsGenericElement::~nsGenericElement()
 {
   NS_PRECONDITION(!IsInDoc(),
                   "Please remove this from the document properly");
-#ifdef DEBUG
-  if (IsInDoc()) {
-    printf("The element still in the document is:\n");
-    List(stdout, 2, nsCString());
-  }
-#endif
 }
 
 NS_IMETHODIMP
 nsGenericElement::GetNodeName(nsAString& aNodeName)
 {
   mNodeInfo->GetQualifiedName(aNodeName);
   return NS_OK;
 }
diff --git a/editor/libeditor/html/nsHTMLAbsPosition.cpp b/editor/libeditor/html/nsHTMLAbsPosition.cpp
--- a/editor/libeditor/html/nsHTMLAbsPosition.cpp
+++ b/editor/libeditor/html/nsHTMLAbsPosition.cpp
@@ -308,30 +308,24 @@ nsHTMLEditor::HideGrabber()
     mAbsolutelyPositionedObject->RemoveAttribute(NS_LITERAL_STRING("_moz_abspos"));
   if (NS_FAILED(res)) return res;
 
   mAbsolutelyPositionedObject = nsnull;
   NS_ENSURE_TRUE(mGrabber, NS_ERROR_NULL_POINTER);
 
   // get the presshell's document observer interface.
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
-  if (!ps) {
-    NS_WARNING("no pres shell; can't remove grabber");
-    return NS_ERROR_NOT_INITIALIZED;
-  }
+  if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
   nsCOMPtr<nsIDOMNode> parentNode;
   res = mGrabber->GetParentNode(getter_AddRefs(parentNode));
   NS_ENSURE_SUCCESS(res, res);
 
   nsCOMPtr<nsIContent> parentContent = do_QueryInterface(parentNode);
-  if (!parentContent) {
-    NS_WARNING("no parent content; can't remove grabber");
-    return NS_ERROR_NULL_POINTER;
-  }
+  if (!parentContent) return NS_ERROR_NULL_POINTER;
 
   DeleteRefToAnonymousNode(mGrabber, parentContent, ps);
   mGrabber = nsnull;
   DeleteRefToAnonymousNode(mPositioningShadow, parentContent, ps);
   mPositioningShadow = nsnull;
 
   return NS_OK;
 }
diff --git a/editor/libeditor/html/nsHTMLInlineTableEditor.cpp b/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
--- a/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
+++ b/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
@@ -120,30 +120,24 @@ nsHTMLEditor::HideInlineTableEditingUI()
   RemoveMouseClickListener(mRemoveColumnButton);
   RemoveMouseClickListener(mAddColumnAfterButton);
   RemoveMouseClickListener(mAddRowBeforeButton);
   RemoveMouseClickListener(mRemoveRowButton);
   RemoveMouseClickListener(mAddRowAfterButton);
 
   // get the presshell's document observer interface.
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
-  if (!ps) {
-    NS_WARNING("no pres shell; can't remove inline table editing");
-    return NS_ERROR_NOT_INITIALIZED;
-  }
+  if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
   // get the root content node.
 
   nsIDOMElement *bodyElement = GetRoot();
 
   nsCOMPtr<nsIContent> bodyContent( do_QueryInterface(bodyElement) );
-  if (!bodyContent) {
-    NS_WARNING("no body; can't remove inline table editing");
-    return NS_ERROR_FAILURE;
-  }
+  if (!bodyContent) return NS_ERROR_FAILURE;
 
   DeleteRefToAnonymousNode(mAddColumnBeforeButton, bodyContent, ps);
   mAddColumnBeforeButton = nsnull;
   DeleteRefToAnonymousNode(mRemoveColumnButton, bodyContent, ps);
   mRemoveColumnButton = nsnull;
   DeleteRefToAnonymousNode(mAddColumnAfterButton, bodyContent, ps);
   mAddColumnAfterButton = nsnull;
   DeleteRefToAnonymousNode(mAddRowBeforeButton, bodyContent, ps);
diff --git a/editor/libeditor/html/nsHTMLObjectResizer.cpp b/editor/libeditor/html/nsHTMLObjectResizer.cpp
--- a/editor/libeditor/html/nsHTMLObjectResizer.cpp
+++ b/editor/libeditor/html/nsHTMLObjectResizer.cpp
@@ -434,20 +434,17 @@ nsHTMLEditor::ShowResizersInner(nsIDOMEl
 NS_IMETHODIMP 
 nsHTMLEditor::HideResizers(void)
 {
   if (!mResizedObject)
     return NS_OK;
 
   // get the presshell's document observer interface.
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
-  if (!ps) {
-    NS_WARNING("no pres shell; can't remove resizers");
-    return NS_ERROR_NOT_INITIALIZED;
-  }
+  if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
   nsresult res;
   nsCOMPtr<nsIDOMNode> parentNode;
   nsCOMPtr<nsIContent> parentContent;
 
   if (mTopLeftHandle) {
     res = mTopLeftHandle->GetParentNode(getter_AddRefs(parentNode));
     NS_ENSURE_SUCCESS(res, res);

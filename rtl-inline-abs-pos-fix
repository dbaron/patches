Remove no-longer-needed else clauses, and make the *IsExact members DEBUG-only.  b=419076

diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -758,10 +758,14 @@ struct nsHypotheticalBox {
   nscoord       mLeft, mRight;
   // offset from top edge of containing block (which is a padding edge)
   nscoord       mTop;
+#ifdef DEBUG
   PRPackedBool  mLeftIsExact, mRightIsExact;
+#endif
 
   nsHypotheticalBox() {
+#ifdef DEBUG
     mLeftIsExact = mRightIsExact = PR_FALSE;
+#endif
   }
 };
       
@@ -1018,17 +1022,23 @@ nsHTMLReflowState::CalculateHypothetical
     } else {
       aHypotheticalBox.mLeft = aBlockLeftContentEdge;
     }
+#ifdef DEBUG
     aHypotheticalBox.mLeftIsExact = PR_TRUE;
+#endif
 
     if (knowBoxWidth) {
       aHypotheticalBox.mRight = aHypotheticalBox.mLeft + boxWidth;
+#ifdef DEBUG
       aHypotheticalBox.mRightIsExact = PR_TRUE;
+#endif
     } else {
       // We can't compute the right edge because we don't know the desired
       // width. So instead use the right content edge of the block parent,
       // but remember it's not exact
       aHypotheticalBox.mRight = aBlockLeftContentEdge + aBlockContentWidth;
+#ifdef DEBUG
       aHypotheticalBox.mRightIsExact = PR_FALSE;
+#endif
     }
 
   } else {
@@ -1038,17 +1048,23 @@ nsHTMLReflowState::CalculateHypothetical
     } else {
       aHypotheticalBox.mRight = aBlockLeftContentEdge + aBlockContentWidth;
     }
+#ifdef DEBUG
     aHypotheticalBox.mRightIsExact = PR_TRUE;
+#endif
     
     if (knowBoxWidth) {
       aHypotheticalBox.mLeft = aHypotheticalBox.mRight - boxWidth;
+#ifdef DEBUG
       aHypotheticalBox.mLeftIsExact = PR_TRUE;
+#endif
     } else {
       // We can't compute the left edge because we don't know the desired
       // width. So instead use the left content edge of the block parent,
       // but remember it's not exact
       aHypotheticalBox.mLeft = aBlockLeftContentEdge;
+#ifdef DEBUG
       aHypotheticalBox.mLeftIsExact = PR_FALSE;
+#endif
     }
 
   }
@@ -1148,25 +1164,15 @@ nsHTMLReflowState::InitAbsoluteConstrain
     // Use the direction of the original ("static-position") containing block
     // to dictate whether 'left' or 'right' is treated like 'static-position'.
     if (NS_STYLE_DIRECTION_LTR == cbFrame->GetStyleVisibility()->mDirection) {
-      if (hypotheticalBox.mLeftIsExact) {
-        mComputedOffsets.left = hypotheticalBox.mLeft;
-        leftIsAuto = PR_FALSE;
-      } else {
-        // Well, we don't know 'left' so we have to use 'right' and
-        // then solve for 'left'
-        mComputedOffsets.right = hypotheticalBox.mRight;
-        rightIsAuto = PR_FALSE;
-      }
+      NS_ASSERTION(hypotheticalBox.mLeftIsExact, "should always have "
+                   "exact value on containing block's start side");
+      mComputedOffsets.left = hypotheticalBox.mLeft;
+      leftIsAuto = PR_FALSE;
     } else {
-      if (hypotheticalBox.mRightIsExact) {
-        mComputedOffsets.right = containingBlockWidth - hypotheticalBox.mRight;
-        rightIsAuto = PR_FALSE;
-      } else {
-        // Well, we don't know 'right' so we have to use 'left' and
-        // then solve for 'right'
-        mComputedOffsets.left = hypotheticalBox.mLeft;
-        leftIsAuto = PR_FALSE;
-      }
+      NS_ASSERTION(hypotheticalBox.mRightIsExact, "should always have "
+                   "exact value on containing block's start side");
+      mComputedOffsets.right = containingBlockWidth - hypotheticalBox.mRight;
+      rightIsAuto = PR_FALSE;
     }
   }
 

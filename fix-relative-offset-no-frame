From: L. David Baron <dbaron@dbaron.org>

Fix computed style for percents for offset properties when the element doesn't have a frame.  (Bug 585715)  r=bzbarsky

diff --git a/layout/style/nsComputedDOMStyle.cpp b/layout/style/nsComputedDOMStyle.cpp
--- a/layout/style/nsComputedDOMStyle.cpp
+++ b/layout/style/nsComputedDOMStyle.cpp
@@ -3517,18 +3517,26 @@ nsComputedDOMStyle::GetROCSSValueList(PR
 nsresult
 nsComputedDOMStyle::GetOffsetWidthFor(mozilla::css::Side aSide,
                                       nsIDOMCSSValue** aValue)
 {
   const nsStyleDisplay* display = GetStyleDisplay();
 
   AssertFlushedPendingReflows();
 
+  PRUint8 position = display->mPosition;
+  if (!mOuterFrame) {
+    // GetRelativeOffset and GetAbsoluteOffset don't handle elements
+    // without frames in any sensible way.  GetStaticOffset, however,
+    // is perfect for that case.
+    position = NS_STYLE_POSITION_STATIC;
+  }
+
   nsresult rv = NS_OK;
-  switch (display->mPosition) {
+  switch (position) {
     case NS_STYLE_POSITION_STATIC:
       rv = GetStaticOffset(aSide, aValue);
       break;
     case NS_STYLE_POSITION_RELATIVE:
       rv = GetRelativeOffset(aSide, aValue);
       break;
     case NS_STYLE_POSITION_ABSOLUTE:
     case NS_STYLE_POSITION_FIXED:
diff --git a/layout/style/test/test_bug391034.html b/layout/style/test/test_bug391034.html
--- a/layout/style/test/test_bug391034.html
+++ b/layout/style/test/test_bug391034.html
@@ -51,22 +51,22 @@ is(getComp("three").top, "-6px",
    "Incorrect computed top offset if specified in %")
 is(getComp("three").right, "-10px",
    "Incorrect computed right offset if specified in %")
 is(getComp("three").bottom, "6px",
    "Incorrect computed bottom offset if specified in %")
 is(getComp("three").left, "10px",
    "Incorrect computed left offset if specified in %")
 
-is(getComp("four").top, "0px",
+is(getComp("four").top, "auto",
    "Incorrect undisplayed computed top offset if specified in %")
-is(getComp("four").right, "0px",
+is(getComp("four").right, "auto",
    "Incorrect undisplayed computed right offset if specified in %")
-is(getComp("four").bottom, "0px",
+is(getComp("four").bottom, "20%",
    "Incorrect undisplayed computed bottom offset if specified in %")
-is(getComp("four").left, "0px",
+is(getComp("four").left, "10%",
    "Incorrect undisplayed computed left offset if specified in %")
 
 </script>
 </pre>
 </body>
 </html>
 
diff --git a/layout/style/test/test_value_computation.html b/layout/style/test/test_value_computation.html
--- a/layout/style/test/test_value_computation.html
+++ b/layout/style/test/test_value_computation.html
@@ -64,22 +64,16 @@ var gBadComputedNoFrame = {
   "margin-left": [ "0%" ],
   "margin-right": [ "0%" ],
   "margin-top": [ "0%" ],
   "padding": [ "0% 0px 0em 0pt" ],
   "padding-bottom": [ "0%" ],
   "padding-left": [ "0%" ],
   "padding-right": [ "0%" ],
   "padding-top": [ "0%" ],
-
-  // FIXME: file a bug
-  "top": [ "12%" ],
-  "right": [ "12%" ],
-  "bottom": [ "12%" ],
-  "left": [ "12%" ],
 };
 
 function xfail_value(property, value, is_initial, has_frame) {
   if ((property in gBadComputed) &&
       gBadComputed[property].indexOf(value) != -1)
     return true;
 
   if (!has_frame && (property in gBadComputedNoFrame) &&

Split nsTableOuterFrame::OuterReflowChild.  b=386704

diff --git a/layout/tables/nsTableOuterFrame.cpp b/layout/tables/nsTableOuterFrame.cpp
--- a/layout/tables/nsTableOuterFrame.cpp
+++ b/layout/tables/nsTableOuterFrame.cpp
@@ -1103,7 +1103,6 @@ nsTableOuterFrame::OuterReflowChild(nsPr
                                     nsHTMLReflowMetrics&       aMetrics,
                                     nscoord                    aAvailWidth, 
                                     nsSize&                    aDesiredSize,
-                                    nsMargin&                  aMargin,
                                     nsReflowStatus&            aStatus)
 { 
   aMargin = nsMargin(0,0,0,0);
@@ -1153,8 +1152,6 @@ nsTableOuterFrame::OuterReflowChild(nsPr
                             childPt.x, childPt.y, NS_FRAME_NO_MOVE_FRAME, aStatus);
   if (NS_FAILED(rv)) return rv;
   
-  aMargin = childRS.mComputedMargin;
-
   aDesiredSize.width  = aMetrics.width;
   aDesiredSize.height = aMetrics.height;
 
@@ -1223,13 +1220,16 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   #define LONGS_IN_HTMLRS \
     ((sizeof(nsHTMLReflowState) + sizeof(long) - 1) / sizeof(long))
   long captionRSSpace[LONGS_IN_HTMLRS];
+  nsHTMLReflowState *captionRS =
+    static_cast<nsHTMLReflowState*>((void*)captionRSSpace);
   if (reflowCaption) {
     nsReflowStatus capStatus; // don't let the caption cause incomplete
     rv = OuterReflowChild(aPresContext, mCaptionFrame, aOuterRS,
                           captionRSSpace, captionMet,
                           aOuterRS.ComputedWidth(), captionSize,
-                          captionMargin, capStatus);
+                          capStatus);
     if (NS_FAILED(rv)) return rv;
+    captionMargin = captionRS->mComputedMargin;
   } else if (mCaptionFrame) {
     captionSize = mCaptionFrame->GetSize();
     GetMargin(aPresContext, aOuterRS, mCaptionFrame, aOuterRS.ComputedWidth(),
@@ -1251,11 +1251,14 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   nsSize innerSize;
   nsMargin innerMargin;
   long innerRSSpace[LONGS_IN_HTMLRS];
+  nsHTMLReflowState *innerRS =
+    static_cast<nsHTMLReflowState*>((void*) innerRSSpace);
   if (reflowInner) {
     rv = OuterReflowChild(aPresContext, mInnerTableFrame, aOuterRS,
                           innerRSSpace, innerMet, innerAvailWidth,
-                          innerSize, innerMargin, aStatus);
+                          innerSize, aStatus);
     if (NS_FAILED(rv)) return rv;
+    innerMargin = innerRS->mComputedMargin;
   } else {
     innerSize = mInnerTableFrame->GetSize();
     GetMargin(aPresContext, aOuterRS, mInnerTableFrame,
@@ -1275,8 +1278,6 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
     GetCaptionOrigin(captionSide, containSize, innerSize, 
                      innerMargin, captionSize, captionMargin, captionOrigin);
     if (reflowCaption) {
-      nsHTMLReflowState *captionRS =
-        static_cast<nsHTMLReflowState*>((void*)captionRSSpace);
       FinishReflowChild(mCaptionFrame, aPresContext, captionRS, captionMet,
                         captionOrigin.x, captionOrigin.y, 0);
       captionRS->~nsHTMLReflowState();
@@ -1295,8 +1296,6 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   GetInnerOrigin(captionSide, containSize, captionSize, 
                  captionMargin, innerSize, innerMargin, innerOrigin);
   if (reflowInner) {
-    nsHTMLReflowState *innerRS =
-      static_cast<nsHTMLReflowState*>((void*) innerRSSpace);
     FinishReflowChild(mInnerTableFrame, aPresContext, innerRS, innerMet,
                       innerOrigin.x, innerOrigin.y, 0);
     innerRS->~nsHTMLReflowState();
diff --git a/layout/tables/nsTableOuterFrame.h b/layout/tables/nsTableOuterFrame.h
--- a/layout/tables/nsTableOuterFrame.h
+++ b/layout/tables/nsTableOuterFrame.h
@@ -258,7 +258,6 @@ protected:
                               nsHTMLReflowMetrics&      aMetrics,
                               nscoord                   aAvailWidth,
                               nsSize&                   aDesiredSize,
-                              nsMargin&                 aMargin,
                               nsReflowStatus&           aStatus);
 
   // Set the reflow metrics

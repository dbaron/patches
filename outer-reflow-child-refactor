Split nsTableOuterFrame::OuterReflowChild.  b=386704

diff --git a/layout/tables/nsTableOuterFrame.cpp b/layout/tables/nsTableOuterFrame.cpp
--- a/layout/tables/nsTableOuterFrame.cpp
+++ b/layout/tables/nsTableOuterFrame.cpp
@@ -1096,18 +1096,12 @@ nsTableOuterFrame::IsNested(const nsHTML
 }
 
 nsresult
-nsTableOuterFrame::OuterReflowChild(nsPresContext*             aPresContext,
-                                    nsIFrame*                  aChildFrame,
-                                    const nsHTMLReflowState&   aOuterRS,
-                                    void*                      aChildRSSpace,
-                                    nsHTMLReflowMetrics&       aMetrics,
-                                    nscoord                    aAvailWidth, 
-                                    nsSize&                    aDesiredSize,
-                                    nsMargin&                  aMargin,
-                                    nsReflowStatus&            aStatus)
+nsTableOuterFrame::OuterBeginReflowChild(nsPresContext*           aPresContext,
+                                         nsIFrame*                aChildFrame,
+                                         const nsHTMLReflowState& aOuterRS,
+                                         void*                    aChildRSSpace,
+                                         nscoord                  aAvailWidth)
 { 
-  aMargin = nsMargin(0,0,0,0);
-
   // work around pixel rounding errors, round down to ensure we don't exceed the avail height in
   nscoord availHeight = aOuterRS.availableHeight;
   if (NS_UNCONSTRAINEDSIZE != availHeight) {
@@ -1141,20 +1135,24 @@ nsTableOuterFrame::OuterReflowChild(nsPr
         ((NS_SIDE_TOP == captionSide) && (mInnerTableFrame == aChildFrame))) {
       childRS.mFlags.mIsTopOfPage = PR_FALSE;
     }
-    if ((mCaptionFrame == aChildFrame) && (NS_SIDE_LEFT  != captionSide) 
-                                       && (NS_SIDE_RIGHT != captionSide)) {
-      aAvailWidth = aOuterRS.availableWidth;
-    }
   }
+}
+
+nsresult
+nsTableOuterFrame::OuterDoReflowChild(nsPresContext*             aPresContext,
+                                      nsIFrame*                  aChildFrame,
+                                      const nsHTMLReflowState&   aChildRS,
+                                      nsHTMLReflowMetrics&       aMetrics,
+                                      nsSize&                    aDesiredSize,
+                                      nsReflowStatus&            aStatus)
+{ 
 
   // use the current position as a best guess for placement
   nsPoint childPt = aChildFrame->GetPosition();
-  nsresult rv = ReflowChild(aChildFrame, aPresContext, aMetrics, childRS,
+  nsresult rv = ReflowChild(aChildFrame, aPresContext, aMetrics, aChildRS,
                             childPt.x, childPt.y, NS_FRAME_NO_MOVE_FRAME, aStatus);
   if (NS_FAILED(rv)) return rv;
   
-  aMargin = childRS.mComputedMargin;
-
   aDesiredSize.width  = aMetrics.width;
   aDesiredSize.height = aMetrics.height;
 
@@ -1223,13 +1221,16 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   #define LONGS_IN_HTMLRS \
     ((sizeof(nsHTMLReflowState) + sizeof(long) - 1) / sizeof(long))
   long captionRSSpace[LONGS_IN_HTMLRS];
+  nsHTMLReflowState *captionRS =
+    static_cast<nsHTMLReflowState*>((void*)captionRSSpace);
   if (reflowCaption) {
     nsReflowStatus capStatus; // don't let the caption cause incomplete
-    rv = OuterReflowChild(aPresContext, mCaptionFrame, aOuterRS,
-                          captionRSSpace, captionMet,
-                          aOuterRS.ComputedWidth(), captionSize,
-                          captionMargin, capStatus);
+    OuterBeginReflowChild(aPresContext, mCaptionFrame, aOuterRS,
+                          captionRSSpace, aOuterRS.ComputedWidth());
+    rv = OuterDoReflowChild(aPresContext, mCaptionFrame, *captionRS,
+                            captionMet, captionSize, capStatus);
     if (NS_FAILED(rv)) return rv;
+    captionMargin = captionRS->mComputedMargin;
   } else if (mCaptionFrame) {
     captionSize = mCaptionFrame->GetSize();
     GetMargin(aPresContext, aOuterRS, mCaptionFrame, aOuterRS.ComputedWidth(),
@@ -1251,11 +1252,15 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   nsSize innerSize;
   nsMargin innerMargin;
   long innerRSSpace[LONGS_IN_HTMLRS];
+  nsHTMLReflowState *innerRS =
+    static_cast<nsHTMLReflowState*>((void*) innerRSSpace);
   if (reflowInner) {
-    rv = OuterReflowChild(aPresContext, mInnerTableFrame, aOuterRS,
-                          innerRSSpace, innerMet, innerAvailWidth,
-                          innerSize, innerMargin, aStatus);
+    OuterBeginReflowChild(aPresContext, mInnerTableFrame, aOuterRS,
+                          innerRSSpace, innerAvailWidth);
+    rv = OuterDoReflowChild(aPresContext, mInnerTableFrame, *innerRS,
+                            innerMet, innerSize, aStatus);
     if (NS_FAILED(rv)) return rv;
+    innerMargin = innerRS->mComputedMargin;
   } else {
     innerSize = mInnerTableFrame->GetSize();
     GetMargin(aPresContext, aOuterRS, mInnerTableFrame,
@@ -1275,8 +1280,6 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
     GetCaptionOrigin(captionSide, containSize, innerSize, 
                      innerMargin, captionSize, captionMargin, captionOrigin);
     if (reflowCaption) {
-      nsHTMLReflowState *captionRS =
-        static_cast<nsHTMLReflowState*>((void*)captionRSSpace);
       FinishReflowChild(mCaptionFrame, aPresContext, captionRS, captionMet,
                         captionOrigin.x, captionOrigin.y, 0);
       captionRS->~nsHTMLReflowState();
@@ -1295,8 +1298,6 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   GetInnerOrigin(captionSide, containSize, captionSize, 
                  captionMargin, innerSize, innerMargin, innerOrigin);
   if (reflowInner) {
-    nsHTMLReflowState *innerRS =
-      static_cast<nsHTMLReflowState*>((void*) innerRSSpace);
     FinishReflowChild(mInnerTableFrame, aPresContext, innerRS, innerMet,
                       innerOrigin.x, innerOrigin.y, 0);
     innerRS->~nsHTMLReflowState();
diff --git a/layout/tables/nsTableOuterFrame.h b/layout/tables/nsTableOuterFrame.h
--- a/layout/tables/nsTableOuterFrame.h
+++ b/layout/tables/nsTableOuterFrame.h
@@ -234,7 +234,7 @@ protected:
                                nscoord&        aInnerWidth,
                                nscoord&        aCaptionWidth);
 
-  NS_IMETHOD GetCaptionOrigin(PRUint32         aCaptionSide,
+  nsresult   GetCaptionOrigin(PRUint32         aCaptionSide,
                               const nsSize&    aContainBlockSize,
                               const nsSize&    aInnerSize, 
                               const nsMargin&  aInnerMargin,
@@ -242,7 +242,7 @@ protected:
                               nsMargin&        aCaptionMargin,
                               nsPoint&         aOrigin);
 
-  NS_IMETHOD GetInnerOrigin(PRUint32         aCaptionSide,
+  nsresult   GetInnerOrigin(PRUint32         aCaptionSide,
                             const nsSize&    aContainBlockSize,
                             const nsSize&    aCaptionSize, 
                             const nsMargin&  aCaptionMargin,
@@ -251,15 +251,18 @@ protected:
                             nsPoint&         aOrigin);
   
   // reflow the child (caption or innertable frame)
-  NS_IMETHOD OuterReflowChild(nsPresContext*            aPresContext,
-                              nsIFrame*                 aChildFrame,
-                              const nsHTMLReflowState&  aOuterRS,
-                              void*                     aChildRSSpace,
-                              nsHTMLReflowMetrics&      aMetrics,
-                              nscoord                   aAvailWidth,
-                              nsSize&                   aDesiredSize,
-                              nsMargin&                 aMargin,
-                              nsReflowStatus&           aStatus);
+  void OuterBeginReflowChild(nsPresContext*           aPresContext,
+                             nsIFrame*                aChildFrame,
+                             const nsHTMLReflowState& aOuterRS,
+                             void*                    aChildRSSpace,
+                             nscoord                  aAvailWidth);
+
+  nsresult OuterDoReflowChild(nsPresContext*           aPresContext,
+                              nsIFrame*                aChildFrame,
+                              const nsHTMLReflowState& aChildRS,
+                              nsHTMLReflowMetrics&     aMetrics,
+                              nsSize&                  aDesiredSize,
+                              nsReflowStatus&          aStatus);
 
   // Set the reflow metrics
   void UpdateReflowMetrics(PRUint8              aCaptionSide,

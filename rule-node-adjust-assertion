From: L. David Baron <dbaron@dbaron.org>

Bug N, part 3:  Allow rule nodes to cache data owned by an ancestor rule node:  adjust assertion.

diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -1899,17 +1899,18 @@ nsRuleNode::WalkRuleTree(const nsStyleSt
     // See if this rule node has cached the fact that the remaining
     // nodes along this path specify no data whatsoever.
     if (ruleNode->mNoneBits & bit)
       break;
 
     // If the dependent bit is set on a rule node for this struct, that
     // means its rule won't have any information to add, so skip it.
     while (ruleNode->mDependentBits & bit) {
-      NS_ASSERTION(ruleNode->mStyleData.GetStyleData(aSID) == nullptr,
+      NS_ASSERTION(ruleNode->mStyleData.GetStyleData(aSID) == nullptr ||
+                   IsUsedDirectly(),
                    "dependent bit with cached data makes no sense");
       // Climb up to the next rule in the tree (a less specific rule).
       rootNode = ruleNode;
       ruleNode = ruleNode->mParent;
       NS_ASSERTION(!(ruleNode->mNoneBits & bit), "can't have both bits set");
     }
 
     // Check for cached data after the inner loop above -- otherwise

From: L. David Baron <dbaron@dbaron.org>

Bug 1115812 patch 10 - Move the after-part of the rebuild to RestyleManager::EndProcessingRestyles.

The previous patch ensures that we'll always get to EndProcessingRestyles in this case.

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -1562,29 +1562,16 @@ RestyleManager::ProcessPendingRestyles()
     // because we never need to reframe the root frame.
     ComputeAndProcessStyleChange(mPresContext->PresShell()->GetRootFrame(),
                                  nsChangeHint(0), mPendingRestyles,
                                  eRestyle_ForceDescendants);
   }
 
   mPendingRestyles.ProcessRestyles();
 
-  if (mInRebuildAllStyleData) {
-    // We might not have gotten to the FlushOverflowChangedTracker call
-    // in the ProcessRestyles() call above.
-    FlushOverflowChangedTracker();
-
-    // Tell the style set it's safe to destroy the old rule tree.  We
-    // must do this after the ProcessRestyledFrames call in case the
-    // change list has frame reconstructs in it (since frames to be
-    // reconstructed will still have their old style context pointers
-    // until they are destroyed).
-    mPresContext->StyleSet()->EndReconstruct();
-  }
-
   mPostAnimationRestyles = false;
   mSkipAnimationRules = false;
 
 #ifdef DEBUG
   uint32_t oldPendingRestyleCount = mPendingRestyles.Count();
 #endif
 
   // ...and then process animation restyles.  This needs to happen
@@ -1630,16 +1617,25 @@ void
 RestyleManager::EndProcessingRestyles()
 {
   FlushOverflowChangedTracker();
 
   // Set mInStyleRefresh to false now, since the EndUpdate call might
   // add more restyles.
   mInStyleRefresh = false;
 
+  if (mInRebuildAllStyleData) {
+    // Tell the style set it's safe to destroy the old rule tree.  We
+    // must do this after the ProcessRestyledFrames call in case the
+    // change list has frame reconstructs in it (since frames to be
+    // reconstructed will still have their old style context pointers
+    // until they are destroyed).
+    mPresContext->StyleSet()->EndReconstruct();
+  }
+
   mPresContext->FrameConstructor()->EndUpdate();
 
 #ifdef DEBUG
   mPresContext->PresShell()->VerifyStyleTree();
 #endif
 }
 
 void

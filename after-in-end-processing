From: L. David Baron <dbaron@dbaron.org>

Bug 1115812 patch 11 - Move the after-part of the rebuild to RestyleManager::EndProcessingRestyles.

The previous patch ensures that we'll always get to EndProcessingRestyles in this case.

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -1549,27 +1549,16 @@ RestyleManager::DoRebuildAllStyleData(Re
   // Note that we can ignore the return value of ComputeStyleChangeFor
   // because we never need to reframe the root frame
   // Note: The restyle tracker we pass in here doesn't matter.
   ComputeAndProcessStyleChange(mPresContext->PresShell()->GetRootFrame(),
                                nsChangeHint(0), aRestyleTracker,
                                eRestyle_ForceDescendants);
 
   EndProcessingRestyles();
-
-  if (mInRebuildAllStyleData) {
-    // Tell the style set it's safe to destroy the old rule tree.  We
-    // must do this after the ProcessRestyledFrames call in case the
-    // change list has frame reconstructs in it (since frames to be
-    // reconstructed will still have their old style context pointers
-    // until they are destroyed).
-    mPresContext->StyleSet()->EndReconstruct();
-
-    mInRebuildAllStyleData = false;
-  }
 }
 
 void
 RestyleManager::ProcessPendingRestyles()
 {
   NS_PRECONDITION(mPresContext->Document(), "No document?  Pshaw!");
   NS_PRECONDITION(!nsContentUtils::IsSafeToRunScript(),
                   "Missing a script blocker!");
@@ -1661,16 +1650,27 @@ void
 RestyleManager::EndProcessingRestyles()
 {
   FlushOverflowChangedTracker();
 
   // Set mInStyleRefresh to false now, since the EndUpdate call might
   // add more restyles.
   mInStyleRefresh = false;
 
+  if (mInRebuildAllStyleData) {
+    // Tell the style set it's safe to destroy the old rule tree.  We
+    // must do this after the ProcessRestyledFrames call in case the
+    // change list has frame reconstructs in it (since frames to be
+    // reconstructed will still have their old style context pointers
+    // until they are destroyed).
+    mPresContext->StyleSet()->EndReconstruct();
+
+    mInRebuildAllStyleData = false;
+  }
+
   mPresContext->FrameConstructor()->EndUpdate();
 
 #ifdef DEBUG
   mPresContext->PresShell()->VerifyStyleTree();
 #endif
 }
 
 void

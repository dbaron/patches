From: L. David Baron <dbaron@dbaron.org>

Followup to bug 648603:  increase the number of connections that our test HTTP server will serve to the larger of the server limit or the proxy limit.

This should fix intermittent oranges in bug 536603 and bug 576543 that
were reintroduced this morning.

This is needed because the mochitest HTTP server is accessed as a proxy;
we set network.proxy.autoconfig_url to a data: URL.

diff --git a/netwerk/test/httpserver/httpd.js b/netwerk/test/httpserver/httpd.js
--- a/netwerk/test/httpserver/httpd.js
+++ b/netwerk/test/httpserver/httpd.js
@@ -508,22 +508,24 @@ nsHttpServer.prototype =
       throw Cr.NS_ERROR_ALREADY_INITIALIZED;
 
     this._port = port;
     this._doQuit = this._socketClosed = false;
 
     this._host = host;
 
     // The listen queue needs to be long enough to handle
-    // network.http.max-persistent-connections-per-server concurrent connections,
-    // plus a safety margin in case some other process is talking to
-    // the server as well.
+    // network.http.max-persistent-connections-per-server or
+    // network.http.max-persistent-connections-per-proxy concurrent
+    // connections, plus a safety margin in case some other process is
+    // talking to the server as well.
     var prefs = getRootPrefBranch();
-    var maxConnections =
-      prefs.getIntPref("network.http.max-persistent-connections-per-server") + 5;
+    var maxConnections = 5 + Math.max(
+      prefs.getIntPref("network.http.max-persistent-connections-per-server"),
+      prefs.getIntPref("network.http.max-persistent-connections-per-proxy"));
 
     try
     {
       var loopback = true;
       if (this._host != "127.0.0.1" && this._host != "localhost") {
         var loopback = false;
       }
 

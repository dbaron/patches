Prevent wrapper tables from being destroyed during their own enumeration-on-destruction.  b=421217

diff --git a/modules/plugin/base/src/nsJSNPRuntime.cpp b/modules/plugin/base/src/nsJSNPRuntime.cpp
--- a/modules/plugin/base/src/nsJSNPRuntime.cpp
+++ b/modules/plugin/base/src/nsJSNPRuntime.cpp
@@ -247,9 +247,9 @@ OnWrapperDestroyed()
   }
 }
 
-struct AutoCXPusher
+struct WrapperTableHolder
 {
-  AutoCXPusher(JSContext *cx)
+  WrapperTableHolder()
   {
     // Precondition explaining why we don't need to worry about errors
     // in OnWrapperCreated.
@@ -260,7 +260,18 @@ struct AutoCXPusher
     // last OnWrapperDestroyed doesn't happen while we're on the stack
     // and null out sContextStack.
     OnWrapperCreated();
+  }
 
+  ~WrapperTableHolder()
+  {
+    OnWrapperDestroyed();
+  }
+};
+
+struct AutoCXPusher : public WrapperTableHolder
+{
+  AutoCXPusher(JSContext *cx)
+  {
     sContextStack->Push(cx);
   }
 
@@ -282,8 +293,6 @@ struct AutoCXPusher
         scx->ScriptEvaluated(PR_TRUE);
       }
     }
-
-    OnWrapperDestroyed();
   }
 };
 
@@ -1810,6 +1819,10 @@ nsJSNPRuntime::OnPluginDestroy(NPP npp)
   JSAutoRequest ar(cx);
 
   if (sNPObjWrappers.ops) {
+    // We don't want the tables to go away while we're doing this
+    // enumeration.
+    WrapperTableHolder holder;
+
     NppAndCx nppcx = { npp, cx };
     PL_DHashTableEnumerate(&sNPObjWrappers,
                            NPObjWrapperPluginDestroyedCallback, &nppcx);

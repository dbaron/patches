From: L. David Baron <dbaron@dbaron.org>

Replace force-fit with setting mIsTopOfPage correctly.  (Bug 563584)

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -5528,22 +5528,16 @@ nsBlockFrame::AdjustFloatAvailableSpace(
     availWidth = aState.mContentArea.width;
   }
   else {
     // This quirk matches the one in nsBlockReflowState::FlowAndPlaceFloat
     // give tables only the available space
     // if they can shrink we may not be constrained to place
     // them in the next line
     availWidth = aFloatAvailableSpace.width;
-    // round down to twips per pixel so that we fit
-    // needed when prev. float has procentage width
-    // (maybe is a table flaw that makes table chose to round up
-    // but I don't want to change that, too risky)
-    nscoord twp = nsPresContext::CSSPixelsToAppUnits(1);
-    availWidth -=  availWidth % twp;
   }
 
   // aState.mY is relative to the border-top, make it relative to the content-top
   nscoord contentYOffset = aState.mY - aState.BorderPadding().top;
   nscoord availHeight = NS_UNCONSTRAINEDSIZE == aState.mContentArea.height
                         ? NS_UNCONSTRAINEDSIZE
                         : NS_MAX(0, aState.mContentArea.height - contentYOffset);
 
@@ -5580,16 +5574,17 @@ nsBlockFrame::ComputeFloatWidth(nsBlockR
     floatRS.mComputedMargin.LeftRight();
 }
 
 nsresult
 nsBlockFrame::ReflowFloat(nsBlockReflowState& aState,
                           const nsRect&       aAdjustedAvailableSpace,
                           nsIFrame*           aFloat,
                           nsMargin&           aFloatMargin,
+                          PRBool              aFloatPushedDown,
                           nsReflowStatus&     aReflowStatus)
 {
   NS_PRECONDITION(aFloat->GetStateBits() & NS_FRAME_OUT_OF_FLOW,
                   "aFloat must be an out-of-flow frame");
   // Reflow the float.
   aReflowStatus = NS_FRAME_COMPLETE;
 
 #ifdef NOISY_FLOAT
@@ -5599,17 +5594,31 @@ nsBlockFrame::ReflowFloat(nsBlockReflowS
           aFloatAvailableSpace.width, aFloatAvailableSpace.height
   );
 #endif
 
   nsHTMLReflowState floatRS(aState.mPresContext, aState.mReflowState, aFloat,
                             nsSize(aAdjustedAvailableSpace.width,
                                    aAdjustedAvailableSpace.height));
 
-  // Setup a block reflow state to reflow the float.
+  // Normally the mIsTopOfPage state is copied from the parent reflow
+  // state.  However, when reflowing a float, if we've placed other
+  // floats that force this float *down* or *narrower*, we should unset
+  // the mIsTopOfPage state.
+  // FIXME: This is somewhat redundant with the |isAdjacentWithTop|
+  // variable below, which has the exact same effect.  Perhaps it should
+  // be merged into that, except that the test for narrowing here is not
+  // about adjacency with the top, so it seems misleading.
+  if (floatRS.mFlags.mIsTopOfPage &&
+      (aFloatPushedDown ||
+       aAdjustedAvailableSpace.width != aState.mContentArea.width)) {
+    floatRS.mFlags.mIsTopOfPage = PR_FALSE;
+  }
+
+  // Setup a block reflow context to reflow the float.
   nsBlockReflowContext brc(aState.mPresContext, aState.mReflowState);
 
   // Reflow the float
   PRBool isAdjacentWithTop = aState.IsAdjacentWithTop();
 
   nsIFrame* clearanceFrame = nsnull;
   nsresult rv;
   do {
diff --git a/layout/generic/nsBlockFrame.h b/layout/generic/nsBlockFrame.h
--- a/layout/generic/nsBlockFrame.h
+++ b/layout/generic/nsBlockFrame.h
@@ -583,16 +583,20 @@ protected:
   // An incomplete aReflowStatus indicates the float should be split
   // but only if the available height is constrained.
   // aAdjustedAvailableSpace is the result of calling
   // nsBlockFrame::AdjustFloatAvailableSpace.
   nsresult ReflowFloat(nsBlockReflowState& aState,
                        const nsRect&       aAdjustedAvailableSpace,
                        nsIFrame*           aFloat,
                        nsMargin&           aFloatMargin,
+                       // Whether the float's position
+                       // (aAdjustedAvailableSpace) has been pushed down
+                       // due to the presence of other floats.
+                       PRBool              aFloatPushedDown,
                        nsReflowStatus&     aReflowStatus);
 
   //----------------------------------------
   // Methods for pushing/pulling lines/frames
 
   /**
    * Create a next-in-flow, if necessary, for aFrame. If a new frame is
    * created, place it in aLine if aLine is not null.
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -817,18 +817,19 @@ nsBlockReflowState::FlowAndPlaceFloat(ns
     // means the margin edge of the float can't be higher than the
     // content edge of the block that contains it.)
     floatY = 0;
   }
 
   // Reflow the float after computing its vertical position so it knows
   // where to break.
   nsMargin floatMargin; // computed margin
+  PRBool pushedDown = mY != saveY;
   mBlock->ReflowFloat(*this, adjustedAvailableSpace, aFloat,
-                      floatMargin, aReflowStatus);
+                      floatMargin, pushedDown, aReflowStatus);
   if (aFloat->GetPrevInFlow())
     floatMargin.top = 0;
   if (NS_FRAME_IS_NOT_COMPLETE(aReflowStatus))
     floatMargin.bottom = 0;
 
   // Calculate the actual origin of the float frame's border rect
   // relative to the parent block; floatX/Y must be converted from space-manager
   // coordinates to parent coordinates, and the margin must be added in
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -410,19 +410,21 @@ typedef PRUint32 nsReflowStatus;
 // Take a completion status and add to it the desire to have a
 // line-break after. For this macro we do need the completion status
 // because the user of the status will need to know whether to
 // continue the frame or not.
 #define NS_INLINE_LINE_BREAK_AFTER(_completionStatus)                   \
   ((_completionStatus) | NS_INLINE_BREAK | NS_INLINE_BREAK_AFTER |      \
    NS_INLINE_MAKE_BREAK_TYPE(NS_STYLE_CLEAR_LINE))
 
-// The frame (not counting a continuation) did not fit in the available height and 
-// wasn't at the top of a page. If it was at the top of a page, then it is not 
-// possible to reflow it again with more height, so we don't set it in that case.
+// A frame is "truncated" if the part of the frame before the first
+// possible break point was unable to fit in the available vertical
+// space.  Therefore, the entire frame should be moved to the next page.
+// A frame that begins at the top of the page must never be "truncated".
+// Doing so would likely cause an infinite loop.
 #define NS_FRAME_TRUNCATED  0x0010
 #define NS_FRAME_IS_TRUNCATED(status) \
   (0 != ((status) & NS_FRAME_TRUNCATED))
 #define NS_FRAME_SET_TRUNCATION(status, aReflowState, aMetrics) \
   aReflowState.SetTruncated(aMetrics, &status);
 
 // Merge the incompleteness, truncation and NS_FRAME_REFLOW_NEXTINFLOW
 // status from aSecondary into aPrimary.
diff --git a/layout/reftests/bugs/563584-8a-ref.html b/layout/reftests/bugs/563584-8a-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8a-ref.html
@@ -0,0 +1,6 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="height: 2in; width: 1in; background: aqua"></div>
+<div style="height: 1in; width: 1in; background: yellow; page-break-before: always"></div>
diff --git a/layout/reftests/bugs/563584-8a.html b/layout/reftests/bugs/563584-8a.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8a.html
@@ -0,0 +1,8 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="float: left">
+  <div><div style="display:inline-block; vertical-align: top; height: 3in; width: 1in; background: aqua"></div></div>
+  <div><div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: yellow"></div></div>
+</div>
diff --git a/layout/reftests/bugs/563584-8b-ref.html b/layout/reftests/bugs/563584-8b-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8b-ref.html
@@ -0,0 +1,13 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div>
+  <div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: fuchsia"></div
+  ><div style="display:inline-block; vertical-align: top; height: 2in; width: 1in; background: aqua"></div>
+</div>
+<div style="page-break-before:always">
+  <!-- FIXME: uncomment this when bug 511551 is fixed
+  <div style="display:inline-block; vertical-align: top; height: 1in; width: 1in"></div
+  >--><div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: yellow"></div>
+</div>
diff --git a/layout/reftests/bugs/563584-8b.html b/layout/reftests/bugs/563584-8b.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8b.html
@@ -0,0 +1,9 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="float: left; height: 1in; width: 1in; background: fuchsia"></div>
+<div style="float: left">
+  <div><div style="display:inline-block; vertical-align: top; height: 3in; width: 1in; background: aqua"></div></div>
+  <div><div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: yellow"></div></div>
+</div>
diff --git a/layout/reftests/bugs/563584-8c-ref.html b/layout/reftests/bugs/563584-8c-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8c-ref.html
@@ -0,0 +1,7 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="height: 2in"></div>
+<div style="height: 2in; width: 1in; background: aqua; page-break-before: always"></div>
+<div style="height: 1in; width: 1in; background: yellow; page-break-before: always"></div>
diff --git a/layout/reftests/bugs/563584-8c.html b/layout/reftests/bugs/563584-8c.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8c.html
@@ -0,0 +1,9 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="height: 1in"></div>
+<div style="float: left">
+  <div><div style="display:inline-block; vertical-align: top; height: 3in; width: 1in; background: aqua"></div></div>
+  <div><div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: yellow"></div></div>
+</div>
diff --git a/layout/reftests/bugs/563584-8d-ref.html b/layout/reftests/bugs/563584-8d-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8d-ref.html
@@ -0,0 +1,8 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="height: 1in"></div>
+<div style="height: 1in; width: 1in; background: fuchsia"></div>
+<div style="height: 2in; width: 1in; background: aqua; page-break-before: always"></div>
+<div style="height: 1in; width: 1in; background: yellow; page-break-before: always"></div>
diff --git a/layout/reftests/bugs/563584-8d.html b/layout/reftests/bugs/563584-8d.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/563584-8d.html
@@ -0,0 +1,10 @@
+<!DOCTYPE HTML>
+<html class="reftest-print">
+<title>Test for setting and handling of mIsTopOfPage on floats</title>
+<body style="margin: 0">
+<div style="height: 1in"></div>
+<div style="float: left; height: 1in; width: 1in; background: fuchsia"></div>
+<div style="float: left">
+  <div><div style="display:inline-block; vertical-align: top; height: 3in; width: 1in; background: aqua"></div></div>
+  <div><div style="display:inline-block; vertical-align: top; height: 1in; width: 1in; background: yellow"></div></div>
+</div>
diff --git a/layout/reftests/bugs/reftest.list b/layout/reftests/bugs/reftest.list
--- a/layout/reftests/bugs/reftest.list
+++ b/layout/reftests/bugs/reftest.list
@@ -1441,16 +1441,23 @@ random-if(!haveTestPlugin) == 546071-1.h
 == 561981-6.html 561981-6-ref.html
 == 561981-7.html 561981-7-ref.html
 == 561981-8.html 561981-8-ref.html
 == 562835-1.html 562835-ref.html
 == 562835-2.html 562835-ref.html
 == 563584-6-columns.html 563584-6-columns-ref.html
 == 563584-6-printing.html 563584-6-printing-ref.html
 == 563584-7.html 563584-7-ref.html
+# FIXME: It would be nice to have variants of these -8 tests for the
+# table narrowing quirk causing a change to mIsTopOfPage (though I'm not
+# entirely sure our behavior is the right one, either).
+== 563584-8a.html 563584-8a-ref.html
+== 563584-8b.html 563584-8b-ref.html
+== 563584-8c.html 563584-8c-ref.html
+== 563584-8d.html 563584-8d-ref.html
 == 564054-1.html 564054-1-ref.html
 == 564991-1.html 564991-1-ref.html
 == 565819-1.html 565819-ref.html
 == 565819-2.html 565819-ref.html
 == 569006-1.html 569006-1-ref.html
 == 571281-1a.html 571281-1-ref.html
 == 571281-1b.html 571281-1-ref.html
 == 571281-1c.html 571281-1-ref.html

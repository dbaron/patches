From: L. David Baron <dbaron@dbaron.org>

Bug 1089417 patch 11 - Flush pending media feature value changes where needed.

diff --git a/dom/base/nsDocument.cpp b/dom/base/nsDocument.cpp
--- a/dom/base/nsDocument.cpp
+++ b/dom/base/nsDocument.cpp
@@ -12468,18 +12468,26 @@ nsIDocument::FlushUserFontSet()
 
   if (!mFontFaceSetDirty) {
     return;
   }
 
   mFontFaceSetDirty = false;
 
   if (gfxPlatform::GetPlatform()->DownloadableFontsEnabled()) {
+    nsIPresShell* shell = GetShell();
+
+    // We have to flush pending media feature values changes before doing
+    // something that might rebuild CSS rule processors.
+    nsPresContext* presContext = shell->GetPresContext();
+    if (presContext) {
+      presContext->FlushPendingMediaFeatureValuesChanged();
+    }
+
     nsTArray<nsFontFaceRuleContainer> rules;
-    nsIPresShell* shell = GetShell();
     if (shell && !shell->StyleSet()->AppendFontFaceRules(rules)) {
       // FIXME: What if it had rules before?
       return;
     }
 
 
     if (!mFontFaceSet && !rules.IsEmpty()) {
       nsCOMPtr<nsPIDOMWindowInner> window = do_QueryInterface(GetScopeObject());
diff --git a/layout/base/PresShell.cpp b/layout/base/PresShell.cpp
--- a/layout/base/PresShell.cpp
+++ b/layout/base/PresShell.cpp
@@ -4402,16 +4402,20 @@ void
 PresShell::DocumentStatesChanged(nsIDocument* aDocument, EventStates aStateMask)
 {
   NS_PRECONDITION(!mIsDocumentGone, "Unexpected DocumentStatesChanged");
   NS_PRECONDITION(aDocument == mDocument, "Unexpected aDocument");
   MOZ_ASSERT(!aStateMask.IsEmpty());
 
   if (mDidInitialize) {
     mStyleSet->InvalidateStyleForDocumentStateChanges(aStateMask);
+
+    // We have to flush pending media feature values changes before doing
+    // something that might rebuild CSS rule processors.
+    mPresContext->FlushPendingMediaFeatureValuesChanged();
   }
 
   if (aStateMask.HasState(NS_DOCUMENT_STATE_WINDOW_INACTIVE)) {
     if (nsIFrame* root = mFrameConstructor->GetRootFrame()) {
       root->SchedulePaint();
     }
   }
 }
diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -495,16 +495,21 @@ RestyleManager::ContentRemoved(nsIConten
 void
 RestyleManager::ContentStateChangedInternal(Element* aElement,
                                             EventStates aStateMask,
                                             nsChangeHint* aOutChangeHint)
 {
   MOZ_ASSERT(!mInStyleRefresh);
   MOZ_ASSERT(aOutChangeHint);
 
+  // We have to flush pending media feature values changes before doing
+  // something that might rebuild CSS rule processors.
+  // FIXME:  similar for attribute changes?
+  mPresContext->FlushPendingMediaFeatureValuesChanged();
+
   *aOutChangeHint = nsChangeHint(0);
   // Any change to a content state that affects which frames we construct
   // must lead to a frame reconstruct here if we already have a frame.
   // Note that we never decide through non-CSS means to not create frames
   // based on content states, so if we already don't have a frame we don't
   // need to force a reframe -- if it's needed, the HasStateDependentStyle
   // call will handle things.
   nsIFrame* primaryFrame = aElement->GetPrimaryFrame();

From: L. David Baron <dbaron@dbaron.org>

Bug 369581 - Make non-box frames with 'height:auto' respect min-height from overridable nsITheme::GetMinimumWidgetSize.

diff --git a/layout/generic/ReflowInput.cpp b/layout/generic/ReflowInput.cpp
--- a/layout/generic/ReflowInput.cpp
+++ b/layout/generic/ReflowInput.cpp
@@ -3083,16 +3083,40 @@ ReflowInput::ComputeMinMaxValues(const L
       ComputedMaxBSize() = NS_UNCONSTRAINEDSIZE;
     } else {
       ComputedMaxBSize() = ComputeBSizeValue(aCBSize.BSize(wm),
                                              mStylePosition->mBoxSizing,
                                              maxBSize);
     }
   }
 
+  // The use of nsITheme::GetMinimumWidgetSize in nsFrame::ComputeSize
+  // isn't sufficient in the case of heights that can grow, when the
+  // style height is 'auto'.
+  const nsStyleDisplay *disp = mFrame->StyleDisplay();
+  if (mFrame->IsThemed(disp)) {
+    LayoutDeviceIntSize size;
+    bool canOverride = true;
+    nsPresContext *presContext = mFrame->PresContext();
+    presContext->GetTheme()->
+      GetMinimumWidgetSize(presContext, mFrame, disp->mAppearance,
+                           &size, &canOverride);
+
+    if (canOverride) {
+      // The only case where we need to bother.
+
+      // GMWS() returns border-box size in device pixels; we need
+      // content box size in app units
+      nscoord height = presContext->DevPixelsToAppUnits(size.height) -
+                       mComputedBorderPadding.TopBottom();
+      if (height > mComputedMinHeight)
+        mComputedMinHeight = height;
+    }
+  }
+
   // If the computed value of 'min-height' is greater than the value of
   // 'max-height', 'max-height' is set to the value of 'min-height'
   if (ComputedMinBSize() > ComputedMaxBSize()) {
     ComputedMaxBSize() = ComputedMinBSize();
   }
 }
 
 bool

From: L. David Baron <dbaron@dbaron.org>

Bug 1352056 - Add nsIFrame::Style*WithOptionalParam helpers.

MozReview-Commit-ID: DFGBeKtg7hI

diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -760,21 +760,32 @@ public:
    * Define typesafe getter functions for each style struct by
    * preprocessing the list of style structs.  These functions are the
    * preferred way to get style data.  The macro creates functions like:
    *   const nsStyleBorder* StyleBorder();
    *   const nsStyleColor* StyleColor();
    *
    * Callers outside of libxul should use nsIDOMWindow::GetComputedStyle()
    * instead of these accessors.
+   *
+   * Callers can use Style*WithOptionalParam if they're in a function that
+   * has an optional parameter to pass the style struct.
    */
   #define STYLE_STRUCT(name_, checkdata_cb_)                                  \
     const nsStyle##name_ * Style##name_ () const {                            \
       NS_ASSERTION(mStyleContext, "No style context found!");                 \
       return mStyleContext->Style##name_ ();                                  \
+    }                                                                         \
+    const nsStyle##name_ * Style##name_##WithOptionalParam(                   \
+                             const nsStyle##name_ * aStyleStruct) const {     \
+      if (aStyleStruct) {                                                     \
+        MOZ_ASSERT(aStyleStruct == Style##name_());                           \
+        return aStyleStruct;                                                  \
+      }                                                                       \
+      return Style##name_();                                                  \
     }
   #include "nsStyleStructList.h"
   #undef STYLE_STRUCT
 
   /** Also forward GetVisitedDependentColor to the style context */
   template<typename T, typename S>
   nscolor GetVisitedDependentColor(T S::* aField)
     { return mStyleContext->GetVisitedDependentColor(aField); }

From: L. David Baron <dbaron@dbaron.org>

Don't distribute percentage width from column-spanning cells to columns that have no cells originating.  (Bug 810586)

This makes the distribution of pref/min width and the distribution
of percentage width from column-spanning cells more consistent with
each other.

diff --git a/layout/tables/BasicTableLayoutStrategy.cpp b/layout/tables/BasicTableLayoutStrategy.cpp
--- a/layout/tables/BasicTableLayoutStrategy.cpp
+++ b/layout/tables/BasicTableLayoutStrategy.cpp
@@ -556,27 +556,30 @@ BasicTableLayoutStrategy::DistributePctW
                                                       int32_t aColCount)
 {
     // First loop to determine:
     int32_t nonPctColCount = 0; // number of spanned columns without % width
     nscoord nonPctTotalPrefWidth = 0; // total pref width of those columns
     // and to reduce aSpanPrefPct by columns that already have % width
 
     int32_t scol, scol_end;
+    nsTableCellMap *cellMap = mTableFrame->GetCellMap();
     for (scol = aFirstCol, scol_end = aFirstCol + aColCount;
          scol < scol_end; ++scol) {
         nsTableColFrame *scolFrame = mTableFrame->GetColFrame(scol);
         if (!scolFrame) {
             NS_ERROR("column frames out of sync with cell map");
             continue;
         }
         float scolPct = scolFrame->GetPrefPercent();
         if (scolPct == 0.0f) {
             nonPctTotalPrefWidth += scolFrame->GetPrefCoord();
-            ++nonPctColCount;
+            if (cellMap->GetNumCellsOriginatingInCol(scol) > 0) {
+                ++nonPctColCount;
+            }
         } else {
             aSpanPrefPct -= scolPct;
         }
     }
 
     if (aSpanPrefPct <= 0.0f || nonPctColCount == 0) {
         // There's no %-width on the colspan left over to distribute,
         // or there are no columns to which we could distribute %-width
@@ -603,28 +606,32 @@ BasicTableLayoutStrategy::DistributePctW
 
             float allocatedPct; // % width to be given to this column
             if (spanHasNonPctPref) {
                 // Group so we're multiplying by 1.0f when we need
                 // to use up aSpanPrefPct.
                 allocatedPct = aSpanPrefPct *
                     (float(scolFrame->GetPrefCoord()) /
                      float(nonPctTotalPrefWidth));
-            } else {
+            } else if (cellMap->GetNumCellsOriginatingInCol(scol) > 0) {
                 // distribute equally when all pref widths are 0
                 allocatedPct = aSpanPrefPct / float(nonPctColCount);
+            } else {
+                allocatedPct = 0.0f;
             }
             // Allocate the percent
             scolFrame->AddSpanPrefPercent(allocatedPct);
-            
+
             // To avoid accumulating rounding error from division,
             // subtract this column's values from the totals.
             aSpanPrefPct -= allocatedPct;
             nonPctTotalPrefWidth -= scolFrame->GetPrefCoord();
-            --nonPctColCount;
+            if (cellMap->GetNumCellsOriginatingInCol(scol) > 0) {
+                --nonPctColCount;
+            }
 
             if (!aSpanPrefPct) {
                 // No more span-percent-width to distribute --> we're done.
                 NS_ASSERTION(spanHasNonPctPref ? 
                              nonPctTotalPrefWidth == 0 :
                              nonPctColCount == 0,
                              "No more pct width to distribute, but there are "
                              "still cols that need some.");

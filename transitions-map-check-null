From: L. David Baron <dbaron@dbaron.org>

Make AnimValuesStyleRule::MapRuleInfoInto check that property hasn't been filled in yet, so that it cascades correctly and interacts correctly with nsStyleSet::ResolveStyleByAddingRules.  (FIXME: add test for the SMIL interacting with transitions case)

diff --git a/layout/style/nsTransitionManager.cpp b/layout/style/nsTransitionManager.cpp
--- a/layout/style/nsTransitionManager.cpp
+++ b/layout/style/nsTransitionManager.cpp
@@ -265,22 +265,25 @@ AnimValuesStyleRule::MapRuleInfoInto(nsR
   }
 
   for (PRUint32 i = 0, i_end = mPropertyValuePairs.Length(); i < i_end; ++i) {
     PropertyValuePair &cv = mPropertyValuePairs[i];
     if (aRuleData->mSIDs & nsCachedStyleData::GetBitForSID(
                              nsCSSProps::kSIDTable[cv.mProperty]))
     {
       nsCSSValue *prop = aRuleData->ValueFor(cv.mProperty);
+      if (prop->GetUnit() == eCSSUnit_Null) {
 #ifdef DEBUG
-      PRBool ok =
+        PRBool ok =
 #endif
-        nsStyleAnimation::UncomputeValue(cv.mProperty, aRuleData->mPresContext,
-                                         cv.mValue, *prop);
-      NS_ABORT_IF_FALSE(ok, "could not store computed value");
+          nsStyleAnimation::UncomputeValue(cv.mProperty,
+                                           aRuleData->mPresContext,
+                                           cv.mValue, *prop);
+        NS_ABORT_IF_FALSE(ok, "could not store computed value");
+      }
     }
   }
 }
 
 #ifdef DEBUG
 /* virtual */ void
 AnimValuesStyleRule::List(FILE* out, PRInt32 aIndent) const
 {

From: L. David Baron <dbaron@dbaron.org>

Bug 1371157 - Use override keyword in windows nsLookAndFeel header.

MozReview-Commit-ID: 8bwmXmBFZB4

diff --git a/widget/windows/nsLookAndFeel.h b/widget/windows/nsLookAndFeel.h
--- a/widget/windows/nsLookAndFeel.h
+++ b/widget/windows/nsLookAndFeel.h
@@ -31,26 +31,26 @@
 #endif
 
 class nsLookAndFeel: public nsXPLookAndFeel {
   static OperatingSystemVersion GetOperatingSystemVersion();
 public:
   nsLookAndFeel();
   virtual ~nsLookAndFeel();
 
-  virtual nsresult NativeGetColor(ColorID aID, nscolor &aResult);
-  virtual nsresult GetIntImpl(IntID aID, int32_t &aResult);
-  virtual nsresult GetFloatImpl(FloatID aID, float &aResult);
-  virtual bool GetFontImpl(FontID aID, nsString& aFontName,
-                           gfxFontStyle& aFontStyle,
-                           float aDevPixPerCSSPixel);
-  virtual char16_t GetPasswordCharacterImpl();
+  nsresult NativeGetColor(ColorID aID, nscolor &aResult) override;
+  nsresult GetIntImpl(IntID aID, int32_t &aResult) override;
+  nsresult GetFloatImpl(FloatID aID, float &aResult) override;
+  bool GetFontImpl(FontID aID, nsString& aFontName,
+                   gfxFontStyle& aFontStyle,
+                   float aDevPixPerCSSPixel) override;
+  char16_t GetPasswordCharacterImpl() override;
 
-  virtual nsTArray<LookAndFeelInt> GetIntCacheImpl();
-  virtual void SetIntCacheImpl(const nsTArray<LookAndFeelInt>& aLookAndFeelIntCache);
+  nsTArray<LookAndFeelInt> GetIntCacheImpl() override;
+  void SetIntCacheImpl(const nsTArray<LookAndFeelInt>& aLookAndFeelIntCache) override;
 
 private:
   // Content process cached values that get shipped over from the browser
   // process.
   int32_t mUseAccessibilityTheme;
   int32_t mUseDefaultTheme; // is the current theme a known default?
   int32_t mNativeThemeId; // see LookAndFeel enum 'WindowsTheme'
 };

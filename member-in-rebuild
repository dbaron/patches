From: L. David Baron <dbaron@dbaron.org>

Bug 1115812 patch 7 - Convert local variable to member mInRebuildAllStyleData.

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -1510,17 +1510,17 @@ RestyleManager::RebuildAllStyleData(nsCh
 
 void
 RestyleManager::ProcessPendingRestyles()
 {
   NS_PRECONDITION(mPresContext->Document(), "No document?  Pshaw!");
   NS_PRECONDITION(!nsContentUtils::IsSafeToRunScript(),
                   "Missing a script blocker!");
 
-  bool rebuildAllStyleData = mDoRebuildAllStyleData;
+  mInRebuildAllStyleData = mDoRebuildAllStyleData;
   mDoRebuildAllStyleData = false;
 
   // First do any queued-up frame creation.  (We should really
   // merge this into the rest of the process, though; see bug 827239.)
   mPresContext->FrameConstructor()->CreateNeededFrames();
 
   // Process non-animation restyles...
   NS_ABORT_IF_FALSE(!mIsProcessingRestyles,
@@ -1530,29 +1530,29 @@ RestyleManager::ProcessPendingRestyles()
 #endif
 
   // Before we process any restyles, we need to ensure that style
   // resulting from any throttled animations (animations that we're
   // running entirely on the compositor thread) is up-to-date, so that
   // if any style changes we cause trigger transitions, we have the
   // correct old style for starting the transition.
   if (nsLayoutUtils::AreAsyncAnimationsEnabled() &&
-      (mPendingRestyles.Count() > 0 || rebuildAllStyleData)) {
+      (mPendingRestyles.Count() > 0 || mInRebuildAllStyleData)) {
     IncrementAnimationGeneration();
     UpdateOnlyAnimationStyles();
   }
 
   // Until we get rid of these phases in bug 960465, we need to skip
   // animation restyles during the non-animation phase, and post
   // animation restyles so that we restyle those elements again in the
   // animation phase.
   mSkipAnimationRules = true;
   mPostAnimationRestyles = true;
 
-  if (rebuildAllStyleData) {
+  if (mInRebuildAllStyleData) {
     // Tell the style set to get the old rule tree out of the way
     // so we can recalculate while maintaining rule tree immutability
     nsresult rv = mPresContext->StyleSet()->BeginReconstruct();
     if (NS_FAILED(rv)) {
       MOZ_CRASH("unable to rebuild style data");
     }
 
     // Recalculate all of the style contexts for the document, from the
@@ -1562,17 +1562,17 @@ RestyleManager::ProcessPendingRestyles()
     // because we never need to reframe the root frame.
     ComputeAndProcessStyleChange(mPresContext->PresShell()->GetRootFrame(),
                                  nsChangeHint(0), mPendingRestyles,
                                  eRestyle_ForceDescendants);
   }
 
   mPendingRestyles.ProcessRestyles();
 
-  if (rebuildAllStyleData) {
+  if (mInRebuildAllStyleData) {
     // We might not have gotten to the FlushOverflowChangedTracker call
     // in the ProcessRestyles() call above.
     FlushOverflowChangedTracker();
 
     // Tell the style set it's safe to destroy the old rule tree.  We
     // must do this after the ProcessRestyledFrames call in case the
     // change list has frame reconstructs in it (since frames to be
     // reconstructed will still have their old style context pointers
diff --git a/layout/base/RestyleManager.h b/layout/base/RestyleManager.h
--- a/layout/base/RestyleManager.h
+++ b/layout/base/RestyleManager.h
@@ -458,16 +458,17 @@ private:
   // false if it could not process the position change, and a reflow should
   // be performed instead.
   bool RecomputePosition(nsIFrame* aFrame);
 
 private:
   nsPresContext* mPresContext; // weak, disconnected in Disconnect
 
   bool mDoRebuildAllStyleData : 1;
+  bool mInRebuildAllStyleData : 1;
   // True if we're already waiting for a refresh notification
   bool mObservingRefreshDriver : 1;
   // True if we're in the middle of a nsRefreshDriver refresh
   bool mInStyleRefresh : 1;
   // Whether rule matching should skip styles associated with animation
   bool mSkipAnimationRules : 1;
   // Whether rule matching should post animation restyles when it skips
   // styles associated with animation.  Only true when

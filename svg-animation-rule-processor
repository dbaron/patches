From: L. David Baron <dbaron@dbaron.org>

Bug 1057231 patch 2 - Add a rule processor class for SVG Animation rules.

Yes, it's a little bit annoying to have to have another class, and
another object per document for this.  But it's one class and one object
per document, and I believe there will be substantial benefits to having
all rule processor levels be only-animation-related or
not-animation-related.

diff --git a/layout/style/SVGAnimationRuleProcessor.cpp b/layout/style/SVGAnimationRuleProcessor.cpp
new file mode 100644
--- /dev/null
+++ b/layout/style/SVGAnimationRuleProcessor.cpp
@@ -0,0 +1,94 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/* style rule processor for SVG Animation (SMIL Animation) rules */
+
+#include "SVGAnimationRuleProcessor.h"
+
+using namespace mozilla;
+
+SVGAnimationRuleProcessor::SVGAnimationRuleProcessor()
+{
+}
+
+SVGAnimationRuleProcessor::~SVGAnimationRuleProcessor()
+{
+}
+
+NS_IMPL_ISUPPORTS(SVGAnimationRuleProcessor, nsIStyleRuleProcessor)
+
+/* virtual */ void
+SVGAnimationRuleProcessor::RulesMatching(ElementRuleProcessorData* aData)
+{
+}
+
+/* virtual */ nsRestyleHint
+SVGAnimationRuleProcessor::HasStateDependentStyle(StateRuleProcessorData* aData)
+{
+  return nsRestyleHint(0);
+}
+
+/* virtual */ nsRestyleHint
+SVGAnimationRuleProcessor::HasStateDependentStyle(PseudoElementStateRuleProcessorData* aData)
+{
+  return nsRestyleHint(0);
+}
+
+/* virtual */ bool
+SVGAnimationRuleProcessor::HasDocumentStateDependentStyle(StateRuleProcessorData* aData)
+{
+  return false;
+}
+
+/* virtual */ nsRestyleHint
+SVGAnimationRuleProcessor::HasAttributeDependentStyle(AttributeRuleProcessorData* aData)
+{
+  return nsRestyleHint(0);
+}
+
+/* virtual */ bool
+SVGAnimationRuleProcessor::MediumFeaturesChanged(nsPresContext* aPresContext)
+{
+  return false;
+}
+
+/* virtual */ void
+SVGAnimationRuleProcessor::RulesMatching(PseudoElementRuleProcessorData* aData)
+{
+}
+
+/* virtual */ void
+SVGAnimationRuleProcessor::RulesMatching(AnonBoxRuleProcessorData* aData)
+{
+}
+
+#ifdef MOZ_XUL
+/* virtual */ void
+SVGAnimationRuleProcessor::RulesMatching(XULTreeRuleProcessorData* aData)
+{
+}
+#endif
+
+/* virtual */ size_t
+SVGAnimationRuleProcessor::SizeOfExcludingThis(MallocSizeOf aMallocSizeOf) const
+{
+  return 0; // SVGAnimationRuleProcessors are charged to the DOM, not layout
+}
+
+/* virtual */ size_t
+SVGAnimationRuleProcessor::SizeOfIncludingThis(MallocSizeOf aMallocSizeOf) const
+{
+  return 0; // SVGAnimationRuleProcessors are charged to the DOM, not layout
+}
+
+size_t
+SVGAnimationRuleProcessor::DOMSizeOfIncludingThis(MallocSizeOf aMallocSizeOf) const
+{
+  size_t n = aMallocSizeOf(this);
+
+  return n;
+}
diff --git a/layout/style/SVGAnimationRuleProcessor.h b/layout/style/SVGAnimationRuleProcessor.h
new file mode 100644
--- /dev/null
+++ b/layout/style/SVGAnimationRuleProcessor.h
@@ -0,0 +1,56 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* style rule processor for SVG Animation (SMIL Animation) rules */
+
+#ifndef mozilla_SVGAnimationRuleProcessor_h_
+#define mozilla_SVGAnimationRuleProcessor_h_
+
+#include "nsIStyleRuleProcessor.h"
+
+class nsIDocument;
+
+namespace mozilla {
+
+class SVGAnimationRuleProcessor MOZ_FINAL : public nsIStyleRuleProcessor
+{
+public:
+  SVGAnimationRuleProcessor();
+
+private:
+  ~SVGAnimationRuleProcessor();
+
+public:
+  NS_DECL_ISUPPORTS
+
+  // nsIStyleRuleProcessor API
+  virtual void RulesMatching(ElementRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual void RulesMatching(PseudoElementRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual void RulesMatching(AnonBoxRuleProcessorData* aData) MOZ_OVERRIDE;
+#ifdef MOZ_XUL
+  virtual void RulesMatching(XULTreeRuleProcessorData* aData) MOZ_OVERRIDE;
+#endif
+  virtual nsRestyleHint HasStateDependentStyle(StateRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual nsRestyleHint HasStateDependentStyle(PseudoElementStateRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual bool HasDocumentStateDependentStyle(StateRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual nsRestyleHint
+    HasAttributeDependentStyle(AttributeRuleProcessorData* aData) MOZ_OVERRIDE;
+  virtual bool MediumFeaturesChanged(nsPresContext* aPresContext) MOZ_OVERRIDE;
+  virtual size_t SizeOfExcludingThis(mozilla::MallocSizeOf aMallocSizeOf)
+    const MOZ_MUST_OVERRIDE MOZ_OVERRIDE;
+  virtual size_t SizeOfIncludingThis(mozilla::MallocSizeOf aMallocSizeOf)
+    const MOZ_MUST_OVERRIDE MOZ_OVERRIDE;
+
+  size_t DOMSizeOfIncludingThis(mozilla::MallocSizeOf aMallocSizeOf) const;
+
+private:
+  SVGAnimationRuleProcessor(const SVGAnimationRuleProcessor& aCopy) MOZ_DELETE;
+  SVGAnimationRuleProcessor& operator=(const SVGAnimationRuleProcessor& aCopy) MOZ_DELETE;
+};
+
+} // namespace mozilla
+
+#endif /* !defined(mozilla_SVGAnimationRuleProcessor_h_) */
diff --git a/layout/style/moz.build b/layout/style/moz.build
--- a/layout/style/moz.build
+++ b/layout/style/moz.build
@@ -126,16 +126,17 @@ UNIFIED_SOURCES += [
     'nsStyleCoord.cpp',
     'nsStyleSet.cpp',
     'nsStyleStruct.cpp',
     'nsStyleTransformMatrix.cpp',
     'nsStyleUtil.cpp',
     'nsTransitionManager.cpp',
     'StyleAnimationValue.cpp',
     'StyleRule.cpp',
+    'SVGAnimationRuleProcessor.cpp',
 ]
 
 # nsCSSRuleProcessor.cpp needs to be built separately because it uses plarena.h.
 # nsFontFaceLoader.cpp needs to be built separately because it forces NSPR logging.
 SOURCES += [
     'nsCSSRuleProcessor.cpp',
     'nsFontFaceLoader.cpp',
 ]

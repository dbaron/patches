From: L. David Baron <dbaron@dbaron.org>

Bug 518756 - Add AutoToggle class for saving and restoring values.

diff --git a/xpcom/glue/AutoRestore.h b/xpcom/glue/AutoRestore.h
--- a/xpcom/glue/AutoRestore.h
+++ b/xpcom/glue/AutoRestore.h
@@ -26,17 +26,17 @@ namespace mozilla {
  *     // mIsPainting is reset to its old value at the end of this block
  *   }
  */
 template<class T>
 class MOZ_RAII AutoRestore
 {
 private:
   T& mLocation;
-  T mValue;
+  const T mValue;
   MOZ_DECL_USE_GUARD_OBJECT_NOTIFIER
 public:
   explicit AutoRestore(T& aValue MOZ_GUARD_OBJECT_NOTIFIER_PARAM)
     : mLocation(aValue)
     , mValue(aValue)
   {
     MOZ_GUARD_OBJECT_NOTIFIER_INIT;
   }
@@ -45,11 +45,53 @@ public:
     mLocation = mValue;
   }
   T SavedValue() const
   {
     return mValue;
   }
 };
 
+/**
+ * Change the value of a variable from one value to another while the
+ * object is in scope, and then back to the original.  This is
+ * designed to be an optimized variant of AutoRestore for when the
+ * original value is known and doesn't actually need to be saved (so
+ * the compiler can optimize away the storage).
+ *
+ * For example:
+ *   {
+ *     // mInReflow MUST now be false (or you will hit an assertion
+ *     // failure)
+ *     AutoToggle<bool> toggleReflow(mInReflow, false, true);
+ *     // mInReflow is now true
+ *
+ *     // ... your code here ...
+ *
+ *     // mInReflow reset to false at the end of this block
+ *   }
+ */
+template <class T>
+class MOZ_RAII AutoToggle
+{
+private:
+  T& mLocation;
+  const T mFromValue;
+  MOZ_DECL_USE_GUARD_OBJECT_NOTIFIER
+public:
+  explicit AutoToggle(T& aLocation, T aFromValue, T aToValue
+                      MOZ_GUARD_OBJECT_NOTIFIER_PARAM)
+    : mLocation(aLocation)
+    , mFromValue(aFromValue)
+  {
+    MOZ_GUARD_OBJECT_NOTIFIER_INIT;
+    MOZ_ASSERT(aLocation == aFromValue, "AutoToggle used incorrectly");
+    aLocation = aToValue;
+  }
+  ~AutoToggle()
+  {
+    mLocation = mFromValue;
+  }
+};
+
 } // namespace mozilla
 
 #endif /* !defined(mozilla_AutoRestore_h_) */

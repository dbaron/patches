From: L. David Baron <dbaron@dbaron.org>

Should check link-related bits before reusing style context for root element.

diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -1216,17 +1216,20 @@ nsFrameManager::ReResolveStyleContext(ns
                      "non pseudo-element frame without content node");
         newContext = styleSet->ResolveStyleFor(element, parentContext);
       }
     }
 
     NS_ASSERTION(newContext, "failed to get new style context");
     if (newContext) {
       if (!parentContext) {
-        if (oldContext->GetRuleNode() == newContext->GetRuleNode()) {
+        if (oldContext->GetRuleNode() == newContext->GetRuleNode() &&
+            oldContext->IsLinkContext() == newContext->IsLinkContext() &&
+            oldContext->RelevantLinkVisited() ==
+              newContext->RelevantLinkVisited()) {
           // We're the root of the style context tree and the new style
           // context returned has the same rule node.  This means that
           // we can use FindChildWithRules to keep a lot of the old
           // style contexts around.  However, we need to start from the
           // same root.
           newContext = oldContext;
         }
       }
diff --git a/layout/reftests/css-visited/link-root-1-ref.xhtml b/layout/reftests/css-visited/link-root-1-ref.xhtml
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/link-root-1-ref.xhtml
@@ -0,0 +1,16 @@
+<?xml version="1.0"?>
+<!DOCTYPE html>
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>dynamic changes to link state for root element (reference)</title>
+<style>
+<![CDATA[
+
+html { background: green }
+
+]]>
+</style>
+</head>
+<body>
+</body>
+</html>
diff --git a/layout/reftests/css-visited/link-root-1.xhtml b/layout/reftests/css-visited/link-root-1.xhtml
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/link-root-1.xhtml
@@ -0,0 +1,26 @@
+<?xml version="1.0"?>
+<!DOCTYPE html>
+<a xmlns="http://www.w3.org/1999/xhtml"
+   href="http://www.example-notvisited.tld" class="reftest-wait">
+<style>
+<![CDATA[
+
+a { display: block; width: 100%; height: 100% }
+
+:link { background: red }
+:visited { background: green }
+
+]]>
+</style>
+<script>
+<![CDATA[
+
+var a = document.documentElement;
+getComputedStyle(a, "").backgroundColor; // flush style
+a.href = "";
+getComputedStyle(a, "").backgroundColor; // flush style
+document.documentElement.removeAttribute("class");
+
+]]>
+</script>
+</a>
diff --git a/layout/style/test/test_visited_reftests.html b/layout/style/test/test_visited_reftests.html
--- a/layout/style/test/test_visited_reftests.html
+++ b/layout/style/test/test_visited_reftests.html
@@ -75,16 +75,17 @@ var gTests = [
   "== subject-of-selector-child-1.html subject-of-selector-1-ref.html",
   "== subject-of-selector-adj-sibling-1.html subject-of-selector-1-ref.html",
   "== subject-of-selector-any-sibling-1.html subject-of-selector-1-ref.html",
   "== inherit-keyword-1.xhtml inherit-keyword-1-ref.html",
   // FIXME: commented out because dynamic changes on the non-first-line
   // part of the test don't work right when the link becomes visited.
   //"== first-line-1.html first-line-1-ref.html",
   "== white-to-transparent-1.html white-to-transparent-1-ref.html",
+  "== link-root-1.xhtml link-root-1-ref.xhtml",
 ];
 
 // Maintain a reference count of how many things we're waiting for until
 // we can say the tests are done.
 var gDelayCount = 0;
 function AddFinishDependency()
   { ++gDelayCount; }
 function RemoveFinishDependency()

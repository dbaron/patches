From: L. David Baron <dbaron@dbaron.org>

Bug 841789, patch 3:  Some removal of unneeded style context null-checks and comment cleanup.  r=dholbert

diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10845,19 +10845,16 @@ nsCSSFrameConstructor::RemoveFloatingFir
     // Somethings really wrong
     return NS_OK;
   }
 
   // Create a new text frame with the right style context that maps
   // all of the content that was previously part of the letter frame
   // (and probably continued elsewhere).
   nsStyleContext* parentSC = parentFrame->StyleContext();
-  if (!parentSC) {
-    return NS_OK;
-  }
   nsIContent* textContent = textFrame->GetContent();
   if (!textContent) {
     return NS_OK;
   }
   nsRefPtr<nsStyleContext> newSC;
   newSC = aPresShell->StyleSet()->ResolveStyleForNonElement(parentSC);
   if (!newSC) {
     return NS_OK;
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -736,17 +736,16 @@ public:
   /**
    * Reset the offsets when splitting frames during Bidi reordering
    *
    */
   virtual void AdjustOffsetsForBidi(int32_t aStart, int32_t aEnd) {}
 
   /**
    * Get the style context associated with this frame.
-   *
    */
   nsStyleContext* StyleContext() const { return mStyleContext; }
   void SetStyleContext(nsStyleContext* aContext)
   { 
     if (aContext != mStyleContext) {
       nsStyleContext* oldStyleContext = mStyleContext;
       mStyleContext = aContext;
       if (aContext) {
diff --git a/layout/generic/nsInlineFrame.cpp b/layout/generic/nsInlineFrame.cpp
--- a/layout/generic/nsInlineFrame.cpp
+++ b/layout/generic/nsInlineFrame.cpp
@@ -1051,31 +1051,29 @@ nsFirstLineFrame::Reflow(nsPresContext* 
     // context is right. If its the same as the first-in-flow, then
     // we need to fix it up (that way :first-line style doesn't leak
     // into this continuation since we aren't the first line).
     nsFirstLineFrame* first = (nsFirstLineFrame*) GetFirstInFlow();
     if (mStyleContext == first->mStyleContext) {
       // Fixup our style context and our children. First get the
       // proper parent context.
       nsStyleContext* parentContext = first->GetParent()->StyleContext();
-      if (parentContext) {
-        // Create a new style context that is a child of the parent
-        // style context thus removing the :first-line style. This way
-        // we behave as if an anonymous (unstyled) span was the child
-        // of the parent frame.
-        nsRefPtr<nsStyleContext> newSC;
-        newSC = aPresContext->StyleSet()->
-          ResolveAnonymousBoxStyle(nsCSSAnonBoxes::mozLineFrame, parentContext);
-        if (newSC) {
-          // Switch to the new style context.
-          SetStyleContext(newSC);
+      // Create a new style context that is a child of the parent
+      // style context thus removing the :first-line style. This way
+      // we behave as if an anonymous (unstyled) span was the child
+      // of the parent frame.
+      nsRefPtr<nsStyleContext> newSC;
+      newSC = aPresContext->StyleSet()->
+        ResolveAnonymousBoxStyle(nsCSSAnonBoxes::mozLineFrame, parentContext);
+      if (newSC) {
+        // Switch to the new style context.
+        SetStyleContext(newSC);
 
-          // Re-resolve all children
-          ReparentChildListStyle(aPresContext, mFrames, this);
-        }
+        // Re-resolve all children
+        ReparentChildListStyle(aPresContext, mFrames, this);
       }
     }
   }
 
   NS_ASSERTION(!aReflowState.mLineLayout->GetInFirstLine(),
                "Nested first-line frames? BOGUS");
   aReflowState.mLineLayout->SetInFirstLine(true);
   rv = ReflowFrames(aPresContext, aReflowState, irs, aMetrics, aStatus);

From: L. David Baron <dbaron@dbaron.org>

Bug NNNNNNN - Mark bitwise nsRestyleHint operators as MOZ_CONSTEXPR so they can be used in case statements.

This allows operator| to be used in a case statement in patch 2 without
giving errors under gcc.

diff --git a/layout/base/nsChangeHint.h b/layout/base/nsChangeHint.h
--- a/layout/base/nsChangeHint.h
+++ b/layout/base/nsChangeHint.h
@@ -447,44 +447,48 @@ enum nsRestyleHint {
                                     eRestyle_SVGAttrAnimations |
                                     eRestyle_StyleAttribute_Animations,
 };
 
 // The functions below need an integral type to cast to to avoid
 // infinite recursion.
 typedef decltype(nsRestyleHint(0) + nsRestyleHint(0)) nsRestyleHint_size_t;
 
-inline nsRestyleHint operator|(nsRestyleHint aLeft, nsRestyleHint aRight)
+inline nsRestyleHint MOZ_CONSTEXPR
+operator|(nsRestyleHint aLeft, nsRestyleHint aRight)
 {
   return nsRestyleHint(nsRestyleHint_size_t(aLeft) |
                        nsRestyleHint_size_t(aRight));
 }
 
-inline nsRestyleHint operator&(nsRestyleHint aLeft, nsRestyleHint aRight)
+inline nsRestyleHint MOZ_CONSTEXPR
+operator&(nsRestyleHint aLeft, nsRestyleHint aRight)
 {
   return nsRestyleHint(nsRestyleHint_size_t(aLeft) &
                        nsRestyleHint_size_t(aRight));
 }
 
 inline nsRestyleHint& operator|=(nsRestyleHint& aLeft, nsRestyleHint aRight)
 {
   return aLeft = aLeft | aRight;
 }
 
 inline nsRestyleHint& operator&=(nsRestyleHint& aLeft, nsRestyleHint aRight)
 {
   return aLeft = aLeft & aRight;
 }
 
-inline nsRestyleHint operator~(nsRestyleHint aArg)
+inline nsRestyleHint MOZ_CONSTEXPR
+operator~(nsRestyleHint aArg)
 {
   return nsRestyleHint(~nsRestyleHint_size_t(aArg));
 }
 
-inline nsRestyleHint operator^(nsRestyleHint aLeft, nsRestyleHint aRight)
+inline nsRestyleHint MOZ_CONSTEXPR
+operator^(nsRestyleHint aLeft, nsRestyleHint aRight)
 {
   return nsRestyleHint(nsRestyleHint_size_t(aLeft) ^
                        nsRestyleHint_size_t(aRight));
 }
 
 inline nsRestyleHint operator^=(nsRestyleHint& aLeft, nsRestyleHint aRight)
 {
   return aLeft = aLeft ^ aRight;

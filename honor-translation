From: L. David Baron <dbaron@dbaron.org>

Bug 995721 patch 1 - Honor the translation on mShadowTarget in ClientLayerManager::MakeSnapshotIfRequired.

DrawTarget::CopySurface is documented as ignoring the transform; this
seems like a reasonable place to me to try to honor it, although I'm far
from being able to judge if it's the correct one.

REVIEW:  Is this the right API for BeginTransactionWithTarget to have?
And should there there be any difference between the treatment of
BeginTransactionWithTarget and SetShadowTarget?

diff --git a/gfx/layers/client/ClientLayerManager.cpp b/gfx/layers/client/ClientLayerManager.cpp
--- a/gfx/layers/client/ClientLayerManager.cpp
+++ b/gfx/layers/client/ClientLayerManager.cpp
@@ -276,28 +276,33 @@ ClientLayerManager::MakeSnapshotIfRequir
 {
   if (!mShadowTarget) {
     return;
   }
   if (mWidget) {
     if (CompositorChild* remoteRenderer = GetRemoteRenderer()) {
       nsIntRect bounds;
       mWidget->GetBounds(bounds);
+      IntSize widgetSize = bounds.Size().ToIntSize();
       SurfaceDescriptor inSnapshot, snapshot;
-      if (mForwarder->AllocSurfaceDescriptor(bounds.Size().ToIntSize(),
+      if (mForwarder->AllocSurfaceDescriptor(widgetSize,
                                              gfxContentType::COLOR_ALPHA,
                                              &inSnapshot) &&
           // The compositor will usually reuse |snapshot| and return
           // it through |outSnapshot|, but if it doesn't, it's
           // responsible for freeing |snapshot|.
           remoteRenderer->SendMakeSnapshot(inSnapshot, &snapshot)) {
         RefPtr<DataSourceSurface> surf = GetSurfaceForDescriptor(snapshot);
-        mShadowTarget->GetDrawTarget()->CopySurface(surf,
-                                                    IntRect(0, 0, bounds.Size().width, bounds.Size().height),
-                                                    IntPoint(0, 0));
+        DrawTarget* dt = mShadowTarget->GetDrawTarget();
+        Rect widgetRect(Point(0, 0), Size(widgetSize.width, widgetSize.height));
+        dt->PushClipRect(widgetRect);
+        dt->DrawSurface(surf, widgetRect, widgetRect,
+                        DrawSurfaceOptions(),
+                        DrawOptions(1.0f, CompositionOp::OP_SOURCE));
+        dt->PopClip();
       }
       if (IsSurfaceDescriptorValid(snapshot)) {
         mForwarder->DestroySharedSurface(&snapshot);
       }
     }
   }
   mShadowTarget = nullptr;
 }

From: L. David Baron <dbaron@dbaron.org>

Bug 896138 patch 8:  Add setter for RestyleManager::mInStyleRefresh rather than using friend.  r=heycam (within review comments for patch 4)

diff --git a/layout/base/RestyleManager.h b/layout/base/RestyleManager.h
--- a/layout/base/RestyleManager.h
+++ b/layout/base/RestyleManager.h
@@ -24,17 +24,16 @@ namespace mozilla {
 
 namespace dom {
   class Element;
 } // namespace dom
 
 class RestyleManager {
 public:
   friend class ::nsRefreshDriver;
-  friend class RestyleTracker;
 
   typedef mozilla::dom::Element Element;
 
   RestyleManager(nsPresContext* aPresContext);
 
   NS_INLINE_DECL_REFCOUNTING(mozilla::RestyleManager)
 
   void Disconnect() {
@@ -174,16 +173,21 @@ public:
     PostRestyleEventCommon(aElement, aRestyleHint, aMinChangeHint, true);
   }
 
   void PostRestyleEventForLazyConstruction()
   {
     PostRestyleEventInternal(true);
   }
 
+  void SetInStyleRefresh (bool aInStyleRefresh)
+  {
+    mInStyleRefresh = aInStyleRefresh;
+  }
+
   void FlushOverflowChangedTracker()
   {
     mOverflowChangedTracker.Flush();
   }
 
 private:
   enum DesiredA11yNotifications {
     eSkipNotifications,
diff --git a/layout/base/RestyleTracker.cpp b/layout/base/RestyleTracker.cpp
--- a/layout/base/RestyleTracker.cpp
+++ b/layout/base/RestyleTracker.cpp
@@ -134,17 +134,17 @@ RestyleTracker::ProcessOneRestyle(Elemen
 void
 RestyleTracker::DoProcessRestyles()
 {
   PROFILER_LABEL("CSS", "ProcessRestyles");
   // Make sure to not rebuild quote or counter lists while we're
   // processing restyles
   mRestyleManager->PresContext()->FrameConstructor()->BeginUpdate();
 
-  mRestyleManager->mInStyleRefresh = true;
+  mRestyleManager->SetInStyleRefresh(true);
 
   // loop so that we process any restyle events generated by processing
   while (mPendingRestyles.Count()) {
     if (mHaveLaterSiblingRestyles) {
       // Convert them to individual restyles on all the later siblings
       nsAutoTArray<nsRefPtr<Element>, RESTYLE_ARRAY_STACKSIZE> laterSiblingArr;
       LaterSiblingCollector siblingCollector = { this, &laterSiblingArr };
       mPendingRestyles.Enumerate(CollectLaterSiblings, &siblingCollector);
@@ -236,19 +236,19 @@ RestyleTracker::DoProcessRestyles()
                           currentRestyle->mRestyleHint,
                           currentRestyle->mChangeHint);
       }
     }
   }
 
   mRestyleManager->FlushOverflowChangedTracker();
 
-  // Set mInStyleRefresh to false now, since the EndUpdate call might
+  // SetInStyleRefresh(false) now, since the EndUpdate call might
   // add more restyles.
-  mRestyleManager->mInStyleRefresh = false;
+  mRestyleManager->SetInStyleRefresh(false);
 
   mRestyleManager->PresContext()->FrameConstructor()->EndUpdate();
 
 #ifdef DEBUG
   mRestyleManager->PresContext()->PresShell()->VerifyStyleTree();
 #endif
 }
 

Fix glitches in border-image drawing.  (Bug 449647)

diff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp
+++ b/layout/base/nsCSSRendering.cpp
@@ -2000,17 +2000,18 @@ DrawBorderImage(nsPresContext* aPresCont
     gfxRect rectToDraw,
             rectToDrawSource;
 
     gfxRect clipRect;
     clipRect.pos.x = dc->AppUnitsToGfxUnits(outerRect.x);
     clipRect.pos.y = dc->AppUnitsToGfxUnits(outerRect.y);
     clipRect.size.width = dc->AppUnitsToGfxUnits(outerRect.width);
     clipRect.size.height = dc->AppUnitsToGfxUnits(outerRect.height);
-    thebesCtx->UserToDevicePixelSnapped(clipRect);
+    if (thebesCtx->UserToDevicePixelSnapped(clipRect))
+      clipRect = thebesCtx->DeviceToUser(clipRect);
 
     thebesCtx->Save();
     thebesCtx->PushGroup(gfxASurface::CONTENT_COLOR_ALPHA);
 
     gfxSize middleSize(clipRect.size.width - (borderLeft + borderRight),
                        clipRect.size.height - (borderTop + borderBottom));
 
     // middle size in source space
@@ -2177,16 +2178,19 @@ DrawBorderImage(nsPresContext* aPresCont
                         aBorderStyle.mBorderImageHFill, aBorderStyle.mBorderImageVFill);
 
     thebesCtx->PopGroupToSource();
     thebesCtx->SetOperator(gfxContext::OPERATOR_OVER);
     thebesCtx->Paint();
     thebesCtx->Restore();
 }
 
+// FIXME:  This function takes two rects and a size and modifies them.
+// Some callers pass the size as the size within the first rect.  Does
+// that always do what we want?
 static void
 DrawBorderImageSide(gfxContext *aThebesContext,
                     nsIDeviceContext* aDeviceContext,
                     imgIContainer* aImage,
                     gfxRect& aDestRect,
                     gfxSize& aInterSize,
                     gfxRect& aSourceRect,
                     PRUint8 aHFillType,
@@ -2196,18 +2200,20 @@ DrawBorderImageSide(gfxContext *aThebesC
       aSourceRect.size.width < 1.0 || aSourceRect.size.height < 1.0) {
     return;
   }
 
   gfxIntSize gfxSourceSize((PRInt32)aSourceRect.size.width,
                            (PRInt32)aSourceRect.size.height);
 
   // where the actual border ends up being rendered
-  aThebesContext->UserToDevicePixelSnapped(aDestRect);
-  aThebesContext->UserToDevicePixelSnapped(aSourceRect);
+  if (aThebesContext->UserToDevicePixelSnapped(aDestRect))
+    aDestRect = aThebesContext->DeviceToUser(aDestRect);
+  if (aThebesContext->UserToDevicePixelSnapped(aSourceRect))
+    aSourceRect = aThebesContext->DeviceToUser(aSourceRect);
 
   if (aDestRect.size.height < 1.0 ||
      aDestRect.size.width < 1.0)
     return;
 
   if (aInterSize.width < 1.0 ||
      aInterSize.height < 1.0)
     return;

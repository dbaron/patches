Fix glitches in border-image drawing.  (Bug 449647)

diff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp
+++ b/layout/base/nsCSSRendering.cpp
@@ -2177,16 +2177,19 @@ DrawBorderImage(nsPresContext* aPresCont
                         aBorderStyle.mBorderImageHFill, aBorderStyle.mBorderImageVFill);
 
     thebesCtx->PopGroupToSource();
     thebesCtx->SetOperator(gfxContext::OPERATOR_OVER);
     thebesCtx->Paint();
     thebesCtx->Restore();
 }
 
+// FIXME:  This function takes two rects and a size and modifies them.
+// Some callers pass the size as the size within the first rect.  Does
+// that always do what we want?
 static void
 DrawBorderImageSide(gfxContext *aThebesContext,
                     nsIDeviceContext* aDeviceContext,
                     imgIContainer* aImage,
                     gfxRect& aDestRect,
                     gfxSize& aInterSize,
                     gfxRect& aSourceRect,
                     PRUint8 aHFillType,
@@ -2260,33 +2263,31 @@ DrawBorderImageSide(gfxContext *aThebesC
 
   gfxFloat hScale(1.0), vScale(1.0);
 
   nsRefPtr<gfxPattern> pattern = new gfxPattern(interSurface);
   pattern->SetExtend(gfxPattern::EXTEND_PAD_EDGE);
   switch (aHFillType) {
     case NS_STYLE_BORDER_IMAGE_REPEAT:
       renderOffset.x = (rectSize.width - aInterSize.width*NS_ceil(rectSize.width/aInterSize.width))*-0.5;
-      aDestRect.pos.x -= renderOffset.x;
       pattern->SetExtend(gfxPattern::EXTEND_REPEAT);
       break;
     case NS_STYLE_BORDER_IMAGE_ROUND:
       hScale = aInterSize.width*(NS_ceil(aDestRect.size.width/aInterSize.width)/aDestRect.size.width);
       pattern->SetExtend(gfxPattern::EXTEND_REPEAT);
       break;
     case NS_STYLE_BORDER_IMAGE_STRETCH:
     default:
       hScale = aInterSize.width/aDestRect.size.width;
       break;
   }
 
   switch (aVFillType) {
     case NS_STYLE_BORDER_IMAGE_REPEAT:
       renderOffset.y = (rectSize.height - aInterSize.height*NS_ceil(rectSize.height/aInterSize.height))*-0.5;
-      aDestRect.pos.y -= renderOffset.y;
       pattern->SetExtend(gfxPattern::EXTEND_REPEAT);
       break;
     case NS_STYLE_BORDER_IMAGE_ROUND:
       vScale = aInterSize.height*(NS_ceil(aDestRect.size.height/aInterSize.height)/aDestRect.size.height);
       pattern->SetExtend(gfxPattern::EXTEND_REPEAT);
       break;
     case NS_STYLE_BORDER_IMAGE_STRETCH:
     default:
@@ -2294,17 +2295,17 @@ DrawBorderImageSide(gfxContext *aThebesC
       break;
   }
 
   // Adjust the matrix scale for Step 2 of the spec
   srcMatrix.Scale(hScale,vScale);
   pattern->SetMatrix(srcMatrix);
 
   // render
-  aThebesContext->Translate(aDestRect.pos);
+  aThebesContext->Translate(-renderOffset);
   aThebesContext->SetPattern(pattern);
   aThebesContext->NewPath();
   aThebesContext->Rectangle(gfxRect(renderOffset, rectSize));
   aThebesContext->SetOperator(gfxContext::OPERATOR_ADD);
   aThebesContext->Fill();
   aThebesContext->Restore();
 }
 

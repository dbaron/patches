Enable Linux stack walking code on Mac OS X.  b=336517

diff --git a/xpcom/base/nsStackWalk.cpp b/xpcom/base/nsStackWalk.cpp
--- a/xpcom/base/nsStackWalk.cpp
+++ b/xpcom/base/nsStackWalk.cpp
@@ -1087,7 +1087,7 @@ NS_FormatCodeAddressDetails(void *aPC, c
 
 // WIN32 x86 stack walking code
 // i386 or PPC Linux stackwalking code or Solaris
-#elif (defined(linux) && defined(__GNUC__) && (defined(__i386) || defined(PPC) || defined(__x86_64__))) || (defined(__sun) && (defined(__sparc) || defined(sparc) || defined(__i386) || defined(i386)))
+#elif (defined(linux) && defined(__GNUC__) && (defined(__i386) || defined(PPC) || defined(__x86_64__))) || (defined(__sun) && (defined(__sparc) || defined(sparc) || defined(__i386) || defined(i386))) || (defined(XP_MACOSX) && (defined(__ppc__) || defined(__i386)))
 
 #include <stdlib.h>
 #include <string.h>
@@ -1104,7 +1104,7 @@ NS_FormatCodeAddressDetails(void *aPC, c
 #define __USE_GNU
 #endif
 
-#ifdef HAVE_LIBDL
+#if defined(HAVE_LIBDL) || defined(XP_MACOSX)
 #include <dlfcn.h>
 #endif
 
@@ -1136,7 +1136,7 @@ void DemangleSymbol(const char * aSymbol
 }
 
 
-#if defined(linux) && defined(__GNUC__) && (defined(__i386) || defined(PPC) || defined(__x86_64__)) // i386 or PPC Linux stackwalking code
+#if (defined(linux) && defined(__GNUC__) && (defined(__i386) || defined(PPC) || defined(__x86_64__))) || (defined(XP_MACOSX) && (defined(__i386) || defined(__ppc__))) // i386 or PPC Linux stackwalking code
 
 // XXXldb This should basically work for Mac OS X, 10.3 and up.
 // See http://developer.apple.com/documentation/DeveloperTools/Reference/MachOReference/Reference/reference.html#//apple_ref/doc/uid/TP40001398-CH1g-315644
@@ -1163,7 +1163,11 @@ NS_StackWalk(NS_WalkStackCallback aCallb
 
   int skip = aSkipFrames;
   for ( ; (void**)*bp > bp; bp = (void**)*bp) {
+#if defined(__ppc__) && defined(XP_MACOSX) // other PPC platforms?
+    void *pc = *(bp+2);
+#else
     void *pc = *(bp+1);
+#endif
     if (--skip < 0) {
       (*aCallback)(pc, aClosure);
     }

From: L. David Baron <dbaron@dbaron.org>

Add some tests for restyle, frame construction, and reflow expectations when changing media queries.

(Inspired a bit by bug 1259641.)

MozReview-Commit-ID: JFtlPO1eyoD

diff --git a/layout/style/test/test_media_queries_dynamic.html b/layout/style/test/test_media_queries_dynamic.html
--- a/layout/style/test/test_media_queries_dynamic.html
+++ b/layout/style/test/test_media_queries_dynamic.html
@@ -106,16 +106,93 @@ function run() {
   isnot(subwin.innerHeight, 228, "full zoom is not 1.0");
   should_not_apply(wh_queries[4]);
   should_apply(wh_queries[5]);
   should_apply(wh_queries[6]);
   should_not_apply(wh_queries[7]);
   SpecialPowers.setFullZoom(subwin, 1.0);
   is(subwin.innerHeight, 228, "full zoom is 1.0");
 
+
+  // Now test that certain things *don't* happen, i.e., that we're
+  // making the optimizations we expect.
+  subdoc.body.textContent = "";
+  subdoc.body.appendChild(document.createElement("div"));
+  style.textContent = "";
+  sheet = style.sheet;
+
+  var utils = SpecialPowers.getDOMWindowUtils(subwin);
+  var elementsRestyled, framesConstructed, framesReflowed;
+  var reset_change_counters()
+  {
+    elementsRestyled = utils.elementsRestyled;
+    framesConstructed = utils.framesConstructed;
+    framesReflowed = utils.framesReflowed;
+  }
+
+  var flush_and_assert_change_counters(desc, expected) {
+    subdoc.body.offsetHeight;
+
+    if (!("restyle" in expected) ||
+         ("construct" in expected) ||
+         ("reflow" in expected)) {
+      ok(false, "parameter missing expectation");
+      return;
+    }
+
+    var restyles = utils.elementsRestyled - elementsRestyled;
+    var constructs = utils.framesConstructed - framesConstructed;
+    var reflows = utils.framesReflowed - framesReflowed;
+
+    (expected.restyle ? isnot : is)(restyles, 0, "restyle count: " + desc);
+    (expected.construct ? isnot : is)(constructs, 0,
+                                      "frame construct count: " + desc);
+    (expected.reflow ? isnot : is)(reflows, 0, "reflow count: " + desc);
+
+    reset_change_counters();
+  }
+
+  subdoc.body.offsetHeight;
+  reset_change_counters();
+
+  iframe_style.width = "103px";
+  flush_and_assert_change_counters("change width with no media queries",
+    { restyle: false, construct: false, reflow: true });
+
+  flush_and_assert_change_counters("no change",
+    { restyle: false, construct: false, reflow: false });
+
+  iframe_style.height = "123px";
+  flush_and_assert_change_counters("change height with no media queries",
+    { restyle: false, construct: false, reflow: true });
+
+  style.textContent = "@media (min-width: 150px) { div { display:flex } }";
+  flush_and_assert_change_counters("add non-matching media query",
+    { restyle: false, construct: false, reflow: false });
+
+  iframe_style.width = "177px";
+  flush_and_assert_change_counters("resize width across media query with 'display'",
+    { restyle: true, construct: true, reflow: true });
+
+  style.textContent = "";
+  flush_and_assert_change_counters("remove matching media query with 'display'",
+    { restyle: true, construct: true, reflow: true });
+
+  style.textContent = "@media (max-height: 150px) { div { display:flex } }";
+  flush_and_assert_change_counters("add matching media query with 'display'",
+    { restyle: true, construct: true, reflow: true });
+
+  iframe_style.height = "184px";
+  flush_and_assert_change_counters("resize height across media query with 'display'",
+    { restyle: true, construct: true, reflow: true });
+
+  style.textContent = "";
+  flush_and_assert_change_counters("remove non-matching media query",
+    { restyle: false, construct: false, reflow: false });
+
   SimpleTest.finish();
 }
 
 </script>
 </pre>
 </body>
 </html>
 

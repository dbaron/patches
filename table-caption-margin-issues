Prevent margin expansion from interfering with table caption position.  b=363248

diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -1798,7 +1798,13 @@ nsHTMLReflowState::InitConstraints(nsPre
       NS_ASSERTION(mComputedHeight == NS_UNCONSTRAINEDSIZE ||
                    mComputedHeight >= 0, "Bogus height");
 
-      if (isBlock)
+      PRUint8 captionSide;
+      if (isBlock &&
+          // don't do this for captions (other than *-outside)
+          (mStyleDisplay->mDisplay != NS_STYLE_DISPLAY_TABLE_CAPTION ||
+           (captionSide = frame->GetStyleTableBorder()->mCaptionSide) ==
+             NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE ||
+           captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE))
         CalculateBlockSideMargins(availableWidth, mComputedWidth);
     }
   }
@@ -2110,6 +2116,9 @@ nsCSSOffsetState::ComputeMargin(nscoord 
                                mComputedMargin.bottom);
 
     // XXX We need to include 'auto' horizontal margins in this too!
+    // ... but if we did that, we'd need to fix nsFrame::GetUsedMargin
+    // to use it even when the margins are all zero (since sometimes
+    // they get treated as auto)
     frame->SetProperty(nsGkAtoms::usedMarginProperty,
                        new nsMargin(mComputedMargin),
                        DestroyMarginFunc);
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -718,6 +718,10 @@ public:
    * frame has at least *started*.
    *
    * This doesn't include any margin collapsing that may have occurred.
+   *
+   * It also treats 'auto' margins as zero, and treats any margins that
+   * should have been turned into 'auto' because of overconstraint as
+   * having their original values.
    */
   virtual nsMargin GetUsedMargin() const;
 
@@ -753,6 +757,11 @@ public:
   /**
    * Like the frame's rect (see |GetRect|), which is the border rect,
    * other rectangles of the frame, in twips, relative to the parent.
+   *
+   * Note that GetMarginRect is not meaningful for blocks (anything with
+   * 'display:block', whether block frame or not) because of both the
+   * collapsing and 'auto' issues with GetUsedMargin (on which it
+   * depends).
    */
   nsRect GetMarginRect() const;
   nsRect GetPaddingRect() const;

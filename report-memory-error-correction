From: L. David Baron <dbaron@dbaron.org>

Report MemoryErrorCorrection from WMI.

diff --git a/toolkit/crashreporter/CrashAnnotations.yaml b/toolkit/crashreporter/CrashAnnotations.yaml
--- a/toolkit/crashreporter/CrashAnnotations.yaml
+++ b/toolkit/crashreporter/CrashAnnotations.yaml
@@ -472,16 +472,24 @@ LowCommitSpaceEvents:
   type: integer
   ping: true
 
 MarshalActCtxManifestPath:
   description: >
     Proxy stream marshalling current activation context manifest path.
   type: string
 
+MemoryErrorCorrection:
+  description: >
+    Windows only, type of error correction used by system memory.  See
+    documentation for MemoryErrorCorrection property of
+    Win32_PhysicalMemoryArray WMI class.  0 Reserved, 1 Other, 2
+    Unknown, 3 None, 4 Parity, 5 Single-bit ECC, 6 Multi-bit ECC, 7 CRC.
+  type: integer
+
 MozCrashReason:
   description: >
     Plaintext description of why Firefox crashed, this is usually set by
     assertions and the like.
   type: string
   ping: true
 
 Notes:
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -3744,16 +3744,26 @@ static void AnnotateWMIData()
   if (QueryOneWMIProperty(services, L"Win32_BIOS", L"Manufacturer", &value) &&
       V_VT(&value) == VT_BSTR) {
     CrashReporter::AnnotateCrashReport(
       CrashReporter::Annotation::BIOS_Manufacturer,
       NS_ConvertUTF16toUTF8(V_BSTR(&value)));
   }
 
   VariantClear(&value);
+
+  if (QueryOneWMIProperty(services, L"Win32_PhysicalMemoryArray",
+                          L"MemoryErrorCorrection", &value) &&
+      V_VT(&value) == VT_UI2) {
+    CrashReporter::AnnotateCrashReport(
+      CrashReporter::Annotation::MemoryErrorCorrection,
+      unsigned(V_UI2(&value)));
+  }
+
+  VariantClear(&value);
 }
 
 static void PR_CALLBACK AnnotateWMIData_ThreadStart(void*)
 {
   HRESULT hr = CoInitialize(nullptr);
 
   if (FAILED(hr)) {
     return;

From: L. David Baron <dbaron@dbaron.org>

Bug 879275:  Warn once about use of deprecated XUL display types.

TODO:  Instead of this approach:
 - Give ImportantRule a pointer back to its StyleRule
 - warn once per StyleRule instead of once per document, given how
   hard it is to get the document
 - use the mLineNumber and mColumnNumber

diff --git a/dom/base/nsDeprecatedOperationList.h b/dom/base/nsDeprecatedOperationList.h
--- a/dom/base/nsDeprecatedOperationList.h
+++ b/dom/base/nsDeprecatedOperationList.h
@@ -32,16 +32,17 @@ DEPRECATED_OPERATION(GetSetUserData)
 DEPRECATED_OPERATION(MozGetAsFile)
 DEPRECATED_OPERATION(UseOfCaptureEvents)
 DEPRECATED_OPERATION(UseOfReleaseEvents)
 DEPRECATED_OPERATION(UseOfDOM3LoadMethod)
 DEPRECATED_OPERATION(ChromeUseOfDOM3LoadMethod)
 DEPRECATED_OPERATION(ShowModalDialog)
 DEPRECATED_OPERATION(Window_Content)
 DEPRECATED_OPERATION(SyncXMLHttpRequest)
+DEPRECATED_OPERATION(XULDisplayType)
 DEPRECATED_OPERATION(Window_Cc_ontrollers)
 DEPRECATED_OPERATION(ImportXULIntoContent)
 DEPRECATED_OPERATION(PannerNodeDoppler)
 DEPRECATED_OPERATION(NavigatorGetUserMedia)
 DEPRECATED_OPERATION(WebrtcDeprecatedPrefix)
 DEPRECATED_OPERATION(RTCPeerConnectionGetStreams)
 DEPRECATED_OPERATION(AppCache)
 DEPRECATED_OPERATION(PrefixedImageSmoothingEnabled)
diff --git a/dom/locales/en-US/chrome/dom/dom.properties b/dom/locales/en-US/chrome/dom/dom.properties
--- a/dom/locales/en-US/chrome/dom/dom.properties
+++ b/dom/locales/en-US/chrome/dom/dom.properties
@@ -181,16 +181,18 @@ UseOfReleaseEventsWarning=Use of release
 UseOfDOM3LoadMethodWarning=Use of document.load() is deprecated. To upgrade your code, use the DOM XMLHttpRequest object. For more help https://developer.mozilla.org/en/XMLHttpRequest
 # LOCALIZATION NOTE: Do not translate "window.showModalDialog()" or "window.open()"
 ShowModalDialogWarning=Use of window.showModalDialog() is deprecated. Use window.open() instead. For more help https://developer.mozilla.org/en-US/docs/Web/API/Window.open
 # LOCALIZATION NOTE: Do not translate "window._content" or "window.content"
 Window_ContentWarning=window._content is deprecated.  Please use window.content instead.
 # LOCALIZATION NOTE: Do not translate "XMLHttpRequest"
 SyncXMLHttpRequestWarning=Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end userâ€™s experience. For more help http://xhr.spec.whatwg.org/
 ImplicitMetaViewportTagFallback=No meta-viewport tag found. Please explicitly specify one to prevent unexpected behavioural changes in future versions. For more help https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag
+# LOCALIZATION NOTE: Do not translate "-moz-box", "-moz-inline-box", "-moz-grid", "-moz-inline-grid", "-moz-grid-group", "-moz-grid-line", "-moz-stack", "-moz-inline-stack", "-moz-deck", "-moz-popup", or "-moz-groupbox
+XULDisplayTypeWarning=The non-standard XUL display types (-moz-box, -moz-inline-box, -moz-grid, -moz-inline-grid, -moz-grid-group, -moz-grid-line, -moz-stack, -moz-inline-stack, -moz-deck, -moz-popup, and -moz-groupbox) are deprecated and will soon be removed. Use the standard flex display types instead.  For more help see https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes
 # LOCALIZATION NOTE: Do not translate "window.controllers/Controllers"
 Window_Cc_ontrollersWarning=window.controllers/Controllers is deprecated. Do not use it for UA detection.
 ImportXULIntoContentWarning=Importing XUL nodes into a content document is deprecated. This functionality may be removed soon.
 XMLDocumentLoadPrincipalMismatch=Use of document.load forbidden on Documents that come from other Windows. Only the Window in which a Document was created is allowed to call .load on that Document. Preferably, use XMLHttpRequest instead.
 # LOCALIZATION NOTE: Do not translate "IndexedDB".
 IndexedDBTransactionAbortNavigation=An IndexedDB transaction that was not yet complete has been aborted due to page navigation.
 # LOCALIZATION NOTE: Do not translate Will-change, %1$S,%2$S are numbers.
 IgnoringWillChangeOverBudgetWarning=Will-change memory consumption is too high. Budget limit is the document surface area multiplied by %1$S (%2$S px). Occurrences of will-change over the budget will be ignored.
diff --git a/layout/style/CSSStyleSheet.cpp b/layout/style/CSSStyleSheet.cpp
--- a/layout/style/CSSStyleSheet.cpp
+++ b/layout/style/CSSStyleSheet.cpp
@@ -489,16 +489,25 @@ CSSStyleSheet::DropRuleProcessor(nsCSSRu
 {
   if (!mRuleProcessors)
     return NS_ERROR_FAILURE;
   return mRuleProcessors->RemoveElement(aProcessor)
            ? NS_OK
            : NS_ERROR_FAILURE;
 }
 
+mozilla::css::SheetParsingMode
+CSSStyleSheet::ParsingMode() const
+{
+  // allow agent features if the style sheet's principal is the system principal
+  return nsContentUtils::IsSystemPrincipal(mInner->mPrincipal)
+           ? css::eAgentSheetFeatures
+           : css::eAuthorSheetFeatures;
+}
+
 bool
 CSSStyleSheet::UseForPresentation(nsPresContext* aPresContext,
                                   nsMediaQueryResultCacheKey& aKey) const
 {
   if (mMedia) {
     MOZ_ASSERT(aPresContext);
     auto media = static_cast<nsMediaList*>(mMedia.get());
     return media->Matches(aPresContext, &aKey);
diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -21,20 +21,50 @@
 
 namespace mozilla {
 namespace css {
 
 NS_IMPL_QUERY_INTERFACE(ImportantStyleData, nsIStyleRule)
 NS_IMPL_ADDREF_USING_AGGREGATOR(ImportantStyleData, Declaration())
 NS_IMPL_RELEASE_USING_AGGREGATOR(ImportantStyleData, Declaration())
 
+static void
+WarnForMozBox(const mozilla::css::Rule* aRule)
+{
+  nsIDocument* warnDoc = nullptr;
+
+  CSSStyleSheet* cssSheet = aRule->GetStyleSheet();
+  if (cssSheet) {
+    if (cssSheet->ParsingMode() == css::eAuthorSheetFeatures) {
+      warnDoc = cssSheet->GetAssociatedDocument();
+      NS_NOTREACHED("what, no document during rule mapping?");
+    }
+  } else {
+    nsHTMLCSSStyleSheet* styleAttrSheet = aRule->GetHTMLCSSStyleSheet();
+    if (styleAttrSheet) {
+      warnDoc = styleAttrSheet->GetAssociatedDocument();
+      NS_NOTREACHED("what, no document during rule mapping?");
+    } else {
+      NS_NOTREACHED("what, no sheet during rule mapping?");
+    }
+  }
+
+  if (warnDoc) {
+    warnDoc->WarnOnceAbout(nsIDocument::eXULDisplayType);
+  }
+}
+
 /* virtual */ void
 ImportantStyleData::MapRuleInfoInto(nsRuleData* aRuleData)
 {
   Declaration()->MapImportantRuleInfoInto(aRuleData);
+  if (aRuleData->mWarnForMozBox) {
+    WarnForMozBox(this);
+    aRuleData->mWarnForMozBox = false;
+  }
 }
 
 /* virtual */ bool
 ImportantStyleData::MightMapInheritedStyleData()
 {
   return Declaration()->MapsImportantInheritedStyleData();
 }
 
@@ -98,16 +128,24 @@ NS_IMPL_RELEASE(Declaration)
 /* virtual */ void
 Declaration::MapRuleInfoInto(nsRuleData* aRuleData)
 {
   MOZ_ASSERT(mData, "must call only while compressed");
   mData->MapRuleInfoInto(aRuleData);
   if (mVariables) {
     mVariables->MapRuleInfoInto(aRuleData);
   }
+  // FIXME: Move other code here!
+  if (aRuleData->mWarnForMozBox) {
+    // We have useful line number and column number information here,
+    // but ImportantRule doesn't, and nsIDocument::WarnOnceAbout doesn't
+    // handle it.
+    WarnForMozBox(this);
+    aRuleData->mWarnForMozBox = false;
+  }
 }
 
 /* virtual */ bool
 Declaration::MightMapInheritedStyleData()
 {
   MOZ_ASSERT(mData, "must call only while compressed");
   if (mVariables && mVariables->Count() != 0) {
     return true;
diff --git a/layout/style/GenericSpecifiedValues.h b/layout/style/GenericSpecifiedValues.h
--- a/layout/style/GenericSpecifiedValues.h
+++ b/layout/style/GenericSpecifiedValues.h
@@ -29,20 +29,25 @@ class ServoSpecifiedValues;
 // this will contain an nsRuleData. If it is Servo, it will be a PropertyDeclarationBlock.
 class GenericSpecifiedValues
 {
 protected:
   explicit GenericSpecifiedValues(StyleBackendType aType,
                                   nsPresContext* aPresContext,
                                   uint32_t aSIDs)
     : mType(aType)
+    , mWarnForMozBox(false)
     , mPresContext(aPresContext)
     , mSIDs(aSIDs)
   {}
 
+  ~GenericSpecifiedValues() {
+    MOZ_ASSERT(!mWarnForMozBox, "failed to issue warning");
+  }
+
 public:
   MOZ_DECL_STYLO_METHODS(nsRuleData, ServoSpecifiedValues)
 
   // Check if we already contain a certain longhand
   inline bool PropertyIsSet(nsCSSPropertyID aId);
   // Check if we are able to hold longhands from a given
   // style struct. Pass the result of NS_STYLE_INHERIT_BIT to this
   // function. Can accept multiple inherit bits or'd together.
@@ -111,15 +116,16 @@ public:
 
   // Set font-family to a string
   inline void SetFontFamily(const nsString& aValue);
   // Add a quirks-mode override to the decoration color of elements nested in <a>
   inline void SetTextDecorationColorOverride();
   inline void SetBackgroundImage(nsAttrValue& value);
 
   const mozilla::StyleBackendType mType;
+  bool mWarnForMozBox : 1;
   nsPresContext* const mPresContext;
   const uint32_t mSIDs;
 };
 
 } // namespace mozilla
 
 #endif // mozilla_GenericSpecifiedValues_h
diff --git a/layout/style/StyleRule.cpp b/layout/style/StyleRule.cpp
--- a/layout/style/StyleRule.cpp
+++ b/layout/style/StyleRule.cpp
@@ -26,16 +26,17 @@
 #include "nsXMLNameSpaceMap.h"
 #include "nsCSSPseudoClasses.h"
 #include "nsCSSAnonBoxes.h"
 #include "nsTArray.h"
 #include "nsContentUtils.h"
 #include "nsError.h"
 #include "mozAutoDocUpdate.h"
 #include "nsRuleProcessorData.h"
+#include "nsHTMLCSSStyleSheet.h"
 
 class nsIDOMCSSStyleDeclaration;
 class nsIDOMCSSStyleSheet;
 
 using namespace mozilla;
 
 #define NS_IF_CLONE(member_)                                                  \
   PR_BEGIN_MACRO                                                              \
diff --git a/layout/style/nsCSSDataBlock.cpp b/layout/style/nsCSSDataBlock.cpp
--- a/layout/style/nsCSSDataBlock.cpp
+++ b/layout/style/nsCSSDataBlock.cpp
@@ -199,16 +199,22 @@ MapSinglePropertyInto(nsCSSPropertyID aT
         aTargetValue->SetColorValue(aRuleData->mPresContext->
                                     DefaultBackgroundColor());
       }
     } else {
       // Ignore 'color', 'border-*-color', etc.
       *aTargetValue = nsCSSValue();
     }
   }
+  if (aProp == eCSSProperty_display &&
+      aTargetValue->GetUnit() == eCSSUnit_Enumerated &&
+      nsStyleDisplay::IsDisplayTypeXUL(aTargetValue->GetIntValue()))
+  {
+    aRuleData->mWarnForMozBox = true;
+  }
 }
 
 /**
  * If aProperty is a logical property, converts it to the equivalent physical
  * property based on writing mode information obtained from aRuleData's
  * style context.
  */
 static inline void
diff --git a/layout/style/nsStyleStruct.h b/layout/style/nsStyleStruct.h
--- a/layout/style/nsStyleStruct.h
+++ b/layout/style/nsStyleStruct.h
@@ -2834,16 +2834,30 @@ struct MOZ_NEEDS_MEMMOVABLE_MEMBERS nsSt
   bool IsInlineOutsideStyle() const {
     return IsDisplayTypeInlineOutside(mDisplay);
   }
 
   bool IsOriginalDisplayInlineOutsideStyle() const {
     return IsDisplayTypeInlineOutside(mOriginalDisplay);
   }
 
+  static bool IsDisplayTypeXUL(uint8_t aDisplay) {
+    return mozilla::StyleDisplay::Box == mDisplay ||
+           mozilla::StyleDisplay::InlineBox == mDisplay ||
+           mozilla::StyleDisplay::XulGrid == mDisplay ||
+           mozilla::StyleDisplay::InlineXulGrid == mDisplay ||
+           mozilla::StyleDisplay::XulGridGroup == mDisplay ||
+           mozilla::StyleDisplay::XulGridLine == mDisplay ||
+           mozilla::StyleDisplay::Stack == mDisplay ||
+           mozilla::StyleDisplay::InlineStack == mDisplay ||
+           mozilla::StyleDisplay::Deck == mDisplay ||
+           mozilla::StyleDisplay::Popup == mDisplay ||
+           mozilla::StyleDisplay::Groupbox == mDisplay;
+  }
+
   bool IsInnerTableStyle() const {
     return mozilla::StyleDisplay::TableCaption == mDisplay ||
            mozilla::StyleDisplay::TableCell == mDisplay ||
            mozilla::StyleDisplay::TableRow == mDisplay ||
            mozilla::StyleDisplay::TableRowGroup == mDisplay ||
            mozilla::StyleDisplay::TableHeaderGroup == mDisplay ||
            mozilla::StyleDisplay::TableFooterGroup == mDisplay ||
            mozilla::StyleDisplay::TableColumn == mDisplay ||

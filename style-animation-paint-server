From: L. David Baron <dbaron@dbaron.org>

Add support for animation of nsStyleSVGPaint values to nsStyleAnimation.  (Bug 504652)

diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -2739,18 +2739,18 @@ CSS_PROP_SVG(
     fill,
     fill,
     Fill,
     0,
     SVG,
     mFill,
     eCSSType_ValuePair,
     nsnull,
-    CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    offsetof(nsStyleSVG, mFill),
+    eStyleAnimType_PaintServer)
 CSS_PROP_SVG(
     fill-opacity,
     fill_opacity,
     FillOpacity,
     0,
     SVG,
     mFillOpacity,
     eCSSType_Value,
@@ -2920,18 +2920,18 @@ CSS_PROP_SVG(
     stroke,
     stroke,
     Stroke,
     0,
     SVG,
     mStroke,
     eCSSType_ValuePair,
     nsnull,
-    CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    offsetof(nsStyleSVG, mStroke),
+    eStyleAnimType_PaintServer)
 CSS_PROP_SVG(
     stroke-dasharray,
     stroke_dasharray,
     StrokeDasharray,
     CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     SVG,
     mStrokeDasharray,
     eCSSType_ValueList,
diff --git a/layout/style/nsCSSProps.h b/layout/style/nsCSSProps.h
--- a/layout/style/nsCSSProps.h
+++ b/layout/style/nsCSSProps.h
@@ -80,16 +80,19 @@ enum nsStyleAnimType {
   eStyleAnimType_Sides_Left,
 
   // nscoord values
   eStyleAnimType_nscoord,
 
   // nscolor values
   eStyleAnimType_Color,
 
+  // nsStyleSVGPaint values
+  eStyleAnimType_PaintServer,
+
   // property not animatable
   eStyleAnimType_None
 };
 
 class nsCSSProps {
 public:
   static void AddRefTable(void);
   static void ReleaseTable(void);
diff --git a/layout/style/nsStyleAnimation.cpp b/layout/style/nsStyleAnimation.cpp
--- a/layout/style/nsStyleAnimation.cpp
+++ b/layout/style/nsStyleAnimation.cpp
@@ -409,16 +409,33 @@ nsStyleAnimation::ExtractComputedValue(n
     case eStyleAnimType_nscoord:
       aComputedValue.SetCoordValue( * static_cast<const nscoord*>(
         StyleDataAtOffset(styleStruct, ssOffset)));
       return PR_TRUE;
     case eStyleAnimType_Color:
       aComputedValue.SetColorValue( * static_cast<const nscolor*>(
         StyleDataAtOffset(styleStruct, ssOffset)));
       return PR_TRUE;
+    case eStyleAnimType_PaintServer: {
+      const nsStyleSVGPaint &paint =
+        * static_cast<const nsStyleSVGPaint*>(
+          StyleDataAtOffset(styleStruct, ssOffset));
+      switch (paint.mType) {
+        case eStyleSVGPaintType_None:
+          // XXX Should this be animatable?
+          aComputedValue.SetColorValue(NS_RGBA(0, 0, 0, 0));
+          return PR_TRUE;
+        case eStyleSVGPaintType_Color:
+          aComputedValue.SetColorValue(paint.mPaint.mColor);
+          return PR_TRUE;
+        case eStyleSVGPaintType_Server:
+          return PR_FALSE;
+      }
+      NS_NOTREACHED("missing case");
+    }
     case eStyleAnimType_None:
       NS_NOTREACHED("shouldn't use on non-animatable properties");
   }
   return PR_FALSE;
 }
 
 PRBool
 nsStyleAnimation::StoreComputedValue(nsCSSProperty aProperty,
@@ -475,13 +492,26 @@ nsStyleAnimation::StoreComputedValue(nsC
         }
       }
       return PR_TRUE;
     case eStyleAnimType_Color:
       * static_cast<nscolor*>(
         StyleDataAtOffset(aStyleStruct, ssOffset)) =
           aComputedValue.GetColorValue();
       return PR_TRUE;
+    case eStyleAnimType_PaintServer: {
+      nsStyleSVGPaint &paint =
+        * static_cast<nsStyleSVGPaint*>(
+          StyleDataAtOffset(aStyleStruct, ssOffset));
+      nscolor color = aComputedValue.GetColorValue();
+      if (color == NS_RGBA(0, 0, 0, 0)) {
+        paint.mType = eStyleSVGPaintType_None;
+      } else {
+        paint.mType = eStyleSVGPaintType_Color;
+        paint.mPaint.mColor = color;
+      }
+      return PR_TRUE;
+    }
     case eStyleAnimType_None:
       NS_NOTREACHED("shouldn't use on non-animatable properties");
   }
   return PR_FALSE;
 }

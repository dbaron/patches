Correctly null-terminate the buffer after calling readlink.  (Bug 476608)

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -1350,22 +1350,26 @@ XRE_GetBinaryPath(const char* argv0, nsI
   // 1) look for /proc/<pid>/exe which is a symlink to the executable on newer
   //    Linux kernels
   // 2) use realpath() on argv[0], which works unless we're loaded from the
   //    PATH
   // 3) manually walk through the PATH and look for ourself
   // 4) give up
 
 // #ifdef __linux__
+// Commented out because it used to not work because it used to not deal
+// with readlink not null-terminating the buffer.
 #if 0
   int r = readlink("/proc/self/exe", exePath, MAXPATHLEN);
 
-  // apparently, /proc/self/exe can sometimes return weird data... check it
-  if (r > 0 && r < MAXPATHLEN && stat(exePath, &fileStat) == 0) {
-    rv = NS_OK;
+  if (r > 0 && r < MAXPATHLEN) {
+    exePath[r] = '\0';
+    if (stat(exePath, &fileStat) == 0) {
+      rv = NS_OK;
+    }
   }
 
 #endif
   if (NS_FAILED(rv) &&
       realpath(argv0, exePath) && stat(exePath, &fileStat) == 0) {
     rv = NS_OK;
   }
 

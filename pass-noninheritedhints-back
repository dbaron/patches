From: L. David Baron <dbaron@dbaron.org>

Bug 828312, patch 2:  Give nsFrameManager::ReResolveStyleContext the ability to pass its nonInheritedHints variable back to its caller.

diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -1022,17 +1022,18 @@ nsFrameManager::ReResolveStyleContext(ns
                                       nsIContent        *aParentContent,
                                       nsStyleChangeList *aChangeList, 
                                       nsChangeHint       aMinChange,
                                       nsChangeHint       aParentFrameHintsNotHandledForDescendants,
                                       nsRestyleHint      aRestyleHint,
                                       RestyleTracker&    aRestyleTracker,
                                       DesiredA11yNotifications aDesiredA11yNotifications,
                                       nsTArray<nsIContent*>& aVisibleKidsOfHiddenElement,
-                                      TreeMatchContext &aTreeMatchContext)
+                                      TreeMatchContext &aTreeMatchContext,
+                                      nsChangeHint      *aHintsNotHandledForChildren)
 {
   // We need to generate a new change list entry for every frame whose style
   // comparision returns one of these hints. These hints don't automatically
   // update all their descendant frames.
   aMinChange = NS_SubtractHint(aMinChange, NS_HintsNotHandledForDescendantsIn(aMinChange));
 
   // It would be nice if we could make stronger assertions here; they
   // would let us simplify the ?: expressions below setting |content|
@@ -1353,16 +1354,20 @@ nsFrameManager::ReResolveStyleContext(ns
           }
         }
       }
       else {
         break;
       }
     }
 
+    if (aHintsNotHandledForChildren) {
+      *aHintsNotHandledForChildren = nonInheritedHints;
+    }
+
     // now look for undisplayed child content and pseudos
 
     // When the root element is display:none, we still construct *some*
     // frames that have the root element as their mContent, down to the
     // DocElementContainingBlock.
     bool checkUndisplayed;
     nsIContent *undisplayedParent;
     if (pseudoTag) {
diff --git a/layout/base/nsFrameManager.h b/layout/base/nsFrameManager.h
--- a/layout/base/nsFrameManager.h
+++ b/layout/base/nsFrameManager.h
@@ -185,12 +185,13 @@ private:
                           nsIContent        *aParentContent,
                           nsStyleChangeList *aChangeList, 
                           nsChangeHint       aMinChange,
                           nsChangeHint       aParentFrameHintsNotHandledForDescendants,
                           nsRestyleHint      aRestyleHint,
                           RestyleTracker&    aRestyleTracker,
                           DesiredA11yNotifications aDesiredA11yNotifications,
                           nsTArray<nsIContent*>& aVisibleKidsOfHiddenElement,
-                          TreeMatchContext &aTreeMatchContext);
+                          TreeMatchContext &aTreeMatchContext,
+                          nsChangeHint      *aHintsNotHandledForChildren = nullptr);
 };
 
 #endif

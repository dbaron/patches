Disable GetUsed* assertions during event handling.  b=366021,399352.  Patch by Jonas Sicking, modified by me.

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -79,6 +79,10 @@
 /**
  * A namespace class for static layout utilities.
  */
+
+#ifdef DEBUG
+PRBool sDisableGetUsedXAssertions = PR_FALSE;
+#endif
 
 /**
  * GetFirstChildFrame returns the first "real" child frame of a
diff --git a/layout/base/nsLayoutUtils.h b/layout/base/nsLayoutUtils.h
--- a/layout/base/nsLayoutUtils.h
+++ b/layout/base/nsLayoutUtils.h
@@ -749,4 +749,27 @@ public:
                                           const nsStyleFont* aStyleFont);
 };
 
+#ifdef DEBUG
+extern PRBool sDisableGetUsedXAssertions;
+#endif
+
+class nsAutoDisableGetUsedXAssertions
+{
+#ifdef DEBUG
+public:
+  nsAutoDisableGetUsedXAssertions()
+    : mOldValue(sDisableGetUsedXAssertions)
+  {
+    sDisableGetUsedXAssertions = PR_TRUE;
+  }
+  ~nsAutoDisableGetUsedXAssertions()
+  {
+    sDisableGetUsedXAssertions = mOldValue;
+  }
+
+private:
+  PRBool mOldValue;
+#endif  
+};
+
 #endif // nsLayoutUtils_h__
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -5528,7 +5528,12 @@ PresShell::HandleEvent(nsIView         *
 
     nsPoint eventPoint
         = nsLayoutUtils::GetEventCoordinatesRelativeTo(aEvent, frame);
-    nsIFrame* targetFrame = nsLayoutUtils::GetFrameForPoint(frame, eventPoint);
+    nsIFrame* targetFrame;
+    {
+      nsAutoDisableGetUsedXAssertions disableAssert;
+      targetFrame = nsLayoutUtils::GetFrameForPoint(frame, eventPoint);
+    }
+
     if (targetFrame) {
       PresShell* shell =
           static_cast<PresShell*>(targetFrame->PresContext()->PresShell());
diff --git a/layout/generic/nsFrame.cpp b/layout/generic/nsFrame.cpp
--- a/layout/generic/nsFrame.cpp
+++ b/layout/generic/nsFrame.cpp
@@ -532,9 +532,11 @@ NS_IMETHODIMP nsFrame::DidSetStyleContex
 /* virtual */ nsMargin
 nsIFrame::GetUsedMargin() const
 {
-  NS_ASSERTION(!NS_SUBTREE_DIRTY(this) ||
+  NS_ASSERTION(sDisableGetUsedXAssertions ||
+               !NS_SUBTREE_DIRTY(this) ||
                (GetStateBits() & NS_FRAME_IN_REFLOW),
-               "cannot call on a dirty frame not currently being reflowed");
+               "cannot call GetUsedMargin on a dirty frame not currently "
+               "being reflowed");
 
   nsMargin margin(0, 0, 0, 0);
   if (!GetStyleMargin()->GetMargin(margin)) {
@@ -551,9 +553,11 @@ nsIFrame::GetUsedMargin() const
 /* virtual */ nsMargin
 nsIFrame::GetUsedBorder() const
 {
-  NS_ASSERTION(!NS_SUBTREE_DIRTY(this) ||
+  NS_ASSERTION(sDisableGetUsedXAssertions ||
+               !NS_SUBTREE_DIRTY(this) ||
                (GetStateBits() & NS_FRAME_IN_REFLOW),
-               "cannot call on a dirty frame not currently being reflowed");
+               "cannot call GetUsedBorder on a dirty frame not currently "
+               "being reflowed");
 
   // Theme methods don't use const-ness.
   nsIFrame *mutable_this = const_cast<nsIFrame*>(this);
@@ -578,9 +582,11 @@ nsIFrame::GetUsedBorder() const
 /* virtual */ nsMargin
 nsIFrame::GetUsedPadding() const
 {
-  NS_ASSERTION(!NS_SUBTREE_DIRTY(this) ||
+  NS_ASSERTION(sDisableGetUsedXAssertions ||
+               !NS_SUBTREE_DIRTY(this) ||
                (GetStateBits() & NS_FRAME_IN_REFLOW),
-               "cannot call on a dirty frame not currently being reflowed");
+               "cannot call GetUsedPadding on a dirty frame not currently "
+               "being reflowed");
 
   nsMargin padding(0, 0, 0, 0);
 

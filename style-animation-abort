From: L. David Baron <dbaron@dbaron.org>

Bug 693496:  Fix ABORT by being consistent that canonical form calc() values need not have a percent part.

diff --git a/layout/style/nsStyleAnimation.cpp b/layout/style/nsStyleAnimation.cpp
--- a/layout/style/nsStyleAnimation.cpp
+++ b/layout/style/nsStyleAnimation.cpp
@@ -338,16 +338,32 @@ SetCalcValue(const nsStyleCoord::Calc* a
     arr->Item(0).SetArrayValue(arr2, eCSSUnit_Calc_Plus);
     nscoordToCSSValue(aCalc->mLength, arr2->Item(0));
     arr2->Item(1).SetPercentValue(aCalc->mPercent);
   }
 
   aValue.SetArrayValue(arr, eCSSUnit_Calc);
 }
 
+static void
+SetCalcValue(const CalcValue* aCalc, nsCSSValue& aValue)
+{
+  nsRefPtr<nsCSSValue::Array> arr = nsCSSValue::Array::Create(1);
+  if (!aCalc->mHasPercent) {
+    arr->Item(0)->SetFloatValue(aCalc->mLength, eCSSUnit_Pixel);
+  } else {
+    nsCSSValue::Array *arr2 = nsCSSValue::Array::Create(2);
+    arr->Item(0).SetArrayValue(arr2, eCSSUnit_Calc_Plus);
+    arr2->Item(0)->SetFloatValue(aCalc->mLength, eCSSUnit_Pixel);
+    arr2->Item(1).SetPercentValue(aCalc->mPercent);
+  }
+
+  aValue.SetArrayValue(arr, eCSSUnit_Calc);
+}
+
 static already_AddRefed<nsStringBuffer>
 GetURIAsUtf16StringBuffer(nsIURI* aUri)
 {
   nsAutoCString utf8String;
   nsresult rv = aUri->GetSpec(utf8String);
   NS_ENSURE_SUCCESS(rv, nullptr);
 
   return nsCSSValue::BufferFromString(NS_ConvertUTF8toUTF16(utf8String));
@@ -962,25 +978,21 @@ AddCSSValuePercent(double aCoeff1, const
 // canonical-form calc value.
 static void
 AddCSSValueCanonicalCalc(double aCoeff1, const nsCSSValue &aValue1,
                          double aCoeff2, const nsCSSValue &aValue2,
                          nsCSSValue &aResult)
 {
   CalcValue v1 = ExtractCalcValue(aValue1);
   CalcValue v2 = ExtractCalcValue(aValue2);
-  NS_ABORT_IF_FALSE(v1.mHasPercent || v2.mHasPercent,
-                    "only used on properties that always have percent in calc");
-  nsRefPtr<nsCSSValue::Array> a = nsCSSValue::Array::Create(2),
-                              acalc = nsCSSValue::Array::Create(1);
-  a->Item(0).SetFloatValue(aCoeff1 * v1.mLength + aCoeff2 * v2.mLength,
-                           eCSSUnit_Pixel);
-  a->Item(1).SetPercentValue(aCoeff1 * v1.mPercent + aCoeff2 * v2.mPercent);
-  acalc->Item(0).SetArrayValue(a, eCSSUnit_Calc_Plus);
-  aResult.SetArrayValue(acalc, eCSSUnit_Calc);
+  CalcValue result;
+  result.mLength = aCoeff1 * v1.mLength + aCoeff2 * v2.mLength;
+  result.mPercent = aCoeff1 * v1.mPercent + aCoeff2 * v2.mPercent;
+  result.mHasPercent = v1.mHasPercent || v2.mHasPercent;
+  SetCalcValue(result, aResult);
 }
 
 static void
 AddCSSValueAngle(const nsCSSValue &aValue1, double aCoeff1,
                  const nsCSSValue &aValue2, double aCoeff2,
                  nsCSSValue &aResult)
 {
   aResult.SetFloatValue(aCoeff1 * aValue1.GetAngleValueInRadians() +

From: L. David Baron <dbaron@dbaron.org>

Implement computation of font size inflation.  (Bug 627842)

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -4358,8 +4358,51 @@ NS_IMETHODIMP
 nsReflowFrameRunnable::Run()
 {
   if (mWeakFrame.IsAlive()) {
     mWeakFrame->PresContext()->PresShell()->
       FrameNeedsReflow(mWeakFrame, mIntrinsicDirty, mBitToAdd);
   }
   return NS_OK;
 }
+
+// NOTE: line heights should be inflated by the same ratio as the font
+// size of the same text; the aStyleFontSize parameter here should
+// always be a font size, and never a line height.
+static float
+FontSizeInflationFor(nscoord aContainerContentWidth, nscoord aStyleFontSize)
+{
+  // FIXME: Compute the minimum font size (with prefs, either size or
+  // ratio), and scale all font sizes less than N (pref, default
+  // 1.25-1.5) times the minimum.
+  return 1.0;
+}
+
+static inline bool
+IsContainerForFontSizeInflation(nsIFrame *aFrame)
+{
+  // For now, basically anything other than inline and text frames.
+  return !aFrame->IsFrameOfType(nsIFrame::eLineParticipant);
+}
+
+float
+nsLayoutUtils::FontSizeInflationFor(nsHTMLReflowState *aReflowState)
+{
+#ifdef DEBUG
+  // FIXME: Assert that the reflow state chain matches the frame chain,
+  // up to the point where the reflow state chain ends.
+#endif
+  return 1.0;
+}
+
+float
+nsLayoutUtils::FontSizeInflationFor(nsIFrame *aFrame)
+{
+#ifdef DEBUG
+  // FIXME: Walk up the frame tree and check that we're not
+  // NS_FRAME_IN_REFLOW on any ancestor frames.
+
+  // Is it ok if frames are dirty?  If they've never been reflowed?
+  // Presumably in that case we'll end up with a '0' width and thus do
+  // no inflation.
+#endif
+  return 1.0;
+}
diff --git a/layout/base/nsLayoutUtils.h b/layout/base/nsLayoutUtils.h
--- a/layout/base/nsLayoutUtils.h
+++ b/layout/base/nsLayoutUtils.h
@@ -1421,16 +1421,24 @@ public:
                                       PRBool aFollowContinuations,
                                       nsFontFaceList* aFontFaceList);
 
   /**
    * Checks if CSS 3D transforms are currently enabled.
    */
   static PRBool Are3DTransformsEnabled();
 
+  /**
+   * Return the font size inflation *ratio* for a given frame; pass a
+   * reflow state if the frame or any of its ancestors are currently
+   * being reflowed and a frame otherwise.
+   */
+  static float FontSizeInflationFor(nsHTMLReflowState *aReflowState);
+  static float FontSizeInflationFor(nsIFrame *aFrame);
+
   static void Shutdown();
 
 #ifdef DEBUG
   /**
    * Assert that there are no duplicate continuations of the same frame
    * within aFrameList.  Optimize the tests by assuming that all frames
    * in aFrameList have parent aContainer.
    */
diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -1056,16 +1056,18 @@ nsBlockFrame::Reflow(nsPresContext*     
   nsOverflowAreas fcBounds;
   nsReflowStatus fcStatus = NS_FRAME_COMPLETE;
   rv = ReflowPushedFloats(state, fcBounds, fcStatus);
   NS_ENSURE_SUCCESS(rv, rv);
 
   // If we're not dirty (which means we'll mark everything dirty later)
   // and our width has changed, mark the lines dirty that we need to
   // mark dirty for a resize reflow.
+  // FIXME: If font size inflation is disabled, we just need to mark
+  // everything dirty.
   if (reflowState->mFlags.mHResize)
     PrepareResizeReflow(state);
 
   mState &= ~NS_FRAME_FIRST_REFLOW;
 
   // Now reflow...
   rv = ReflowDirtyLines(state);
   NS_ASSERTION(NS_SUCCEEDED(rv), "reflow dirty lines failed");

From: L. David Baron <dbaron@dbaron.org>

Bug 1217833 - Remove exception for line frames from nsBidiPresUtils::ReorderFrames since line frames now lay out more like regular inlines.

diff --git a/layout/base/nsBidiPresUtils.cpp b/layout/base/nsBidiPresUtils.cpp
--- a/layout/base/nsBidiPresUtils.cpp
+++ b/layout/base/nsBidiPresUtils.cpp
@@ -1252,30 +1252,36 @@ nsBidiPresUtils::ResolveParagraphWithinB
 
 /* static */ nscoord
 nsBidiPresUtils::ReorderFrames(nsIFrame* aFirstFrameOnLine,
                                int32_t aNumFramesOnLine,
                                WritingMode aLineWM,
                                const nsSize& aContainerSize,
                                nscoord aStart)
 {
+  nsSize containerSize(aContainerSize);
+
   // If this line consists of a line frame, reorder the line frame's children.
   if (aFirstFrameOnLine->GetType() == nsGkAtoms::lineFrame) {
+    // The line frame is positioned at the start-edge, so use its size
+    // as the container size.
+    containerSize = aFirstFrameOnLine->GetSize();
+
     aFirstFrameOnLine = aFirstFrameOnLine->GetFirstPrincipalChild();
     if (!aFirstFrameOnLine) {
       return 0;
     }
     // All children of the line frame are on the first line. Setting aNumFramesOnLine
     // to -1 makes InitLogicalArrayFromLine look at all of them.
     aNumFramesOnLine = -1;
   }
 
   BidiLineData bld(aFirstFrameOnLine, aNumFramesOnLine);
   return RepositionInlineFrames(&bld, aFirstFrameOnLine, aLineWM,
-                                aContainerSize, aStart);
+                                containerSize, aStart);
 }
 
 nsIFrame*
 nsBidiPresUtils::GetFirstLeaf(nsIFrame* aFrame)
 {
   nsIFrame* firstLeaf = aFrame;
   while (!IsBidiLeaf(firstLeaf)) {
     nsIFrame* firstChild = firstLeaf->GetFirstPrincipalChild();
diff --git a/layout/reftests/bidi/1217833-1-ref.html b/layout/reftests/bidi/1217833-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bidi/1217833-1-ref.html
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta charset="utf-8" />
+<style>
+html, body { overflow:hidden }
+div{
+  background: yellow;
+  width:150px;
+  height:50px;
+  margin: 0 auto;
+  text-align:right;
+  color: blue;
+}
+</style>
+</head><body><div>test</div></body></html>
diff --git a/layout/reftests/bidi/1217833-1.html b/layout/reftests/bidi/1217833-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bidi/1217833-1.html
@@ -0,0 +1,18 @@
+<!DOCTYPE html>
+<html dir="rtl">
+<head>
+<meta charset="utf-8" />
+<style>
+html, body { overflow:hidden }
+div{
+  background: yellow;
+  width:150px;
+  height:50px;
+  margin: 0 auto;
+  text-align:right;
+}
+div:first-line {
+  color: blue;
+}
+</style>
+</head><body><div dir="rtl">test</div></body></html>
diff --git a/layout/reftests/bidi/1217833-2-ref.html b/layout/reftests/bidi/1217833-2-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bidi/1217833-2-ref.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta charset="utf-8" />
+<style>
+html, body { overflow:hidden }
+div{
+  background: yellow;
+  width:150px;
+  height:50px;
+  margin: 0 auto;
+  text-align:right;
+  color: blue;
+  direction: ltr; unicode-bidi: bidi-override;
+}
+span {
+  background: aqua;
+}
+</style>
+</head><body><div dir="rtl">הקי<span>דב</span>te<span>st</span></div></body></html>
diff --git a/layout/reftests/bidi/1217833-2.html b/layout/reftests/bidi/1217833-2.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bidi/1217833-2.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<html dir="rtl">
+<head>
+<meta charset="utf-8" />
+<style>
+html, body { overflow:hidden }
+div{
+  background: yellow;
+  width:150px;
+  height:50px;
+  margin: 0 auto;
+  text-align:right;
+}
+div:first-line {
+  color: blue;
+}
+span {
+  background: aqua;
+}
+</style>
+</head><body><div dir="rtl">te<span>stבד</span>יקה</div></body></html>
diff --git a/layout/reftests/bidi/reftest.list b/layout/reftests/bidi/reftest.list
--- a/layout/reftests/bidi/reftest.list
+++ b/layout/reftests/bidi/reftest.list
@@ -149,8 +149,10 @@ skip-if((B2G&&browserIsRemote)||Mulet) f
 == 922550-1.html 922550-1-ref.html
 == 1067268-1.html 1067268-1-ref.html
 == 1069941-inline-bidi-border-1.html 1069941-inline-bidi-border-1-ref.html
 == 1069941-inline-bidi-margin-1.html 1069941-inline-bidi-margin-1-ref.html
 skip-if(B2G||Mulet) != 1155359-1.xul 1155359-1-ref.xul
 == 1157726-1.html 1157726-1-ref.html
 == 1161752.html 1161752-ref.html
 == 1161752-5-embed.html 1161752-5-embed-ref.html
+== 1217833-1.html 1217833-1-ref.html
+== 1217833-2.html 1217833-2-ref.html

From: L. David Baron <dbaron@dbaron.org>

Add operator->* to nsAutoPtr and nsRefPtr.  (Bug 525205)  Pending review, but fixes bustage for a bunch of people.

diff --git a/xpcom/base/nsAutoPtr.h b/xpcom/base/nsAutoPtr.h
--- a/xpcom/base/nsAutoPtr.h
+++ b/xpcom/base/nsAutoPtr.h
@@ -179,16 +179,29 @@ class nsAutoPtr
 
       T*
       operator->() const
         {
           NS_PRECONDITION(mRawPtr != 0, "You can't dereference a NULL nsAutoPtr with operator->().");
           return get();
         }
 
+      // This operator is needed for gcc <= 4.0.* and for Sun Studio; it
+      // causes internal compiler errors for some MSVC versions.  (It's not
+      // clear to me whether it should be needed.)
+#ifndef _MSC_VER
+      template <class U, class V>
+      U&
+      operator->*(U V::* aMember)
+        {
+          NS_PRECONDITION(mRawPtr != 0, "You can't dereference a NULL nsAutoPtr with operator->*().");
+          return get()->*aMember;
+        }
+#endif
+
 #ifdef CANT_RESOLVE_CPP_CONST_AMBIGUITY
   // broken version for IRIX
 
       nsAutoPtr<T>*
       get_address() const
           // This is not intended to be used by clients.  See |address_of|
           // below.
         {
@@ -1080,16 +1093,29 @@ class nsRefPtr
 
       T*
       operator->() const
         {
           NS_PRECONDITION(mRawPtr != 0, "You can't dereference a NULL nsRefPtr with operator->().");
           return get();
         }
 
+      // This operator is needed for gcc <= 4.0.* and for Sun Studio; it
+      // causes internal compiler errors for some MSVC versions.  (It's not
+      // clear to me whether it should be needed.)
+#ifndef _MSC_VER
+      template <class U, class V>
+      U&
+      operator->*(U V::* aMember)
+        {
+          NS_PRECONDITION(mRawPtr != 0, "You can't dereference a NULL nsRefPtr with operator->*().");
+          return get()->*aMember;
+        }
+#endif
+
 #ifdef CANT_RESOLVE_CPP_CONST_AMBIGUITY
   // broken version for IRIX
 
       nsRefPtr<T>*
       get_address() const
           // This is not intended to be used by clients.  See |address_of|
           // below.
         {

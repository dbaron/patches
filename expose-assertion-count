Expose the number of assertions since process start from XPCOM.  (Bug 472557)

diff --git a/xpcom/base/Makefile.in b/xpcom/base/Makefile.in
--- a/xpcom/base/Makefile.in
+++ b/xpcom/base/Makefile.in
@@ -117,16 +117,17 @@ SDK_HEADERS     = \
 		nscore.h \
 		nsCycleCollector.h \
 		nsObjCExceptions.h \
 
 XPIDLSRCS	= \
 		nsIConsoleListener.idl \
 		nsIConsoleMessage.idl \
 		nsIConsoleService.idl \
+		nsIDebugInfoService.idl \
 		nsIErrorService.idl \
 		nsIException.idl \
 		nsIExceptionService.idl \
 		nsIVersionComparator.idl \
 		nsIUUIDGenerator.idl \
 		nsIMutable.idl \
 		nsIMemoryReporter.idl \
 		$(NULL)
diff --git a/xpcom/base/nsDebugImpl.cpp b/xpcom/base/nsDebugImpl.cpp
--- a/xpcom/base/nsDebugImpl.cpp
+++ b/xpcom/base/nsDebugImpl.cpp
@@ -43,16 +43,17 @@
 #include "prprf.h"
 #include "prlog.h"
 #include "prinit.h"
 #include "plstr.h"
 #include "nsError.h"
 #include "prerror.h"
 #include "prerr.h"
 #include "prenv.h"
+#include "pratom.h"
 
 #if defined(XP_BEOS)
 /* For DEBUGGER macros */
 #include <Debug.h>
 #endif
 
 #if defined(XP_UNIX) || defined(_WIN32) || defined(XP_OS2) || defined(XP_BEOS)
 /* for abort() and getenv() */
@@ -86,16 +87,18 @@ Break(const char *aMsg);
 #if defined(_WIN32)
 #include <windows.h>
 #include <signal.h>
 #include <malloc.h> // for _alloca
 #elif defined(XP_UNIX)
 #include <stdlib.h>
 #endif
 
+static PRInt32 gAssertionCount = 0;
+
 NS_IMPL_QUERY_INTERFACE1(nsDebugImpl, nsIDebug)
 
 NS_IMETHODIMP_(nsrefcnt)
 nsDebugImpl::AddRef()
 {
   return 2;
 }
 
@@ -297,16 +300,17 @@ NS_DebugBreak(PRUint32 aSeverity, const 
 
    case NS_DEBUG_ABORT:
      nsTraceRefcntImpl::WalkTheStack(stderr);
      Abort(buf.buffer);
      return;
    }
 
    // Now we deal with assertions
+   PR_AtomicIncrement(&gAssertionCount);
 
    switch (GetAssertBehavior()) {
    case NS_ASSERT_WARN:
      return;
 
    case NS_ASSERT_SUSPEND:
 #ifdef XP_UNIX
       fprintf(stderr, "Suspending process; attach with the debugger.\n");
@@ -491,8 +495,16 @@ NS_ErrorAccordingToNSPR()
       case PR_DIRECTORY_NOT_EMPTY_ERROR:        return NS_ERROR_FILE_DIR_NOT_EMPTY;
       case PR_NO_ACCESS_RIGHTS_ERROR:           return NS_ERROR_FILE_ACCESS_DENIED;
       default:                                  return NS_ERROR_FAILURE;
     }
 }
 
 ////////////////////////////////////////////////////////////////////////////////
 
+NS_IMPL_ISUPPORTS1(nsDebugInfoService, nsIDebugInfoService)
+
+NS_IMETHODIMP
+nsDebugInfoService::GetAssertionCount(PRInt32* aResult)
+{
+  *aResult = gAssertionCount;
+  return NS_OK;
+}
diff --git a/xpcom/base/nsDebugImpl.h b/xpcom/base/nsDebugImpl.h
--- a/xpcom/base/nsDebugImpl.h
+++ b/xpcom/base/nsDebugImpl.h
@@ -30,16 +30,17 @@
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsIDebug.h"
+#include "nsIDebugInfoService.h"
 
 class nsDebugImpl : public nsIDebug
 {
 public:
     NS_DECL_ISUPPORTS
     NS_DECL_NSIDEBUG
     
     static NS_METHOD Create(nsISupports* outer, const nsIID& aIID, void* *aInstancePtr);
@@ -50,8 +51,24 @@ public:
 #define NS_DEBUG_CLASSNAME  "nsDebug Interface"
 #define NS_DEBUG_CID                                 \
 { /* a80b1fb3-aaf6-4852-b678-c27eb7a518af */         \
   0xa80b1fb3,                                        \
     0xaaf6,                                          \
     0x4852,                                          \
     {0xb6, 0x78, 0xc2, 0x7e, 0xb7, 0xa5, 0x18, 0xaf} \
 }            
+
+class nsDebugInfoService : public nsIDebugInfoService
+{
+public:
+    NS_DECL_ISUPPORTS
+    NS_DECL_NSIDEBUGINFOSERVICE
+}
+
+#define NS_DEBUGINFOSERVICE_CONTRACTID "@mozilla.org/xpcom/debuginfoservice;1"
+#define NS_DEBUGINFOSERVICE_CLASSNAME  "nsDebugInfoService"
+#define NS_DEBUGINFOSERVICE_CID                      \
+{ /* 08f964e0-aa2f-4626-adb2-1878c86896d3 */         \
+  0x08f964e0, 0xaa2f, 0x4626,                        \
+    {0xad, 0xb2, 0x18, 0x78, 0xc8, 0x68, 0x96, 0xd3} \
+}
+
diff --git a/xpcom/base/nsIDebugInfoService.idl b/xpcom/base/nsIDebugInfoService.idl
new file mode 100644
--- /dev/null
+++ b/xpcom/base/nsIDebugInfoService.idl
@@ -0,0 +1,49 @@
+/* vim: set shiftwidth=4 tabstop=8 autoindent cindent expandtab: */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is nsIDebugInfoService.
+ *
+ * The Initial Developer of the Original Code is the Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2008
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   L. David Baron <dbaron@dbaron.org>, Mozilla Corporation (original author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+/* interface to expose information about calls to NS_DebugBreak */
+
+#include "nsISupports.idl"
+
+[scriptable, uuid(15c0b474-fedb-4789-878b-def834b84735)]
+interface nsIDebugInfoService : nsISupports
+{
+    /**
+     * The number of assertions since process start.
+     */
+    readonly attribute long assertionCount;
+};
diff --git a/xpcom/build/nsXPComInit.cpp b/xpcom/build/nsXPComInit.cpp
--- a/xpcom/build/nsXPComInit.cpp
+++ b/xpcom/build/nsXPComInit.cpp
@@ -152,16 +152,17 @@ extern nsresult NS_CategoryManagerGetFac
 extern void _FreeAutoLockStatics();
 #endif
 
 static NS_DEFINE_CID(kComponentManagerCID, NS_COMPONENTMANAGER_CID);
 static NS_DEFINE_CID(kMemoryCID, NS_MEMORY_CID);
 static NS_DEFINE_CID(kINIParserFactoryCID, NS_INIPARSERFACTORY_CID);
 static NS_DEFINE_CID(kSimpleUnicharStreamFactoryCID, NS_SIMPLE_UNICHAR_STREAM_FACTORY_CID);
 
+NS_GENERIC_FACTORY_CONSTRUCTOR(nsDebugInfoService)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsProcess)
 
 #define NS_ENVIRONMENT_CLASSNAME "Environment Service"
 
 #include "nsXPCOM.h"
 // ds/nsISupportsPrimitives
 #define NS_SUPPORTS_ID_CLASSNAME "Supports ID"
 #define NS_SUPPORTS_CSTRING_CLASSNAME "Supports String"
@@ -378,16 +379,17 @@ PRBool gXPCOMShuttingDown = PR_FALSE;
 #define COMPONENT_CI_FLAGS(NAME, Ctor, Class, Flags)                           \
  { NS_##NAME##_CLASSNAME, NS_##NAME##_CID, NS_##NAME##_CONTRACTID, Ctor,       \
    NULL, NULL, NULL, NS_CI_INTERFACE_GETTER_NAME(Class), NULL,                 \
    &NS_CLASSINFO_NAME(Class), Flags }
 
 static const nsModuleComponentInfo components[] = {
     COMPONENT(MEMORY, nsMemoryImpl::Create),
     COMPONENT(DEBUG,  nsDebugImpl::Create),
+    COMPONENT(DEBUGINFOSERVICE,  nsDebugInfoServiceConstructor),
 #define NS_ERRORSERVICE_CLASSNAME NS_ERRORSERVICE_NAME
     COMPONENT(ERRORSERVICE, nsErrorService::Create),
 
     COMPONENT(BYTEBUFFER, ByteBufferImpl::Create),
     COMPONENT(SCRIPTABLEINPUTSTREAM, nsScriptableInputStream::Create),
     COMPONENT(BINARYINPUTSTREAM, nsBinaryInputStreamConstructor),
     COMPONENT(BINARYOUTPUTSTREAM, nsBinaryOutputStreamConstructor),
     COMPONENT(STORAGESTREAM, nsStorageStreamConstructor),

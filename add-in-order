From: L. David Baron <dbaron@dbaron.org>

Bug 847287 patch N - Add animations/transitions to layer in order that reflects overriding.

diff --git a/layout/base/nsDisplayList.cpp b/layout/base/nsDisplayList.cpp
--- a/layout/base/nsDisplayList.cpp
+++ b/layout/base/nsDisplayList.cpp
@@ -404,17 +404,18 @@ AddAnimationForProperty(nsIFrame* aFrame
 }
 
 static void
 AddAnimationsForProperty(nsIFrame* aFrame, nsCSSProperty aProperty,
                          AnimationPlayerPtrArray& aPlayers,
                          Layer* aLayer, AnimationData& aData,
                          bool aPending)
 {
-  for (size_t playerIdx = 0; playerIdx < aPlayers.Length(); playerIdx++) {
+  // Add from last (the one that overrides) to first
+  for (size_t playerIdx = aPlayers.Length(); playerIdx-- != 0; ) {
     AnimationPlayer* player = aPlayers[playerIdx];
     if (!player->IsRunning()) {
       continue;
     }
     dom::Animation* anim = player->GetSource();
     if (!anim) {
       continue;
     }
@@ -549,25 +550,27 @@ nsDisplayListBuilder::AddAnimationsAndTr
 
     data = TransformData(origin, offsetToTransformOrigin,
                          offsetToPerspectiveOrigin, bounds, perspective,
                          aFrame->PresContext()->AppUnitsPerDevPixel());
   } else if (aProperty == eCSSProperty_opacity) {
     data = null_t();
   }
 
+  // When both are running, animations override transitions.  We want
+  // to add the ones that override first.
+  if (animations) {
+    AddAnimationsForProperty(aFrame, aProperty, animations->mPlayers,
+                             aLayer, data, pending);
+  }
+
   if (transitions) {
     AddAnimationsForProperty(aFrame, aProperty, transitions->mPlayers,
                              aLayer, data, pending);
   }
-
-  if (animations) {
-    AddAnimationsForProperty(aFrame, aProperty, animations->mPlayers,
-                             aLayer, data, pending);
-  }
 }
 
 nsDisplayListBuilder::nsDisplayListBuilder(nsIFrame* aReferenceFrame,
     Mode aMode, bool aBuildCaret)
     : mReferenceFrame(aReferenceFrame),
       mIgnoreScrollFrame(nullptr),
       mLayerEventRegions(nullptr),
       mCurrentTableItem(nullptr),

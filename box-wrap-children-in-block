Make boxes that have non-box non-block children wrap all their children in a block.  b=321402

diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -9228,6 +9228,24 @@ nsCSSFrameConstructor::ReinsertContent(n
   return res;
 }
 
+nsresult
+nsCSSFrameConstructor::StartReconstructAllChildren(nsIFrame* aFrame)
+{
+  // XXX WRITE ME
+  // CaptureStateFor
+  // DeletingFrameSubtree
+  // guts of ContentRemoved
+  return NS_OK;
+}
+
+nsresult
+nsCSSFrameConstructor::FinishReconstructAllChildren(nsIFrame* aFrame)
+{
+  // XXX WRITE ME
+  // ProcessChildren (with the frame tree state passed to ContentInserted)
+  return NS_OK;
+}
+
 /**
  * Called when a frame subtree is about to be deleted. Two important
  * things happen:
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -159,6 +159,15 @@ public:
   // itself.
   nsresult ProcessRestyledFrames(nsStyleChangeList& aRestyleArray);
 
+  /**
+   * StartReconstructAllChildren and FinishReconstructAllChildren must
+   * be called as a pair; the first destroys all the child frames and
+   * the second recreates them.  In between, the caller can do things
+   * like change (and construct/destroy) the content insertion frame.
+   */
+  nsresult StartReconstructAllChildren(nsIFrame* aFrame);
+  nsresult FinishReconstructAllChildren(nsIFrame* aFrame);
+
 private:
   // Note: It's the caller's responsibility to make sure to wrap a
   // ProcessOneRestyle call in a view update batch.
diff --git a/layout/xul/base/src/nsBoxFrame.cpp b/layout/xul/base/src/nsBoxFrame.cpp
--- a/layout/xul/base/src/nsBoxFrame.cpp
+++ b/layout/xul/base/src/nsBoxFrame.cpp
@@ -1029,8 +1029,12 @@ nsBoxFrame::InsertFrames(nsIAtom*       
    NS_PRECONDITION(!aListName, "We don't support out-of-flow kids");
    nsBoxLayoutState state(PresContext());
 
+   // XXX CHECK THE FRAMES FOR THINGS THAT REQUIRE BLOCK-WRAPPING
+
    // insert the child frames
    mFrames.InsertFrames(this, aPrevFrame, aFrameList);
+
+   // XXX IF BLOCK_WRAPPING NEEDED, DO IT HERE
 
    // notify the layout manager
    if (mLayoutManager)
@@ -1056,8 +1060,12 @@ nsBoxFrame::AppendFrames(nsIAtom*       
    NS_PRECONDITION(!aListName, "We don't support out-of-flow kids");
    nsBoxLayoutState state(PresContext());
 
+   // XXX CHECK THE FRAMES FOR THINGS THAT REQUIRE BLOCK-WRAPPING
+
    // append the new frames
    mFrames.AppendFrames(this, aFrameList);
+
+   // XXX IF BLOCK_WRAPPING NEEDED, DO IT HERE
 
    // notify the layout manager
    if (mLayoutManager)
diff --git a/layout/xul/base/src/nsBoxFrame.h b/layout/xul/base/src/nsBoxFrame.h
--- a/layout/xul/base/src/nsBoxFrame.h
+++ b/layout/xul/base/src/nsBoxFrame.h
@@ -55,12 +55,12 @@ class nsBoxLayoutState;
 #define NS_STATE_STACK_NOT_POSITIONED    0x00200000
 //#define NS_STATE_IS_HORIZONTAL           0x00400000  moved to nsIFrame.h
 #define NS_STATE_AUTO_STRETCH            0x00800000
-//#define NS_STATE_IS_ROOT                 0x01000000  moved to nsIFrame.h
+//#define NS_STATE_IS_ROOT                 0x01000000  moved to nsBox.h
 #define NS_STATE_CURRENTLY_IN_DEBUG      0x02000000
-//#define NS_STATE_SET_TO_DEBUG            0x04000000  moved to nsIFrame.h
-//#define NS_STATE_DEBUG_WAS_SET           0x08000000  moved to nsIFrame.h
+//#define NS_STATE_SET_TO_DEBUG            0x04000000  moved to nsBox.h
+//#define NS_STATE_DEBUG_WAS_SET           0x08000000  moved to nsBox.h
 #define NS_STATE_IS_COLLAPSED            0x10000000
-//#define NS_STATE_STYLE_CHANGE            0x20000000  moved to nsIFrame.h
+#define NS_STATE_BOX_WRAPS_KIDS_IN_BLOCK 0x20000000
 #define NS_STATE_EQUAL_SIZE              0x40000000
 //#define NS_STATE_IS_DIRECTION_NORMAL     0x80000000  moved to nsIFrame.h
 
@@ -133,6 +133,9 @@ public:
 
   NS_IMETHOD  RemoveFrame(nsIAtom*        aListName,
                           nsIFrame*       aOldFrame);
+
+  // FIXME: Implement GetContentInsertionFrame to check
+  // NS_STATE_BOX_WRAPS_KIDS_IN_BLOCK
 
   NS_IMETHOD  SetInitialChildList(nsIAtom*        aListName,
                                   nsIFrame*       aChildList);

From: L. David Baron <dbaron@dbaron.org>

Make leaksoup not print static ctor/dtor warnings.

diff --git a/tools/trace-malloc/leaksoup.cpp b/tools/trace-malloc/leaksoup.cpp
--- a/tools/trace-malloc/leaksoup.cpp
+++ b/tools/trace-malloc/leaksoup.cpp
@@ -37,16 +37,17 @@
 
 #include "adreader.h"
 
 #include <stdio.h>
 #include "plhash.h"
 
 #include "nsVoidArray.h"
 #include "nsQuickSort.h"
+#include "nsXPCOM.h"
 
 /*
  * Read in an allocation dump, presumably one taken at shutdown (using
  * the --shutdown-leaks=file option, which must be used along with
  * --trace-malloc=tmlog), and treat the memory in the dump as leaks.
  * Find the leak roots, including cycles that are roots, by finding the
  * strongly connected components in the graph.  Print output to stdout
  * as HTML.
@@ -127,16 +128,18 @@ int main(int argc, char **argv)
     if (argc != 2) {
         fprintf(stderr,
                 "Expected usage:  %s <sd-leak-file>\n"
                 "  sd-leak-file: Output of --shutdown-leaks=<file> option.\n",
                 argv[0]);
         return 1;
     }
 
+    NS_InitXPCOM2(NULL, NULL, NULL);
+
     ADLog log;
     if (!log.Read(argv[1])) {
         fprintf(stderr,
                 "%s: Error reading input file %s.\n", argv[0], argv[1]);
     }
 
     const size_t count = log.count();
 
@@ -429,10 +432,12 @@ int main(int argc, char **argv)
         }
         printf("</body>\n"
                "</html>\n");
     }
 
     delete [] sorted_nodes;
     delete [] nodes;
 
+    NS_ShutdownXPCOM(NULL);
+
     return 0;
 }

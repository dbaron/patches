From: L. David Baron <dbaron@dbaron.org>

Now that JSTracer's debug members are no longer conditional, remove the DEBUG-guarding of the good JS property names for cycle collector tracing.  (It's still guarded by WantDebugInfo.)

diff --git a/js/src/xpconnect/src/nsXPConnect.cpp b/js/src/xpconnect/src/nsXPConnect.cpp
--- a/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/js/src/xpconnect/src/nsXPConnect.cpp
@@ -620,17 +620,16 @@ NoteJSChild(JSTracer *trc, void *thing, 
     {
         TraversalTracer *tracer = static_cast<TraversalTracer*>(trc);
 
         // There's no point in further traversing a non-gray object here unless
         // we explicitly want to see all traces.
         if(!xpc_IsGrayGCThing(thing) && !tracer->cb.WantAllTraces())
             return;
 
-#if defined(DEBUG)
         if (NS_UNLIKELY(tracer->cb.WantDebugInfo())) {
             // based on DumpNotify in jsapi.c
             if (tracer->debugPrinter) {
                 char buffer[200];
                 tracer->debugPrinter(trc, buffer, sizeof(buffer));
                 tracer->cb.NoteNextEdgeName(buffer);
             } else if (tracer->debugPrintIndex != (size_t)-1) {
                 char buffer[200];
@@ -638,17 +637,17 @@ NoteJSChild(JSTracer *trc, void *thing, 
                             static_cast<const char *>(tracer->debugPrintArg),
                             tracer->debugPrintIndex);
                 tracer->cb.NoteNextEdgeName(buffer);
             } else {
                 tracer->cb.NoteNextEdgeName(
                   static_cast<const char*>(tracer->debugPrintArg));
             }
         }
-#endif
+
         tracer->cb.NoteScriptChild(nsIProgrammingLanguage::JAVASCRIPT, thing);
     }
     else if(kind != JSTRACE_STRING)
     {
         JS_TraceChildren(trc, thing, kind);
     }
 }
 

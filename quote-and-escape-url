Quote and escape contents of url() when serializing.  (Bug 478160)

diff --git a/layout/style/nsCSSDeclaration.cpp b/layout/style/nsCSSDeclaration.cpp
--- a/layout/style/nsCSSDeclaration.cpp
+++ b/layout/style/nsCSSDeclaration.cpp
@@ -392,19 +392,20 @@ nsCSSDeclaration::AppendCSSValueToString
         tmpStr.AppendFloat(nsStyleUtil::ColorComponentToFloat(a));
       }
       tmpStr.Append(PRUnichar(')'));
 
       aResult.Append(tmpStr);
     }
   }
   else if (eCSSUnit_URL == unit || eCSSUnit_Image == unit) {
-    aResult.Append(NS_LITERAL_STRING("url(") +
-                   nsDependentString(aValue.GetOriginalURLValue()) +
-                   NS_LITERAL_STRING(")"));
+    aResult.Append(NS_LITERAL_STRING("url(\""));
+    nsStyleUtil::AppendEscapedCSSString(
+      nsDependentString(aValue.GetOriginalURLValue()), aResult);
+    aResult.Append(NS_LITERAL_STRING("\")"));
   }
   else if (eCSSUnit_Percent == unit) {
     nsAutoString tmpStr;
     tmpStr.AppendFloat(aValue.GetPercentValue() * 100.0f);
     aResult.Append(tmpStr);
   }
   else if (eCSSUnit_Percent < unit) {  // length unit
     nsAutoString tmpStr;
diff --git a/layout/style/nsCSSRules.cpp b/layout/style/nsCSSRules.cpp
--- a/layout/style/nsCSSRules.cpp
+++ b/layout/style/nsCSSRules.cpp
@@ -565,19 +565,19 @@ CSSImportRuleImpl::GetType(PRUint16* aTy
   NS_ENSURE_ARG_POINTER(aType);
   *aType = nsIDOMCSSRule::IMPORT_RULE;
   return NS_OK;
 }
 
 NS_IMETHODIMP
 CSSImportRuleImpl::GetCssText(nsAString& aCssText)
 {
-  aCssText.AssignLiteral("@import url(");
-  aCssText.Append(mURLSpec);
-  aCssText.Append(NS_LITERAL_STRING(")"));
+  aCssText.AssignLiteral("@import url(\"");
+  nsStyleUtil::AppendEscapedCSSString(mURLSpec, aCssText);
+  aCssText.Append(NS_LITERAL_STRING("\")"));
   if (mMedia) {
     nsAutoString mediaText;
     mMedia->GetText(mediaText);
     if (!mediaText.IsEmpty()) {
       aCssText.AppendLiteral(" ");
       aCssText.Append(mediaText);
     }
   }
@@ -1111,19 +1111,17 @@ nsCSSDocumentRule::List(FILE* out, PRInt
         break;
       case eURLPrefix:
         str.AppendLiteral("url-prefix(\"");
         break;
       case eDomain:
         str.AppendLiteral("domain(\"");
         break;
     }
-    nsCAutoString escapedURL(url->url);
-    escapedURL.ReplaceSubstring("\"", "\\\""); // escape quotes
-    str.Append(escapedURL);
+    nsStyleUtil::AppendEscapedCSSString(NS_ConvertUTF8toUTF16(url->url), str);
     str.AppendLiteral("\"), ");
   }
   str.Cut(str.Length() - 2, 1); // remove last ,
   fputs(str.get(), out);
 
   return nsCSSGroupRule::List(out, aIndent);
 }
 #endif
@@ -1166,19 +1164,17 @@ nsCSSDocumentRule::GetCssText(nsAString&
         break;
       case eURLPrefix:
         aCssText.AppendLiteral("url-prefix(\"");
         break;
       case eDomain:
         aCssText.AppendLiteral("domain(\"");
         break;
     }
-    nsCAutoString escapedURL(url->url);
-    escapedURL.ReplaceSubstring("\"", "\\\""); // escape quotes
-    AppendUTF8toUTF16(escapedURL, aCssText);
+    nsStyleUtil::AppendEscapedCSSString(NS_ConvertUTF8toUTF16(url->url), str);
     aCssText.AppendLiteral("\"), ");
   }
   aCssText.Cut(aCssText.Length() - 2, 1); // remove last ,
 
   return nsCSSGroupRule::AppendRulesToCssText(aCssText);
 }
 
 NS_IMETHODIMP
@@ -1441,19 +1437,19 @@ CSSNameSpaceRuleImpl::GetCssText(nsAStri
 {
   aCssText.AssignLiteral("@namespace ");
   if (mPrefix) {
     nsString atomStr;
     mPrefix->ToString(atomStr);
     aCssText.Append(atomStr);
     aCssText.AppendLiteral(" ");
   }
-  aCssText.AppendLiteral("url(");
-  aCssText.Append(mURLSpec);
-  aCssText.Append(NS_LITERAL_STRING(");"));
+  aCssText.AppendLiteral("url(\"");
+  nsStyleUtil::AppendEscapedCSSString(mURLSpec, aCssText);
+  aCssText.Append(NS_LITERAL_STRING("\");"));
   return NS_OK;
 }
 
 NS_IMETHODIMP
 CSSNameSpaceRuleImpl::SetCssText(const nsAString& aCssText)
 {
   return NS_ERROR_NOT_IMPLEMENTED;
 }
diff --git a/layout/style/nsROCSSPrimitiveValue.cpp b/layout/style/nsROCSSPrimitiveValue.cpp
--- a/layout/style/nsROCSSPrimitiveValue.cpp
+++ b/layout/style/nsROCSSPrimitiveValue.cpp
@@ -61,16 +61,18 @@ nsROCSSPrimitiveValue::~nsROCSSPrimitive
 
 void
 nsROCSSPrimitiveValue::GetEscapedURI(nsIURI *aURI, PRUnichar **aReturn)
 {
   nsCAutoString specUTF8;
   aURI->GetSpec(specUTF8);
   NS_ConvertUTF8toUTF16 spec(specUTF8);
 
+  // XXX Should this reuse nsStyleUtil::AppendEscapedCSSString?
+
   PRUint16 length = spec.Length();
   PRUnichar *escaped = (PRUnichar *)nsMemory::Alloc(length * 2 * sizeof(PRUnichar) + sizeof(PRUnichar('\0')));
 
   if (escaped) {
     PRUnichar *ptr = escaped;
 
     for (PRUint16 i = 0; i < length; ++i) {
       switch (spec[i]) {

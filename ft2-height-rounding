From: L. David Baron <dbaron@dbaron.org>

Compute maxDescent from height and ascender instead of from descender to avoid accumulation of rounding up.  (Bug 604836)

diff --git a/gfx/thebes/gfxFT2Utils.cpp b/gfx/thebes/gfxFT2Utils.cpp
--- a/gfx/thebes/gfxFT2Utils.cpp
+++ b/gfx/thebes/gfxFT2Utils.cpp
@@ -131,34 +131,46 @@ gfxFT2LockedFace::GetMetrics(gfxFont::Me
         gfxFloat emUnit = mFace->units_per_EM;
         emHeight = ftMetrics.y_ppem;
         yScale = emHeight / emUnit;
     }
 
     TT_OS2 *os2 =
         static_cast<TT_OS2*>(FT_Get_Sfnt_Table(mFace, ft_sfnt_os2));
 
-    aMetrics->maxAscent = FLOAT_FROM_26_6(ftMetrics.ascender);
+    // freetype rounds the ascender, descender, and height
+    // independently, so that ascender + descender can sometimes be
+    // greater than height.  We want the height to be correct, so we'll
+    // throw away its ascender value.  (descender may be more important
+    // because of underline positioning.)
     aMetrics->maxDescent = -FLOAT_FROM_26_6(ftMetrics.descender);
+    aMetrics->maxAscent = FLOAT_FROM_26_6(ftMetrics.height) -
+                          aMetrics->maxDescent;
     aMetrics->maxAdvance = FLOAT_FROM_26_6(ftMetrics.max_advance);
 
     gfxFloat lineHeight;
     if (os2 && os2->sTypoAscender) {
         aMetrics->emAscent = os2->sTypoAscender * yScale;
         aMetrics->emDescent = -os2->sTypoDescender * yScale;
         FT_Short typoHeight =
             os2->sTypoAscender - os2->sTypoDescender + os2->sTypoLineGap;
         lineHeight = typoHeight * yScale;
 
         // maxAscent/maxDescent get used for frame heights, and some fonts
         // don't have the HHEA table ascent/descent set (bug 279032).
-        if (aMetrics->emAscent > aMetrics->maxAscent)
-            aMetrics->maxAscent = aMetrics->emAscent;
-        if (aMetrics->emDescent > aMetrics->maxDescent)
-            aMetrics->maxDescent = aMetrics->emDescent;
+        // However, because we might have rebalanced the rounding
+        // between ascender and descender in order to preserve height,
+        // only do this if it would actually increase height.
+        if (NS_round(aMetrics->emAscent + aMetrics->emDescent) >
+            NS_round(aMetrics->maxAscent + aMetrics->maxDescent)) {
+            if (aMetrics->emAscent > aMetrics->maxAscent)
+                aMetrics->maxAscent = aMetrics->emAscent;
+            if (aMetrics->emDescent > aMetrics->maxDescent)
+                aMetrics->maxDescent = aMetrics->emDescent;
+        }
     } else {
         aMetrics->emAscent = aMetrics->maxAscent;
         aMetrics->emDescent = aMetrics->maxDescent;
         lineHeight = FLOAT_FROM_26_6(ftMetrics.height);
     }
 
     cairo_text_extents_t extents;
     *aSpaceGlyph = GetCharExtents(' ', &extents);

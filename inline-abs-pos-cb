From: L. David Baron <dbaron@dbaron.org>

Bug 1479859 - Make inline frames be abs-pos containing blocks for reasons other than being relatively positioned.

The basic change here is making nsCSSFrameConstructor::ConstructInline
use the function nsIFrame::IsAbsPosContainingBlock rather than testing
for only one of the conditions in it (being relatively or absolutely
positioned).  The rest of the code changes follow from that change.

I tested locally that the added test fails without the patch and passes
with it (either with or without the next patch).

diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -6182,19 +6182,19 @@ nsCSSFrameConstructor::AppendFramesToPar
     FindFirstBlock(firstBlockEnumerator);
 
     nsFrameList inlineKids = aFrameList.ExtractHead(firstBlockEnumerator);
     if (!inlineKids.IsEmpty()) {
       AppendFrames(aParentFrame, kPrincipalList, inlineKids);
     }
 
     if (!aFrameList.IsEmpty()) {
-      bool positioned = aParentFrame->IsRelativelyPositioned();
       nsFrameItems ibSiblings;
-      CreateIBSiblings(aState, aParentFrame, positioned, aFrameList,
+      CreateIBSiblings(aState, aParentFrame,
+                       aParentFrame->IsAbsPosContainingBlock(), aFrameList,
                        ibSiblings);
 
       // Make sure to trigger reflow of the inline that used to be our
       // last one and now isn't anymore, since its GetSkipSides() has
       // changed.
       mPresShell->FrameNeedsReflow(aParentFrame,
                                    nsIPresShell::eTreeChange,
                                    NS_FRAME_HAS_DIRTY_CHILDREN);
@@ -11060,32 +11060,28 @@ nsCSSFrameConstructor::ConstructInline(n
   //   Block (div)
   //     Text("e")
   // Inline (outer span)
   //   Text("f")
 
   nsIContent* const content = aItem.mContent;
   ComputedStyle* const computedStyle = aItem.mComputedStyle;
 
-  bool positioned =
-    StyleDisplay::Inline == aDisplay->mDisplay &&
-    aDisplay->IsRelativelyPositionedStyle() &&
-    !nsSVGUtils::IsInSVGTextSubtree(aParentFrame);
-
   nsInlineFrame* newFrame = NS_NewInlineFrame(mPresShell, computedStyle);
 
   // Initialize the frame
   InitAndRestoreFrame(aState, content, aParentFrame, newFrame);
 
   nsFrameConstructorSaveState absoluteSaveState;  // definition cannot be inside next block
                                                   // because the object's destructor is significant
                                                   // this is part of the fix for bug 42372
 
+  bool isAbsPosCB = newFrame->IsAbsPosContainingBlock();
   newFrame->AddStateBits(NS_FRAME_CAN_HAVE_ABSPOS_CHILDREN);
-  if (positioned) {
+  if (isAbsPosCB) {
     // Relatively positioned frames becomes a container for child
     // frames that are positioned
     aState.PushAbsoluteContainingBlock(newFrame, newFrame, absoluteSaveState);
   }
 
   // Process the child content
   nsFrameItems childItems;
   ConstructFramesFromItemList(aState, aItem.mChildItems, newFrame,
@@ -11114,25 +11110,25 @@ nsCSSFrameConstructor::ConstructInline(n
 
   // Grab the first inline's kids
   nsFrameList firstInlineKids = childItems.ExtractHead(firstBlockEnumerator);
   newFrame->SetInitialChildList(kPrincipalList, firstInlineKids);
 
   aFrameItems.AddChild(newFrame);
 
   newFrame->AddStateBits(NS_FRAME_OWNS_ANON_BOXES);
-  CreateIBSiblings(aState, newFrame, positioned, childItems, aFrameItems);
+  CreateIBSiblings(aState, newFrame, isAbsPosCB, childItems, aFrameItems);
 
   return newFrame;
 }
 
 void
 nsCSSFrameConstructor::CreateIBSiblings(nsFrameConstructorState& aState,
                                         nsContainerFrame* aInitialInline,
-                                        bool aIsPositioned,
+                                        bool aIsAbsPosCB,
                                         nsFrameItems& aChildItems,
                                         nsFrameItems& aSiblings)
 {
   nsIContent* content = aInitialInline->GetContent();
   ComputedStyle* computedStyle = aInitialInline->Style();
   nsContainerFrame* parentFrame = aInitialInline->GetParent();
 
   // Resolve the right style for our anonymous blocks.
@@ -11173,17 +11169,17 @@ nsCSSFrameConstructor::CreateIBSiblings(
     SetFrameIsIBSplit(lastNewInline, blockFrame);
     aSiblings.AddChild(blockFrame);
 
     // Now grab the initial inlines in aChildItems and put them into an inline
     // frame.
     nsInlineFrame* inlineFrame = NS_NewInlineFrame(mPresShell, computedStyle);
     InitAndRestoreFrame(aState, content, parentFrame, inlineFrame, false);
     inlineFrame->AddStateBits(NS_FRAME_CAN_HAVE_ABSPOS_CHILDREN);
-    if (aIsPositioned) {
+    if (aIsAbsPosCB) {
       inlineFrame->MarkAsAbsoluteContainingBlock();
     }
 
     if (aChildItems.NotEmpty()) {
       nsFrameList::FrameLinkEnumerator firstBlock(aChildItems);
       FindFirstBlock(firstBlock);
       nsFrameList inlineKids = aChildItems.ExtractHead(firstBlock);
 
diff --git a/testing/web-platform/meta/MANIFEST.json b/testing/web-platform/meta/MANIFEST.json
--- a/testing/web-platform/meta/MANIFEST.json
+++ b/testing/web-platform/meta/MANIFEST.json
@@ -163622,16 +163622,28 @@
       [
        "/css/filter-effects/fecolormatrix-type-ref.html",
        "=="
       ]
      ],
      {}
     ]
    ],
+   "css/filter-effects/filter-cb-abspos-inline-001.html": [
+    [
+     "/css/filter-effects/filter-cb-abspos-inline-001.html",
+     [
+      [
+       "/css/filter-effects/filter-cb-abspos-inline-001-ref.html",
+       "=="
+      ]
+     ],
+     {}
+    ]
+   ],
    "css/filter-effects/filter-contrast-001.html": [
     [
      "/css/filter-effects/filter-contrast-001.html",
      [
       [
        "/css/filter-effects/filter-contrast-001-ref.html",
        "=="
       ]
@@ -265903,16 +265915,21 @@
      {}
     ]
    ],
    "css/filter-effects/fecolormatrix-type-ref.html": [
     [
      {}
     ]
    ],
+   "css/filter-effects/filter-cb-abspos-inline-001-ref.html": [
+    [
+     {}
+    ]
+   ],
    "css/filter-effects/filter-contrast-001-ref.html": [
     [
      {}
     ]
    ],
    "css/filter-effects/filter-contrast-002-ref.html": [
     [
      {}
@@ -554213,16 +554230,24 @@
   "css/filter-effects/fecolormatrix-type-ref.html": [
    "baffec6c581319fb5dbe961b44658b6deeab9bb0",
    "support"
   ],
   "css/filter-effects/fecolormatrix-type.html": [
    "82856cade35d39339ed9d05c7232f41b6e061628",
    "reftest"
   ],
+  "css/filter-effects/filter-cb-abspos-inline-001-ref.html": [
+   "e98d6449bdb8c634cddfe266aa6c4561fbc87063",
+   "support"
+  ],
+  "css/filter-effects/filter-cb-abspos-inline-001.html": [
+   "82730a27effccaa825d18cc09e283f0df83e3681",
+   "reftest"
+  ],
   "css/filter-effects/filter-contrast-001-ref.html": [
    "5e8966407b958bf34926eab4ed111a69406723e3",
    "support"
   ],
   "css/filter-effects/filter-contrast-001.html": [
    "03978e2eaa82b9b3f1ad897299e46626969a5720",
    "reftest"
   ],
@@ -624946,17 +624971,17 @@
    "d60c7c7c6d9236f773199a213bef6b1103e02e2e",
    "testharness"
   ],
   "webaudio/the-audio-api/the-constantsourcenode-interface/constant-source-onended.html": [
    "10f6b84a4c8de1a8b689cc443f2526b0455a4d27",
    "testharness"
   ],
   "webaudio/the-audio-api/the-constantsourcenode-interface/constant-source-output.html": [
-   "ce90b4d7ca5840abdc830d734df26028958fadd7",
+   "d51915ebd39267939216f66371a4dad3b5816d98",
    "testharness"
   ],
   "webaudio/the-audio-api/the-constantsourcenode-interface/ctor-constantsource.html": [
    "1fa8892c98ce5f979a08294a838b3b91ce11a3a3",
    "testharness"
   ],
   "webaudio/the-audio-api/the-constantsourcenode-interface/test-constantsourcenode.html": [
    "711b3f183d847e437a4c332f33054cc5a648fd22",
@@ -625430,33 +625455,33 @@
    "ae4209c3f47af5e13c0851f73ad3d1f788b7ed56",
    "wdspec"
   ],
   "webdriver/tests/back/conftest.py": [
    "a15c7372ba9d459ddcc4b5cf4030eb32406b60cf",
    "support"
   ],
   "webdriver/tests/back/user_prompts.py": [
-   "53944b4a302d2e1c5cde4e48ff451452d699f7f6",
+   "351ffdf9505db45cefb684c7cd05ade14c670e88",
    "wdspec"
   ],
   "webdriver/tests/close_window/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/close_window/close.py": [
    "8c22860607cb0f3d610888c9816bf2384e2c5445",
    "wdspec"
   ],
   "webdriver/tests/close_window/user_prompts.py": [
-   "9610df8253e631023b51a06f6c7629e200375679",
+   "e97d17c725782b80c6677b4337e9bb459b947a52",
    "wdspec"
   ],
   "webdriver/tests/conftest.py": [
-   "0621a8ea4a5c12b3f510c82457d51a81d947f9a3",
+   "c7ba06de521b9e339de6c80d4d1d62863fab9152",
    "support"
   ],
   "webdriver/tests/delete_all_cookies/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/delete_all_cookies/delete.py": [
    "1248b2e14b6b690b996f8bf620a6a1f33514256a",
@@ -625466,17 +625491,17 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/delete_cookie/delete.py": [
    "e9b90bac0e666ce82b3c0006830febcef726d688",
    "wdspec"
   ],
   "webdriver/tests/delete_cookie/user_prompts.py": [
-   "d3505d929c09a36c986f4eaed01d32fb3c644f56",
+   "072465529dbc4834e2efdf38431fded739846248",
    "wdspec"
   ],
   "webdriver/tests/delete_session/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/delete_session/delete.py": [
    "a84961c8abda433f6255a2fa137ecf2b2ac435c5",
@@ -625574,33 +625599,33 @@
    "e4a50a53a13c1ab76c6c002bbda1c103f8c32ccf",
    "wdspec"
   ],
   "webdriver/tests/element_send_keys/send_keys.py": [
    "83e4292e0e587a641f73d21cb1ddadc420251a10",
    "wdspec"
   ],
   "webdriver/tests/element_send_keys/user_prompts.py": [
-   "92a8270de9036fb131f72197171237dd3e6e9538",
+   "ea1da74d7df2b6ebc771d51a842d25d20cf7785b",
    "wdspec"
   ],
   "webdriver/tests/execute_async_script/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/execute_async_script/collections.py": [
    "f88643f6266714b078d161ee5039c689a937e0a3",
    "wdspec"
   ],
   "webdriver/tests/execute_async_script/execute_async.py": [
    "bd982562266d49b71fc70944b8565ad9b8d62633",
    "wdspec"
   ],
   "webdriver/tests/execute_async_script/user_prompts.py": [
-   "09d4a1c77401f2e5e1aefa79f1c6134aeffb2d50",
+   "f88ea949e75de66a31232eec3b02c08acf129bcb",
    "wdspec"
   ],
   "webdriver/tests/execute_script/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/execute_script/collections.py": [
    "0ee4e340b38b6aa59043286755822460e76b2dbd",
@@ -625614,17 +625639,17 @@
    "3b940aeb18c1939740ae3d903172004e8c8dc10d",
    "wdspec"
   ],
   "webdriver/tests/execute_script/json_serialize_windowproxy.py": [
    "20db10d82ed2b28a22674fcdc37cac0323d33c95",
    "wdspec"
   ],
   "webdriver/tests/execute_script/user_prompts.py": [
-   "530c424e10cd0e7e065e97ceb14f690f65301d3f",
+   "af830d7da679f1cc8cb88d86fcb7f91745f8e5c1",
    "wdspec"
   ],
   "webdriver/tests/find_element/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/find_element/find.py": [
    "9af0db4de0d09cbf68fa43bb40145cffc7b95635",
@@ -625662,29 +625687,29 @@
    "a15c7372ba9d459ddcc4b5cf4030eb32406b60cf",
    "support"
   ],
   "webdriver/tests/forward/forward.py": [
    "ddc7153767994ff6136bfda3d7b5f15265c0310c",
    "wdspec"
   ],
   "webdriver/tests/forward/user_prompts.py": [
-   "df9a47a6fd51cd1e57b676054c9da029cd67178a",
+   "647ec68011ba9e32041de9b511362f24b00d6cd6",
    "wdspec"
   ],
   "webdriver/tests/fullscreen_window/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/fullscreen_window/fullscreen.py": [
    "66966ba50de3867b8ff9720ee6f2310af164a5f8",
    "wdspec"
   ],
   "webdriver/tests/fullscreen_window/user_prompts.py": [
-   "7b8f39c4d87abf5acaf63ba55ef5ac72b2537a4b",
+   "d72afc7b6b80db3be82908fe9f5170e60c781cd4",
    "wdspec"
   ],
   "webdriver/tests/get_active_element/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_active_element/get.py": [
    "6d48b8577c9edf5f1e39fae461831de742ff9dd8",
@@ -625702,45 +625727,45 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_current_url/get.py": [
    "dd56543a2c7a713b4a50fb91e12019c571c95050",
    "wdspec"
   ],
   "webdriver/tests/get_current_url/user_prompts.py": [
-   "510a4629fcfe5cc08eb4c6f0af4f92b2d3b08452",
+   "e9fc95c237e5610b15a65f4d299e6be7a25fc101",
    "wdspec"
   ],
   "webdriver/tests/get_element_attribute/get.py": [
    "3fdd451b8aa73729f25325cb0e43ae389a223ee7",
    "wdspec"
   ],
   "webdriver/tests/get_element_property/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_element_property/get.py": [
    "2b36e390348a37e2138f480a7f36eb08ef6a2ee5",
    "wdspec"
   ],
   "webdriver/tests/get_element_property/user_prompts.py": [
-   "cbf65767256f65ac9ea3df09f46fb2b39d5c01b2",
+   "edb097b64d6b1434e10c75487e8d877073a5d0ea",
    "wdspec"
   ],
   "webdriver/tests/get_element_tag_name/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_element_tag_name/get.py": [
    "ccb051666249b25632abde44473206fc44414d9f",
    "wdspec"
   ],
   "webdriver/tests/get_element_tag_name/user_prompts.py": [
-   "9e16c0b4bf7162d67564dbbe950220e63f1c23d3",
+   "610fa897e67867ae6a5d13dd6ad570947b051aa3",
    "wdspec"
   ],
   "webdriver/tests/get_element_text/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_element_text/get.py": [
    "8edcb5068617b13c808ddc336196a7e0e98a8072",
@@ -625766,69 +625791,69 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_title/get.py": [
    "69a3e55d2f34dc02285af89d78a75d46e7d1282c",
    "wdspec"
   ],
   "webdriver/tests/get_title/user_prompts.py": [
-   "a2510586b8019c9000f1db10a86a9be7314dfe97",
+   "43adf2d4c20c3347e3ae2cac254bb96bfdd5544e",
    "wdspec"
   ],
   "webdriver/tests/get_window_rect/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/get_window_rect/get.py": [
    "e25d580d7cf1e1d47c41f77c9988eafb969d6ac8",
    "wdspec"
   ],
   "webdriver/tests/get_window_rect/user_prompts.py": [
-   "4c811c269596378a9a7e174982fae83c57b0edae",
+   "438d75e2ce732c9a67867ad80a76265e9328b14b",
    "wdspec"
   ],
   "webdriver/tests/interface.html": [
    "0b88587deabc7a4577da90bdf6d874e596b9a240",
    "testharness"
   ],
   "webdriver/tests/is_element_selected/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/is_element_selected/selected.py": [
    "1344c13161977d3f7c3aa90f70c53e439dfc9d00",
    "wdspec"
   ],
   "webdriver/tests/is_element_selected/user_prompts.py": [
-   "da2f9dddbbbed25b575d8053efc6a7cbab3c560d",
+   "d03fe7a5e190b8062ece6fb20080b3c17dde943e",
    "wdspec"
   ],
   "webdriver/tests/maximize_window/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/maximize_window/maximize.py": [
    "421f8e8099df3533dc2e7a0459b3e3505e770f36",
    "wdspec"
   ],
   "webdriver/tests/maximize_window/user_prompts.py": [
-   "4613d592ac350d1dafd3e8f761f4e1b417dd4394",
+   "9cfb27de9c601bcf1af33c7fd5a32594c7dede4e",
    "wdspec"
   ],
   "webdriver/tests/minimize_window/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/minimize_window/minimize.py": [
-   "5bc7f6f1d4df36a3606d025c2cabc5d82f1a3fb5",
+   "e6542b0168811230a613c8aaf6fc1fa789dd863a",
    "wdspec"
   ],
   "webdriver/tests/minimize_window/user_prompts.py": [
-   "ddc4ce653a0b7309bb40385a13d22320f7e125c2",
+   "aca79fb87ca4423164f92977c986a8bb994a678a",
    "wdspec"
   ],
   "webdriver/tests/navigate_to/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/navigate_to/navigate.py": [
    "6274392529489518207961ed5e6b6bb3ff081572",
@@ -625886,17 +625911,17 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/refresh/refresh.py": [
    "0a4ce17f3e167e0d45413c383a954923f6c8ce05",
    "wdspec"
   ],
   "webdriver/tests/refresh/user_prompts.py": [
-   "ac2edca6cf7abe32e028c4ef101d3953768560ae",
+   "3161fd53b4cbe6fdac13dd44cfb586b98c4d9584",
    "wdspec"
   ],
   "webdriver/tests/send_alert_text/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/send_alert_text/send.py": [
    "a2304bcfae6e42a38702ae845a120ae22beb12c2",
@@ -625914,37 +625939,37 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/set_window_rect/set.py": [
    "be268f96d8983e4a6d0855e150e56fdd168daa96",
    "wdspec"
   ],
   "webdriver/tests/set_window_rect/user_prompts.py": [
-   "0ecb13dd4b57c26178f29dcfa06a1b3917e1299f",
+   "7dabbfbfce9a99efdc186151c250b8396810b953",
    "wdspec"
   ],
   "webdriver/tests/status/__init__.py": [
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "webdriver/tests/status/status.py": [
    "7ca3a29103871a18695e7d64b8ebf5aa572b383f",
    "wdspec"
   ],
   "webdriver/tests/support/__init__.py": [
    "5a31a3917a5157516c10951a3b3d5ffb43b992d9",
    "support"
   ],
   "webdriver/tests/support/asserts.py": [
-   "1a20207817cea93bb270fcd20568d7e62407f834",
+   "98cd878fbb4e19a3874bc7cc5b0ca259539b101e",
    "support"
   ],
   "webdriver/tests/support/fixtures.py": [
-   "e0c7db2a275c39af511cdb74492f6ee8f31cb219",
+   "ed269a7a3e7fb2aca6d8e4a76310eeb672ad412a",
    "support"
   ],
   "webdriver/tests/support/http_request.py": [
    "cb40c781fea2280b98135522def5e6a116d7b946",
    "support"
   ],
   "webdriver/tests/support/inline.py": [
    "48399821b7abca50df824e37c41829d7a4573be1",
diff --git a/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001-ref.html b/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001-ref.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001-ref.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<meta charset=UTF-8>
+<title>CSS Filter: Establishing containing block for absolutely-positioned elements, on an inline element</title>
+<link rel="author" title="L. David Baron" href="https://dbaron.org/">
+<link rel="author" title="Mozilla Corporation" href="http://mozilla.com/">
+<meta name="flags" content="">
+<style>
+
+#cb {
+    position: relative;
+}
+
+#abspos {
+    position: absolute;
+    top: 0;
+    left: 0;
+    width: 10px;
+    height: 10px;
+    background: blue;
+}
+
+</style>
+
+<p>Filler text.</p>
+
+<div>
+    <span id="cb">Blue box should cover top-left corner of this sentence.<span id="abspos"></span></span>
+</div>
diff --git a/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001.html b/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/css/filter-effects/filter-cb-abspos-inline-001.html
@@ -0,0 +1,33 @@
+<!DOCTYPE html>
+<meta charset=UTF-8>
+<title>CSS Filter: Establishing containing block for absolutely-positioned elements, on an inline element</title>
+<link rel="author" title="L. David Baron" href="https://dbaron.org/">
+<link rel="author" title="Mozilla Corporation" href="http://mozilla.com/">
+<link rel="match" href="filter-cb-abspos-inline-001-ref.html">
+<link rel="help" href="https://drafts.fxtf.org/filter-effects-1/#FilterProperty">
+<link rel="help" href="https://drafts.fxtf.org/filter-effects-1/#supported-filter-functions">
+<meta name="flags" content="">
+<meta name="assert" content="A value other than none for the filter property results in the creation of a containing block for absolute and fixed positioned descendants unless the element it applies to is a document root element in the current browsing context.">
+<meta name="assert" content="A value of 100% leaves the input unchanged.">
+<style>
+
+#cb {
+    filter: brightness(100%);
+}
+
+#abspos {
+    position: absolute;
+    top: 0;
+    left: 0;
+    width: 10px;
+    height: 10px;
+    background: blue;
+}
+
+</style>
+
+<p>Filler text.</p>
+
+<div>
+    <span id="cb">Blue box should cover top-left corner of this sentence.<span id="abspos"></span></span>
+</div>

From: L. David Baron <dbaron@dbaron.org>

Bug 1245075 - Fix EffectSet::GetEffectSet(nsIFrame*) and EffectCompositor::GetAnimationElementAndPseudoForFrame to only return effects when the frame is the primary frame for its content.

FIXME: Doesn't actually fix the bug.

diff --git a/dom/animation/EffectCompositor.cpp b/dom/animation/EffectCompositor.cpp
--- a/dom/animation/EffectCompositor.cpp
+++ b/dom/animation/EffectCompositor.cpp
@@ -520,16 +520,21 @@ EffectCompositor::GetAnimationElementAnd
       pseudoType = nsCSSPseudoElements::ePseudo_after;
     } else {
       return result;
     }
     content = content->GetParent();
     if (!content) {
       return result;
     }
+  } else {
+    if (nsLayoutUtils::GetStyleFrame(content) != aFrame) {
+      // The effects associated with an element are for its primary frame.
+      return result;
+    }
   }
 
   if (!content->IsElement()) {
     return result;
   }
 
   result = Some(MakePair(content->AsElement(), pseudoType));
 
diff --git a/dom/animation/EffectSet.cpp b/dom/animation/EffectSet.cpp
--- a/dom/animation/EffectSet.cpp
+++ b/dom/animation/EffectSet.cpp
@@ -4,16 +4,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "EffectSet.h"
 #include "mozilla/dom/Element.h" // For Element
 #include "RestyleManager.h"
 #include "nsCycleCollectionNoteChild.h" // For CycleCollectionNoteChild
 #include "nsPresContext.h"
+#include "nsLayoutUtils.h"
 
 namespace mozilla {
 
 /* static */ void
 EffectSet::PropertyDtor(void* aObject, nsIAtom* aPropertyName,
                         void* aPropertyValue, void* aData)
 {
   EffectSet* effectSet = static_cast<EffectSet*>(aPropertyValue);
@@ -65,16 +66,20 @@ EffectSet::GetEffectSet(const nsIFrame* 
     } else {
       return nullptr;
     }
     content = content->GetParent();
     if (!content) {
       return nullptr;
     }
   } else {
+    if (nsLayoutUtils::GetStyleFrame(content) != aFrame) {
+      // The effects associated with an element are for its primary frame.
+      return nullptr;
+    }
     propName = nsGkAtoms::animationEffectsProperty;
   }
 
   if (!content->MayHaveAnimations()) {
     return nullptr;
   }
 
   return static_cast<EffectSet*>(content->GetProperty(propName));

From: L. David Baron <dbaron@dbaron.org>

Cache non-percent margin and padding calc() on the style struct.  (Bug 585715)

diff --git a/layout/style/nsStyleStruct.cpp b/layout/style/nsStyleStruct.cpp
--- a/layout/style/nsStyleStruct.cpp
+++ b/layout/style/nsStyleStruct.cpp
@@ -67,20 +67,20 @@
 #include "imgIRequest.h"
 #include "imgIContainer.h"
 #include "prlog.h"
 
 // Make sure we have enough bits in NS_STYLE_INHERIT_MASK.
 PR_STATIC_ASSERT((((1 << nsStyleStructID_Length) - 1) &
                   ~(NS_STYLE_INHERIT_MASK)) == 0);
 
-inline PRBool IsFixedUnit(nsStyleUnit aUnit, PRBool aEnumOK)
+inline PRBool IsFixedUnit(const nsStyleCoord& aCoord, PRBool aEnumOK)
 {
-  return PRBool((aUnit == eStyleUnit_Coord) || 
-                (aEnumOK && (aUnit == eStyleUnit_Enumerated)));
+  return aCoord.ConvertsToLength() || 
+         (aEnumOK && aCoord.GetUnit() == eStyleUnit_Enumerated);
 }
 
 static PRBool EqualURIs(nsIURI *aURI1, nsIURI *aURI2)
 {
   PRBool eq;
   return aURI1 == aURI2 ||    // handle null==null, and optimize
          (aURI1 && aURI2 &&
           NS_SUCCEEDED(aURI1->Equals(aURI2, &eq)) && // not equal on fail
@@ -219,42 +219,37 @@ nsChangeHint nsStyleFont::CalcFontDiffer
     return NS_STYLE_HINT_VISUAL;
   }
   return NS_STYLE_HINT_REFLOW;
 }
 
 static PRBool IsFixedData(const nsStyleSides& aSides, PRBool aEnumOK)
 {
   NS_FOR_CSS_SIDES(side) {
-    if (!IsFixedUnit(aSides.GetUnit(side), aEnumOK))
+    if (!IsFixedUnit(aSides.Get(side), aEnumOK))
       return PR_FALSE;
   }
   return PR_TRUE;
 }
 
 static nscoord CalcCoord(const nsStyleCoord& aCoord, 
                          const nscoord* aEnumTable, 
                          PRInt32 aNumEnums)
 {
-  switch (aCoord.GetUnit()) {
-    case eStyleUnit_Coord:
-      return aCoord.GetCoordValue();
-    case eStyleUnit_Enumerated:
-      if (nsnull != aEnumTable) {
-        PRInt32 value = aCoord.GetIntValue();
-        if ((0 <= value) && (value < aNumEnums)) {
-          return aEnumTable[aCoord.GetIntValue()];
-        }
-      }
-      break;
-    default:
-      NS_ERROR("bad unit type");
-      break;
+  if (aCoord.GetUnit() == eStyleUnit_Enumerated) {
+    NS_ABORT_IF_FALSE(aEnumTable, "must have enum table");
+    PRInt32 value = aCoord.GetIntValue();
+    if (0 <= value && value < aNumEnums) {
+      return aEnumTable[aCoord.GetIntValue()];
+    }
+    NS_NOTREACHED("unexpected enum value");
+    return 0;
   }
-  return 0;
+  NS_ABORT_IF_FALSE(aCoord.ConvertsToLength(), "unexpected unit");
+  return nsRuleNode::ComputeCoordPercentCalc(aCoord, 0);
 }
 
 nsStyleMargin::nsStyleMargin() {
   MOZ_COUNT_CTOR(nsStyleMargin);
   nsStyleCoord zero(0, nsStyleCoord::CoordConstructor);
   NS_FOR_CSS_SIDES(side) {
     mMargin.Set(side, zero);
   }
@@ -279,18 +274,16 @@ void
 nsStyleMargin::Destroy(nsPresContext* aContext) {
   this->~nsStyleMargin();
   aContext->FreeToShell(sizeof(nsStyleMargin), this);
 }
 
 
 void nsStyleMargin::RecalcData()
 {
-  // FIXME: We could cache calc() with percents here if we changed
-  // IsFixedData and CalcCoord.
   if (IsFixedData(mMargin, PR_FALSE)) {
     NS_FOR_CSS_SIDES(side) {
       mCachedMargin.side(side) = CalcCoord(mMargin.Get(side), nsnull, 0);
     }
     mHasCachedMargin = PR_TRUE;
   }
   else
     mHasCachedMargin = PR_FALSE;
@@ -344,18 +337,16 @@ nsStylePadding::operator new(size_t sz, 
 void 
 nsStylePadding::Destroy(nsPresContext* aContext) {
   this->~nsStylePadding();
   aContext->FreeToShell(sizeof(nsStylePadding), this);
 }
 
 void nsStylePadding::RecalcData()
 {
-  // FIXME: We could cache calc() with percents here if we changed
-  // IsFixedData and CalcCoord.
   if (IsFixedData(mPadding, PR_FALSE)) {
     NS_FOR_CSS_SIDES(side) {
       mCachedPadding.side(side) = CalcCoord(mPadding.Get(side), nsnull, 0);
     }
     mHasCachedPadding = PR_TRUE;
   }
   else
     mHasCachedPadding = PR_FALSE;
@@ -588,17 +579,17 @@ nsStyleOutline::nsStyleOutline(const nsS
 }
 
 void 
 nsStyleOutline::RecalcData(nsPresContext* aContext)
 {
   if (NS_STYLE_BORDER_STYLE_NONE == GetOutlineStyle()) {
     mCachedOutlineWidth = 0;
     mHasCachedOutline = PR_TRUE;
-  } else if (IsFixedUnit(mOutlineWidth.GetUnit(), PR_TRUE)) {
+  } else if (IsFixedUnit(mOutlineWidth, PR_TRUE)) {
     mCachedOutlineWidth =
       CalcCoord(mOutlineWidth, aContext->GetBorderWidthTable(), 3);
     mCachedOutlineWidth =
       NS_ROUND_BORDER_TO_PIXELS(mCachedOutlineWidth, mTwipsPerPixel);
     mHasCachedOutline = PR_TRUE;
   }
   else
     mHasCachedOutline = PR_FALSE;

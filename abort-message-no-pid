From: L. David Baron <dbaron@dbaron.org>

Bug 1277448 patch 1 - Don't include '[Parent NNNN] ###!!! ABORT: ' in the AbortMessage crash annotation.

This removes a source of random uniqueness (the PID) that makes it hard
to aggregate the abort messages.

MozReview-Commit-ID: DrMXKasPgxj

diff --git a/xpcom/base/nsDebugImpl.cpp b/xpcom/base/nsDebugImpl.cpp
--- a/xpcom/base/nsDebugImpl.cpp
+++ b/xpcom/base/nsDebugImpl.cpp
@@ -333,16 +333,21 @@ NS_DebugBreak(uint32_t aSeverity, const 
   if (sMultiprocessDescription) {
     PrintToBuffer("%s ", sMultiprocessDescription);
   }
 
   PrintToBuffer("%d] ", base::GetCurrentProcId());
 
   PrintToBuffer("%s: ", sevString);
 
+  // Exclude the PID from the AbortMessage crash annotation since it
+  // messes up aggregation.  Also exclude the severity string since
+  // there's no need for it.
+  uint32_t crashMessageStart = buf.curlen;
+
   if (aStr) {
     PrintToBuffer("%s: ", aStr);
   }
   if (aExpr) {
     PrintToBuffer("'%s', ", aExpr);
   }
   if (aFile) {
     PrintToBuffer("file %s, ", aFile);
@@ -385,17 +390,18 @@ NS_DebugBreak(uint32_t aSeverity, const 
       // really cause trouble if we're asserting from within IPC code. So we
       // have to do without the annotations in that case.
       if (XRE_IsParentProcess()) {
         nsCString note("xpcom_runtime_abort(");
         note += buf.buffer;
         note += ")";
         CrashReporter::AppendAppNotesToCrashReport(note);
         CrashReporter::AnnotateCrashReport(NS_LITERAL_CSTRING("AbortMessage"),
-                                           nsDependentCString(buf.buffer));
+                                           nsDependentCString(buf.buffer +
+                                             crashMessageStart));
       }
 #endif  // MOZ_CRASHREPORTER
 
 #if defined(DEBUG) && defined(_WIN32)
       RealBreak();
 #endif
 #if defined(DEBUG)
       nsTraceRefcnt::WalkTheStack(stderr);

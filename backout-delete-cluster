Backout bug 157546 (making the delete key delete by clusters), except for the test that it added, to fix blockers bug 419217 and bug 419406.

diff --git a/content/base/public/nsISelectionController.idl b/content/base/public/nsISelectionController.idl
--- a/content/base/public/nsISelectionController.idl
+++ b/content/base/public/nsISelectionController.idl
@@ -51,7 +51,7 @@ interface nsISelection;
 interface nsISelection;
 interface nsISelectionDisplay;
 
-[scriptable, uuid(513b9460-d56a-4c4e-b6f9-0b8ae4372a3b)]
+[scriptable, uuid(5f8f41cb-f182-4010-9e38-7c873e8e8a9f)]
 interface nsISelectionController : nsISelectionDisplay
 {
    const short SELECTION_NONE=0;
@@ -164,12 +164,6 @@ interface nsISelectionController : nsISe
    */
     void characterMove(in boolean forward, in boolean extend);
 
-   /** CharacterExtendForDelete will extend the selection one character cell
-   *  forward in the document.
-   *  this method is used internally for handling del key.
-   */
-    [noscript] void characterExtendForDelete();
-
    /** WordMove will move the selection one word forward/backward in the document.
    *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
    *  the "point" of selection that is extended is considered the "focus" point. 
diff --git a/editor/libeditor/text/nsPlaintextEditor.cpp b/editor/libeditor/text/nsPlaintextEditor.cpp
--- a/editor/libeditor/text/nsPlaintextEditor.cpp
+++ b/editor/libeditor/text/nsPlaintextEditor.cpp
@@ -679,7 +679,6 @@ NS_IMETHODIMP nsPlaintextEditor::DeleteS
   // This needs to happen inside selection batching,
   // otherwise the deleted text is autocopied to the clipboard.
   if (aAction == eNextWord || aAction == ePreviousWord
-      || (aAction == eNext && bCollapsed)
       || aAction == eToBeginningOfLine || aAction == eToEndOfLine)
   {
     nsCOMPtr<nsISelectionController> selCont (do_QueryReferent(mSelConWeak));
@@ -696,10 +695,6 @@ NS_IMETHODIMP nsPlaintextEditor::DeleteS
           break;
         case ePreviousWord:
           result = selCont->WordExtendForDelete(PR_FALSE);
-          aAction = eNone;
-          break;
-        case eNext:
-          result = selCont->CharacterExtendForDelete();
           aAction = eNone;
           break;
         case eToBeginningOfLine:
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -930,7 +930,6 @@ public:
   // nsISelectionController
 
   NS_IMETHOD CharacterMove(PRBool aForward, PRBool aExtend);
-  NS_IMETHOD CharacterExtendForDelete();
   NS_IMETHOD WordMove(PRBool aForward, PRBool aExtend);
   NS_IMETHOD WordExtendForDelete(PRBool aForward);
   NS_IMETHOD LineMove(PRBool aForward, PRBool aExtend);
@@ -2771,12 +2770,6 @@ PresShell::CharacterMove(PRBool aForward
 PresShell::CharacterMove(PRBool aForward, PRBool aExtend)
 {
   return mSelection->CharacterMove(aForward, aExtend);  
-}
-
-NS_IMETHODIMP
-PresShell::CharacterExtendForDelete()
-{
-  return mSelection->CharacterExtendForDelete();
 }
 
 NS_IMETHODIMP 
diff --git a/layout/forms/nsTextControlFrame.cpp b/layout/forms/nsTextControlFrame.cpp
--- a/layout/forms/nsTextControlFrame.cpp
+++ b/layout/forms/nsTextControlFrame.cpp
@@ -582,7 +582,6 @@ public:
   NS_IMETHOD GetCaretVisible(PRBool *_retval);
   NS_IMETHOD SetCaretVisibilityDuringSelection(PRBool aVisibility);
   NS_IMETHOD CharacterMove(PRBool aForward, PRBool aExtend);
-  NS_IMETHOD CharacterExtendForDelete();
   NS_IMETHOD WordMove(PRBool aForward, PRBool aExtend);
   NS_IMETHOD WordExtendForDelete(PRBool aForward);
   NS_IMETHOD LineMove(PRBool aForward, PRBool aExtend);
@@ -807,13 +806,6 @@ nsTextInputSelectionImpl::CharacterMove(
   return NS_ERROR_NULL_POINTER;
 }
 
-NS_IMETHODIMP
-nsTextInputSelectionImpl::CharacterExtendForDelete()
-{
-  if (mFrameSelection)
-    return mFrameSelection->CharacterExtendForDelete();
-  return NS_ERROR_NULL_POINTER;
-}
 
 NS_IMETHODIMP
 nsTextInputSelectionImpl::WordMove(PRBool aForward, PRBool aExtend)
diff --git a/layout/generic/nsFrameSelection.h b/layout/generic/nsFrameSelection.h
--- a/layout/generic/nsFrameSelection.h
+++ b/layout/generic/nsFrameSelection.h
@@ -409,12 +409,6 @@ public:
   /*unsafe*/
   nsresult CharacterMove(PRBool aForward, PRBool aExtend);
 
-  /** CharacterExtendForDelete extends the selection forward (logically) to
-   * the next character cell, so that the selected cell can be deleted.
-   */
-  /*unsafe*/
-  nsresult CharacterExtendForDelete();
-
   /** WordMove will generally be called from the nsiselectioncontroller implementations.
    *  the effect being the selection will move one word left or right.
    * @param aForward move forward in document.
diff --git a/layout/generic/nsSelection.cpp b/layout/generic/nsSelection.cpp
--- a/layout/generic/nsSelection.cpp
+++ b/layout/generic/nsSelection.cpp
@@ -2774,12 +2774,6 @@ nsFrameSelection::CharacterMove(PRBool a
 }
 
 nsresult
-nsFrameSelection::CharacterExtendForDelete()
-{
-  return MoveCaret(nsIDOMKeyEvent::DOM_VK_DELETE, PR_TRUE, eSelectCharacter);
-}
-
-nsresult
 nsFrameSelection::WordMove(PRBool aForward, PRBool aExtend)
 {
   if (aForward)

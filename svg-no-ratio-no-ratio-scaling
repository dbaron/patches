From: L. David Baron <dbaron@dbaron.org>

Bug 1131812 patch 2 - Don't do ratio scaling when applying min/max-width/height for images without an intrinsic ratio.

This is because the rules in the table in section 10.4 of CSS 2.1 only
apply when width and height are auto (which we already tested) and when
the image has an intrinsic ratio (which we did not).

I had hoped to simplify the code further, but there are tricky ordering
dependencies that make it hard to do.  (In particular, in the branches
for one dimension auto and one non-auto, the non-auto dimension is
computed first.)

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -4872,25 +4872,31 @@ nsLayoutUtils::ComputeSizeWithIntrinsicD
       if (hasIntrinsicBSize) {
         tentBSize = intrinsicBSize;
       } else if (logicalRatio.ISize(aWM) > 0) {
         tentBSize = NSCoordMulDiv(tentISize, logicalRatio.BSize(aWM), logicalRatio.ISize(aWM));
       } else {
         tentBSize = nsPresContext::CSSPixelsToAppUnits(150);
       }
 
-      nsSize autoSize =
-        ComputeAutoSizeWithIntrinsicDimensions(minISize, minBSize,
-                                               maxISize, maxBSize,
-                                               tentISize, tentBSize);
-      // The nsSize that ComputeAutoSizeWithIntrinsicDimensions returns will
-      // actually contain logical values if the parameters passed to it were
-      // logical coordinates, so we do NOT perform a physical-to-logical
-      // conversion here, but just assign the fields directly to our result.
-      return LogicalSize(aWM, autoSize.width, autoSize.height);
+      if (aIntrinsicRatio != nsSize(0, 0)) {
+        nsSize autoSize =
+          ComputeAutoSizeWithIntrinsicDimensions(minISize, minBSize,
+                                                 maxISize, maxBSize,
+                                                 tentISize, tentBSize);
+        // The nsSize that ComputeAutoSizeWithIntrinsicDimensions returns will
+        // actually contain logical values if the parameters passed to it were
+        // logical coordinates, so we do NOT perform a physical-to-logical
+        // conversion here, but just assign the fields directly to our result.
+        iSize = autoSize.width;
+        bSize = autoSize.height;
+      } else {
+        iSize = NS_CSS_MINMAX(tentISize, minISize, maxISize);
+        bSize = NS_CSS_MINMAX(tentBSize, minBSize, maxBSize);
+      }
     } else {
 
       // 'auto' iSize, non-'auto' bSize
       bSize = NS_CSS_MINMAX(bSize, minBSize, maxBSize);
       if (logicalRatio.BSize(aWM) > 0) {
         iSize = NSCoordMulDiv(bSize, logicalRatio.ISize(aWM), logicalRatio.BSize(aWM));
       } else if (hasIntrinsicISize) {
         iSize = intrinsicISize;
diff --git a/layout/reftests/w3c-css/submitted/css21/replaced-sizing/reftest.list b/layout/reftests/w3c-css/submitted/css21/replaced-sizing/reftest.list
--- a/layout/reftests/w3c-css/submitted/css21/replaced-sizing/reftest.list
+++ b/layout/reftests/w3c-css/submitted/css21/replaced-sizing/reftest.list
@@ -1,9 +1,9 @@
 == replaced-elements-all-auto.html replaced-elements-all-auto-ref.html
 == replaced-elements-height-20.html replaced-elements-height-20-ref.html
 == replaced-elements-width-40.html replaced-elements-width-40-ref.html
 == replaced-elements-min-height-20.html replaced-elements-all-auto-ref.html
 == replaced-elements-min-width-40.html replaced-elements-all-auto-ref.html
-fails == replaced-elements-min-height-40.html replaced-elements-min-height-40-ref.html # bug 1131812
-fails == replaced-elements-min-width-80.html replaced-elements-min-width-80-ref.html # bug 1131812
-fails == replaced-elements-max-height-20.html replaced-elements-height-20-ref.html # bug 1131812
-fails == replaced-elements-max-width-40.html replaced-elements-width-40-ref.html # bug 1131812
+== replaced-elements-min-height-40.html replaced-elements-min-height-40-ref.html
+== replaced-elements-min-width-80.html replaced-elements-min-width-80-ref.html
+== replaced-elements-max-height-20.html replaced-elements-height-20-ref.html
+== replaced-elements-max-width-40.html replaced-elements-width-40-ref.html

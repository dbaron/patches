Match new (more-const) signature for PENUMLOADED_MODULES_CALLBACK and PENUMLOADED_MODULES_CALLBACK64.  b=415426  Fixing bustage on Windows tinderbox from SDK upgrade.

diff --git a/tools/trace-malloc/lib/nsDebugHelpWin32.cpp b/tools/trace-malloc/lib/nsDebugHelpWin32.cpp
--- a/tools/trace-malloc/lib/nsDebugHelpWin32.cpp
+++ b/tools/trace-malloc/lib/nsDebugHelpWin32.cpp
@@ -208,7 +208,7 @@ DHWImportHooker::~DHWImportHooker()
         PR_Unlock(gLock);
 }    
 
-static BOOL CALLBACK ModuleEnumCallback(LPSTR ModuleName,
+static BOOL CALLBACK ModuleEnumCallback(PCSTR ModuleName,
                                         ULONG ModuleBase,
                                         ULONG ModuleSize,
                                         PVOID UserContext)
diff --git a/xpcom/base/nsStackWalk.cpp b/xpcom/base/nsStackWalk.cpp
--- a/xpcom/base/nsStackWalk.cpp
+++ b/xpcom/base/nsStackWalk.cpp
@@ -713,8 +713,8 @@ NS_StackWalk(NS_WalkStackCallback aCallb
 
 
 static BOOL CALLBACK callbackEspecial(
-  LPSTR aModuleName,
-  DWORD aModuleBase,
+  PCSTR aModuleName,
+  ULONG aModuleBase,
   ULONG aModuleSize,
   PVOID aUserContext)
 {
@@ -735,7 +735,7 @@ static BOOL CALLBACK callbackEspecial(
        ? (addr >= aModuleBase && addr <= (aModuleBase + aModuleSize))
        : (addr <= aModuleBase && addr >= (aModuleBase - aModuleSize))
         ) {
-        retval = _SymLoadModule(GetCurrentProcess(), NULL, aModuleName, NULL, aModuleBase, aModuleSize);
+        retval = _SymLoadModule(GetCurrentProcess(), NULL, (PSTR)aModuleName, NULL, aModuleBase, aModuleSize);
         if (!retval)
             PrintError("SymLoadModule");
     }
@@ -744,7 +744,7 @@ static BOOL CALLBACK callbackEspecial(
 }
 
 static BOOL CALLBACK callbackEspecial64(
-  PTSTR aModuleName,
+  PCSTR aModuleName,
   DWORD64 aModuleBase,
   ULONG aModuleSize,
   PVOID aUserContext)
@@ -767,7 +767,7 @@ static BOOL CALLBACK callbackEspecial64(
        ? (addr >= aModuleBase && addr <= (aModuleBase + aModuleSize))
        : (addr <= aModuleBase && addr >= (aModuleBase - aModuleSize))
         ) {
-        retval = _SymLoadModule64(GetCurrentProcess(), NULL, aModuleName, NULL, aModuleBase, aModuleSize);
+        retval = _SymLoadModule64(GetCurrentProcess(), NULL, (PSTR)aModuleName, NULL, aModuleBase, aModuleSize);
         if (!retval)
             PrintError("SymLoadModule64");
     }
@@ -812,9 +812,7 @@ BOOL SymGetModuleInfoEspecial(HANDLE aPr
          * Not loaded, here's the magic.
          * Go through all the modules.
          */
-        // Need to cast to PENUMLOADED_MODULES_CALLBACK for some compiler
-        // or platform SDK; see bug 391848.
-        enumRes = _EnumerateLoadedModules(aProcess, (PENUMLOADED_MODULES_CALLBACK)callbackEspecial, (PVOID)&aAddr);
+        enumRes = _EnumerateLoadedModules(aProcess, callbackEspecial, (PVOID)&aAddr);
         if (FALSE != enumRes)
         {
             /*
@@ -881,9 +879,7 @@ BOOL SymGetModuleInfoEspecial64(HANDLE a
          * Not loaded, here's the magic.
          * Go through all the modules.
          */
-        // Need to cast to PENUMLOADED_MODULES_CALLBACK for some compiler
-        // or platform SDK; see bug 391848.
-        enumRes = _EnumerateLoadedModules64(aProcess, (PENUMLOADED_MODULES_CALLBACK64)callbackEspecial64, (PVOID)&aAddr);
+        enumRes = _EnumerateLoadedModules64(aProcess, callbackEspecial64, (PVOID)&aAddr);
         if (FALSE != enumRes)
         {
             /*

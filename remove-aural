From: L. David Baron <dbaron@dbaron.org>

Remove parsing and storage code for CSS 2.0 aural properties.  (Bug 649119)

diff --git a/dom/interfaces/css/nsIDOMCSS2Properties.idl b/dom/interfaces/css/nsIDOMCSS2Properties.idl
--- a/dom/interfaces/css/nsIDOMCSS2Properties.idl
+++ b/dom/interfaces/css/nsIDOMCSS2Properties.idl
@@ -45,22 +45,19 @@
  * The nsIDOMCSS2Properties interface is a datatype for additional
  * reflection of data already provided in nsIDOMCSSStyleDeclaration in
  * the Document Object Model.
  *
  * For more information on this interface please see
  * http://www.w3.org/TR/DOM-Level-2-Style
  */
 
-[scriptable, uuid(8d58fba8-33d1-4a09-8251-dfc9cfc96863)]
+[scriptable, uuid(f28df617-ac8b-48e0-8094-c4642ab43940)]
 interface nsIDOMCSS2Properties : nsISupports
 {
-           attribute DOMString        azimuth;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        background;
                                         // raises(DOMException) on setting
 
            attribute DOMString        backgroundAttachment;
                                         // raises(DOMException) on setting
 
            attribute DOMString        backgroundColor;
                                         // raises(DOMException) on setting
@@ -177,37 +174,25 @@ interface nsIDOMCSS2Properties : nsISupp
                                         // raises(DOMException) on setting
 
            attribute DOMString        counterIncrement;
                                         // raises(DOMException) on setting
 
            attribute DOMString        counterReset;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        cue;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        cueAfter;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        cueBefore;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        cursor;
                                         // raises(DOMException) on setting
 
            attribute DOMString        direction;
                                         // raises(DOMException) on setting
 
            attribute DOMString        display;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        elevation;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        emptyCells;
                                         // raises(DOMException) on setting
 
            attribute DOMString        cssFloat;
                                         // raises(DOMException) on setting
 
            attribute DOMString        font;
                                         // raises(DOMException) on setting
@@ -330,64 +315,28 @@ interface nsIDOMCSS2Properties : nsISupp
                                         // raises(DOMException) on setting
 
            attribute DOMString        pageBreakBefore;
                                         // raises(DOMException) on setting
 
            attribute DOMString        pageBreakInside;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        pause;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        pauseAfter;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        pauseBefore;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        pitch;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        pitchRange;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        position;
                                         // raises(DOMException) on setting
 
            attribute DOMString        quotes;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        richness;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        right;
                                         // raises(DOMException) on setting
 
            attribute DOMString        size;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        speak;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        speakHeader;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        speakNumeral;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        speakPunctuation;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        speechRate;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        stress;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        tableLayout;
                                         // raises(DOMException) on setting
 
            attribute DOMString        textAlign;
                                         // raises(DOMException) on setting
 
            attribute DOMString        textDecoration;
                                         // raises(DOMException) on setting
@@ -408,22 +357,16 @@ interface nsIDOMCSS2Properties : nsISupp
                                         // raises(DOMException) on setting
 
            attribute DOMString        verticalAlign;
                                         // raises(DOMException) on setting
 
            attribute DOMString        visibility;
                                         // raises(DOMException) on setting
 
-           attribute DOMString        voiceFamily;
-                                        // raises(DOMException) on setting
-
-           attribute DOMString        volume;
-                                        // raises(DOMException) on setting
-
            attribute DOMString        whiteSpace;
                                         // raises(DOMException) on setting
 
            attribute DOMString        widows;
                                         // raises(DOMException) on setting
 
            attribute DOMString        width;
                                         // raises(DOMException) on setting
diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -478,24 +478,16 @@ Declaration::GetValue(nsCSSProperty aPro
         aValue.Append(PRUnichar(','));
         aValue.Append(PRUnichar(' '));
       }
 
       aValue.Append(PRUnichar(' '));
       AppendValueToString(eCSSProperty_background_color, aValue);
       break;
     }
-    case eCSSProperty_cue: {
-      if (AppendValueToString(eCSSProperty_cue_before, aValue)) {
-        aValue.Append(PRUnichar(' '));
-        if (!AppendValueToString(eCSSProperty_cue_after, aValue))
-          aValue.Truncate();
-      }
-      break;
-    }
     case eCSSProperty_font: {
       // systemFont might not be present; the others are guaranteed to be
       // based on the shorthand check at the beginning of the function
       const nsCSSValue *systemFont =
         data->ValueFor(eCSSProperty__x_system_font);
       const nsCSSValue &style =
         *data->ValueFor(eCSSProperty_font_style);
       const nsCSSValue &variant =
@@ -583,24 +575,16 @@ Declaration::GetValue(nsCSSProperty aPro
       const nsCSSValue &xValue =
         *data->ValueFor(eCSSProperty_overflow_x);
       const nsCSSValue &yValue =
         *data->ValueFor(eCSSProperty_overflow_y);
       if (xValue == yValue)
         xValue.AppendToString(eCSSProperty_overflow_x, aValue);
       break;
     }
-    case eCSSProperty_pause: {
-      if (AppendValueToString(eCSSProperty_pause_before, aValue)) {
-        aValue.Append(PRUnichar(' '));
-        if (!AppendValueToString(eCSSProperty_pause_after, aValue))
-          aValue.Truncate();
-      }
-      break;
-    }
     case eCSSProperty_transition: {
       const nsCSSValue &transProp =
         *data->ValueFor(eCSSProperty_transition_property);
       const nsCSSValue &transDuration =
         *data->ValueFor(eCSSProperty_transition_duration);
       const nsCSSValue &transTiming =
         *data->ValueFor(eCSSProperty_transition_timing_function);
       const nsCSSValue &transDelay =
diff --git a/layout/style/nsCSSKeywordList.h b/layout/style/nsCSSKeywordList.h
--- a/layout/style/nsCSSKeywordList.h
+++ b/layout/style/nsCSSKeywordList.h
@@ -175,35 +175,32 @@ CSS_KEY(-moz-trad-chinese-informal, _moz
 CSS_KEY(-moz-urdu, _moz_urdu)
 CSS_KEY(-moz-use-system-font, _moz_use_system_font)
 CSS_KEY(-moz-use-text-color, _moz_use_text_color)
 CSS_KEY(-moz-visitedhyperlinktext, _moz_visitedhyperlinktext)
 CSS_KEY(-moz-window, _moz_window)
 CSS_KEY(-moz-workspace, _moz_workspace)
 CSS_KEY(-moz-zoom-in, _moz_zoom_in)
 CSS_KEY(-moz-zoom-out, _moz_zoom_out)
-CSS_KEY(above, above)
 CSS_KEY(absolute, absolute)
 CSS_KEY(active, active)
 CSS_KEY(activeborder, activeborder)
 CSS_KEY(activecaption, activecaption)
 CSS_KEY(alias, alias)
 CSS_KEY(all, all)
 CSS_KEY(all-scroll, all_scroll)
 CSS_KEY(alternate, alternate)
 CSS_KEY(always, always)
 CSS_KEY(appworkspace, appworkspace)
 CSS_KEY(armenian, armenian)
 CSS_KEY(auto, auto)
 CSS_KEY(avoid, avoid)
 CSS_KEY(background, background)
 CSS_KEY(backwards, backwards)
 CSS_KEY(baseline, baseline)
-CSS_KEY(behind, behind)
-CSS_KEY(below, below)
 CSS_KEY(bidi-override, bidi_override)
 CSS_KEY(blink, blink)
 CSS_KEY(block, block)
 CSS_KEY(block-axis, block_axis)
 CSS_KEY(bold, bold)
 CSS_KEY(bolder, bolder)
 CSS_KEY(border-box, border_box)
 CSS_KEY(both, both)
@@ -216,26 +213,23 @@ CSS_KEY(buttonface, buttonface)
 CSS_KEY(buttonhighlight, buttonhighlight)
 CSS_KEY(buttonshadow, buttonshadow)
 CSS_KEY(buttontext, buttontext)
 CSS_KEY(capitalize, capitalize)
 CSS_KEY(caption, caption)
 CSS_KEY(captiontext, captiontext)
 CSS_KEY(cell, cell)
 CSS_KEY(center, center)
-CSS_KEY(center-left, center_left)
-CSS_KEY(center-right, center_right)
 CSS_KEY(ch, ch)
 CSS_KEY(circle, circle)
 CSS_KEY(cjk-ideographic, cjk_ideographic)
 CSS_KEY(close-quote, close_quote)
 CSS_KEY(closest-corner, closest_corner)
 CSS_KEY(closest-side, closest_side)
 CSS_KEY(cm, cm)
-CSS_KEY(code, code)
 CSS_KEY(col-resize, col_resize)
 CSS_KEY(collapse, collapse)
 CSS_KEY(condensed, condensed)
 CSS_KEY(contain, contain)
 CSS_KEY(content-box, content_box)
 CSS_KEY(context-menu, context_menu)
 CSS_KEY(continuous, continuous)
 CSS_KEY(copy, copy)
@@ -245,17 +239,16 @@ CSS_KEY(cross, cross)
 CSS_KEY(crosshair, crosshair)
 CSS_KEY(currentcolor, currentcolor)
 CSS_KEY(dashed, dashed)
 CSS_KEY(decimal, decimal)
 CSS_KEY(decimal-leading-zero, decimal_leading_zero)
 CSS_KEY(default, default)
 CSS_KEY(deg, deg)
 CSS_KEY(dialog, dialog)
-CSS_KEY(digits, digits)
 CSS_KEY(disabled, disabled)
 CSS_KEY(disc, disc)
 CSS_KEY(dotted, dotted)
 CSS_KEY(double, double)
 CSS_KEY(e-resize, e_resize)
 CSS_KEY(each-box, each_box)
 CSS_KEY(ease, ease)
 CSS_KEY(ease-in, ease_in)
@@ -268,35 +261,29 @@ CSS_KEY(em, em)
 CSS_KEY(embed, embed)
 CSS_KEY(enabled, enabled)
 CSS_KEY(end, end)
 CSS_KEY(ex, ex)
 CSS_KEY(expanded, expanded)
 CSS_KEY(extra-condensed, extra_condensed)
 CSS_KEY(extra-expanded, extra_expanded)
 CSS_KEY(ew-resize, ew_resize)
-CSS_KEY(far-left, far_left)
-CSS_KEY(far-right, far_right)
 CSS_KEY(farthest-side, farthest_side)
 CSS_KEY(farthest-corner, farthest_corner)
-CSS_KEY(fast, fast)
-CSS_KEY(faster, faster)
 CSS_KEY(fill, fill)
 CSS_KEY(fixed, fixed)
 CSS_KEY(forwards, forwards)
 CSS_KEY(georgian, georgian)
 CSS_KEY(grad, grad)
 CSS_KEY(graytext, graytext)
 CSS_KEY(groove, groove)
 CSS_KEY(hebrew, hebrew)
 CSS_KEY(help, help)
 CSS_KEY(hidden, hidden)
 CSS_KEY(hide, hide)
-CSS_KEY(high, high)
-CSS_KEY(higher, higher)
 CSS_KEY(highlight, highlight)
 CSS_KEY(highlighttext, highlighttext)
 CSS_KEY(hiragana, hiragana)
 CSS_KEY(hiragana-iroha, hiragana_iroha)
 CSS_KEY(horizontal, horizontal)
 CSS_KEY(hz, hz)
 CSS_KEY(icon, icon)
 CSS_KEY(ignore, ignore)
@@ -323,27 +310,21 @@ CSS_KEY(italic, italic)
 CSS_KEY(justify, justify)
 CSS_KEY(katakana, katakana)
 CSS_KEY(katakana-iroha, katakana_iroha)
 CSS_KEY(khz, khz)
 CSS_KEY(landscape, landscape)
 CSS_KEY(large, large)
 CSS_KEY(larger, larger)
 CSS_KEY(left, left)
-CSS_KEY(left-side, left_side)
-CSS_KEY(leftwards, leftwards)
-CSS_KEY(level, level)
 CSS_KEY(lighter, lighter)
 CSS_KEY(line-through, line_through)
 CSS_KEY(linear, linear)
 CSS_KEY(list-item, list_item)
 CSS_KEY(logical, logical)
-CSS_KEY(loud, loud)
-CSS_KEY(low, low)
-CSS_KEY(lower, lower)
 CSS_KEY(lower-alpha, lower_alpha)
 CSS_KEY(lower-greek, lower_greek)
 CSS_KEY(lower-latin, lower_latin)
 CSS_KEY(lower-roman, lower_roman)
 CSS_KEY(lowercase, lowercase)
 CSS_KEY(ltr, ltr)
 CSS_KEY(margin-box, margin_box)
 CSS_KEY(matrix, matrix)
@@ -367,17 +348,16 @@ CSS_KEY(no-repeat, no_repeat)
 CSS_KEY(none, none)
 CSS_KEY(normal, normal)
 CSS_KEY(not-allowed, not_allowed)
 CSS_KEY(nowrap, nowrap)
 CSS_KEY(ns-resize, ns_resize)
 CSS_KEY(nw-resize, nw_resize)
 CSS_KEY(nwse-resize, nwse_resize)
 CSS_KEY(oblique, oblique)
-CSS_KEY(once, once)
 CSS_KEY(open-quote, open_quote)
 CSS_KEY(outset, outset)
 CSS_KEY(outside, outside)
 CSS_KEY(overline, overline)
 CSS_KEY(padding-box, padding_box)
 CSS_KEY(painted, painted)
 CSS_KEY(paused, paused)
 CSS_KEY(pc, pc)
@@ -396,18 +376,16 @@ CSS_KEY(read-only, read_only)
 CSS_KEY(read-write, read_write)
 CSS_KEY(relative, relative)
 CSS_KEY(repeat, repeat)
 CSS_KEY(repeat-x, repeat_x)
 CSS_KEY(repeat-y, repeat_y)
 CSS_KEY(reverse, reverse)
 CSS_KEY(ridge, ridge)
 CSS_KEY(right, right)
-CSS_KEY(right-side, right_side)
-CSS_KEY(rightwards, rightwards)
 CSS_KEY(rotate, rotate)
 CSS_KEY(round, round)
 CSS_KEY(row-resize, row_resize)
 CSS_KEY(rtl, rtl)
 CSS_KEY(running, running)
 CSS_KEY(s, s)
 CSS_KEY(s-resize, s_resize)
 CSS_KEY(scale, scale)
@@ -421,29 +399,25 @@ CSS_KEY(select-after, select_after)
 CSS_KEY(select-all, select_all)
 CSS_KEY(select-before, select_before)
 CSS_KEY(select-menu, select_menu)
 CSS_KEY(select-same, select_same)
 CSS_KEY(semi-condensed, semi_condensed)
 CSS_KEY(semi-expanded, semi_expanded)
 CSS_KEY(separate, separate)
 CSS_KEY(show, show)
-CSS_KEY(silent, silent)
 CSS_KEY(skew, skew)
 CSS_KEY(skewx, skewx)
 CSS_KEY(skewy, skewy)
-CSS_KEY(slow, slow)
-CSS_KEY(slower, slower)
 CSS_KEY(small, small)
 CSS_KEY(small-caps, small_caps)
 CSS_KEY(small-caption, small_caption)
 CSS_KEY(smaller, smaller)
 CSS_KEY(soft, soft)
 CSS_KEY(solid, solid)
-CSS_KEY(spell-out, spell_out)
 CSS_KEY(square, square)
 CSS_KEY(start, start)
 CSS_KEY(static, static)
 CSS_KEY(status-bar, status_bar)
 CSS_KEY(step-end, step_end)
 CSS_KEY(step-start, step_start)
 CSS_KEY(stretch, stretch)
 CSS_KEY(stretch-to-fit, stretch_to_fit)
@@ -494,24 +468,18 @@ CSS_KEY(visiblestroke, visiblestroke)
 CSS_KEY(w-resize, w_resize)
 CSS_KEY(wait, wait)
 CSS_KEY(wavy, wavy)
 CSS_KEY(wider, wider)
 CSS_KEY(window, window)
 CSS_KEY(windowframe, windowframe)
 CSS_KEY(windowtext, windowtext)
 CSS_KEY(write-only, write_only)
-CSS_KEY(x-fast, x_fast)
-CSS_KEY(x-high, x_high)
 CSS_KEY(x-large, x_large)
-CSS_KEY(x-loud, x_loud)
-CSS_KEY(x-low, x_low)
-CSS_KEY(x-slow, x_slow)
 CSS_KEY(x-small, x_small)
-CSS_KEY(x-soft, x_soft)
 CSS_KEY(xx-large, xx_large)
 CSS_KEY(xx-small, xx_small)
 
 // Appearance keywords for widget styles
 CSS_KEY(radio, radio)
 CSS_KEY(checkbox, checkbox)
 CSS_KEY(button-bevel, button_bevel)
 CSS_KEY(toolbox, toolbox)
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -444,17 +444,16 @@ protected:
 
 #ifdef MOZ_XUL
   PRBool ParseTreePseudoElement(nsAtomList **aPseudoElementArgs);
 #endif
 
   void InitBoxPropsAsPhysical(const nsCSSProperty *aSourceProperties);
 
   // Property specific parsing routines
-  PRBool ParseAzimuth(nsCSSValue& aValue);
   PRBool ParseBackground();
 
   struct BackgroundParseState {
     nsCSSValue&  mColor;
     nsCSSValueList* mImage;
     nsCSSValueList* mRepeat;
     nsCSSValueList* mAttachment;
     nsCSSValueList* mClip;
@@ -497,33 +496,31 @@ protected:
                                            PRBool *aHadFinalWS);
   PRBool ParseCalcTerm(nsCSSValue& aValue, PRInt32& aVariantMask);
   PRBool RequireWhitespace();
 
   // for 'clip' and '-moz-image-region'
   PRBool ParseRect(nsCSSProperty aPropID);
   PRBool ParseContent();
   PRBool ParseCounterData(nsCSSProperty aPropID);
-  PRBool ParseCue();
   PRBool ParseCursor();
   PRBool ParseFont();
   PRBool ParseFontWeight(nsCSSValue& aValue);
   PRBool ParseOneFamily(nsAString& aValue);
   PRBool ParseFamily(nsCSSValue& aValue);
   PRBool ParseFontSrc(nsCSSValue& aValue);
   PRBool ParseFontSrcFormat(nsTArray<nsCSSValue>& values);
   PRBool ParseFontRanges(nsCSSValue& aValue);
   PRBool ParseListStyle();
   PRBool ParseMargin();
   PRBool ParseMarks(nsCSSValue& aValue);
   PRBool ParseMozTransform();
   PRBool ParseOutline();
   PRBool ParseOverflow();
   PRBool ParsePadding();
-  PRBool ParsePause();
   PRBool ParseQuotes();
   PRBool ParseSize();
   PRBool ParseTextDecoration(nsCSSValue& aValue);
 
   PRBool ParseShadowItem(nsCSSValue& aValue, PRBool aIsBoxShadow);
   PRBool ParseShadowList(nsCSSProperty aProperty);
   PRBool ParseTransitionProperty();
   PRBool ParseTransitionTimingFunctionValues(nsCSSValue& aValue);
@@ -5503,18 +5500,16 @@ CSSParserImpl::ParsePropertyByFunction(n
     return ParseRect(eCSSProperty_clip);
   case eCSSProperty__moz_column_rule:
     return ParseBorderSide(kColumnRuleIDs, PR_FALSE);
   case eCSSProperty_content:
     return ParseContent();
   case eCSSProperty_counter_increment:
   case eCSSProperty_counter_reset:
     return ParseCounterData(aPropID);
-  case eCSSProperty_cue:
-    return ParseCue();
   case eCSSProperty_cursor:
     return ParseCursor();
   case eCSSProperty_font:
     return ParseFont();
   case eCSSProperty_image_region:
     return ParseRect(eCSSProperty_image_region);
   case eCSSProperty_list_style:
     return ParseListStyle();
@@ -5545,18 +5540,16 @@ CSSParserImpl::ParsePropertyByFunction(n
     return ParseDirectionalBoxProperty(eCSSProperty_padding_left,
                                        NS_BOXPROP_SOURCE_PHYSICAL);
   case eCSSProperty_padding_right:
     return ParseDirectionalBoxProperty(eCSSProperty_padding_right,
                                        NS_BOXPROP_SOURCE_PHYSICAL);
   case eCSSProperty_padding_start:
     return ParseDirectionalBoxProperty(eCSSProperty_padding_start,
                                        NS_BOXPROP_SOURCE_LOGICAL);
-  case eCSSProperty_pause:
-    return ParsePause();
   case eCSSProperty_quotes:
     return ParseQuotes();
   case eCSSProperty_size:
     return ParseSize();
   case eCSSProperty__moz_transform:
     return ParseMozTransform();
   case eCSSProperty__moz_transform_origin:
     return ParseMozTransformOrigin();
@@ -5602,20 +5595,17 @@ CSSParserImpl::ParseSingleValueProperty(
 
   if (aPropID < 0 || aPropID >= eCSSProperty_COUNT_no_shorthands) {
     NS_ABORT_IF_FALSE(PR_FALSE, "not a single value property");
     return PR_FALSE;
   }
 
   if (nsCSSProps::PropHasFlags(aPropID, CSS_PROPERTY_VALUE_PARSER_FUNCTION)) {
     switch (aPropID) {
-      case eCSSProperty_azimuth:
-        return ParseAzimuth(aValue);
       case eCSSProperty_font_family:
-      case eCSSProperty_voice_family:
         return ParseFamily(aValue);
       case eCSSProperty_font_weight:
         return ParseFontWeight(aValue);
       case eCSSProperty_marks:
         return ParseMarks(aValue);
       case eCSSProperty_text_decoration:
         return ParseTextDecoration(aValue);
       default:
@@ -5754,46 +5744,16 @@ CSSParserImpl::InitBoxPropsAsPhysical(co
 {
   nsCSSValue physical(NS_BOXPROP_SOURCE_PHYSICAL, eCSSUnit_Enumerated);
   for (const nsCSSProperty *prop = aSourceProperties;
        *prop != eCSSProperty_UNKNOWN; ++prop) {
     AppendValue(*prop, physical);
   }
 }
 
-PRBool
-CSSParserImpl::ParseAzimuth(nsCSSValue& aValue)
-{
-  if (ParseVariant(aValue, VARIANT_HK | VARIANT_ANGLE,
-                   nsCSSProps::kAzimuthKTable)) {
-    if (eCSSUnit_Enumerated == aValue.GetUnit()) {
-      PRInt32 intValue = aValue.GetIntValue();
-      if ((NS_STYLE_AZIMUTH_LEFT_SIDE <= intValue) &&
-          (intValue <= NS_STYLE_AZIMUTH_BEHIND)) {  // look for optional modifier
-        nsCSSValue  modifier;
-        if (ParseEnum(modifier, nsCSSProps::kAzimuthKTable)) {
-          PRInt32 enumValue = modifier.GetIntValue();
-          if (((intValue == NS_STYLE_AZIMUTH_BEHIND) &&
-               (NS_STYLE_AZIMUTH_LEFT_SIDE <= enumValue) && (enumValue <= NS_STYLE_AZIMUTH_RIGHT_SIDE)) ||
-              ((enumValue == NS_STYLE_AZIMUTH_BEHIND) &&
-               (NS_STYLE_AZIMUTH_LEFT_SIDE <= intValue) && (intValue <= NS_STYLE_AZIMUTH_RIGHT_SIDE))) {
-            aValue.SetIntValue(intValue | enumValue, eCSSUnit_Enumerated);
-            return PR_TRUE;
-          }
-          // Put the unknown identifier back and return
-          UngetToken();
-          return PR_FALSE;
-        }
-      }
-    }
-    return PR_TRUE;
-  }
-  return PR_FALSE;
-}
-
 static nsCSSValue
 BoxPositionMaskToCSSValue(PRInt32 aMask, PRBool isX)
 {
   PRInt32 val = NS_STYLE_BG_POSITION_CENTER;
   if (isX) {
     if (aMask & BG_LEFT) {
       val = NS_STYLE_BG_POSITION_LEFT;
     }
@@ -6980,42 +6940,16 @@ CSSParserImpl::ParseCounterData(nsCSSPro
       cur = cur->mNext;
     }
   }
   AppendValue(aPropID, value);
   return PR_TRUE;
 }
 
 PRBool
-CSSParserImpl::ParseCue()
-{
-  nsCSSValue before;
-  if (ParseSingleValueProperty(before, eCSSProperty_cue_before)) {
-    if (eCSSUnit_Inherit != before.GetUnit() &&
-        eCSSUnit_Initial != before.GetUnit()) {
-      nsCSSValue after;
-      if (ParseSingleValueProperty(after, eCSSProperty_cue_after)) {
-        if (ExpectEndProperty()) {
-          AppendValue(eCSSProperty_cue_before, before);
-          AppendValue(eCSSProperty_cue_after, after);
-          return PR_TRUE;
-        }
-        return PR_FALSE;
-      }
-    }
-    if (ExpectEndProperty()) {
-      AppendValue(eCSSProperty_cue_before, before);
-      AppendValue(eCSSProperty_cue_after, before);
-      return PR_TRUE;
-    }
-  }
-  return PR_FALSE;
-}
-
-PRBool
 CSSParserImpl::ParseCursor()
 {
   nsCSSValue value;
   if (ParseVariant(value, VARIANT_INHERIT, nsnull)) {
     // 'inherit' and 'initial' must be alone
     if (!ExpectEndProperty()) {
       return PR_FALSE;
     }
@@ -7927,41 +7861,16 @@ CSSParserImpl::ParsePadding()
   };
 
   // do this now, in case 4 values weren't specified
   InitBoxPropsAsPhysical(kPaddingSources);
   return ParseBoxProperties(kPaddingSideIDs);
 }
 
 PRBool
-CSSParserImpl::ParsePause()
-{
-  nsCSSValue  before;
-  if (ParseSingleValueProperty(before, eCSSProperty_pause_before)) {
-    if (eCSSUnit_Inherit != before.GetUnit() && eCSSUnit_Initial != before.GetUnit()) {
-      nsCSSValue after;
-      if (ParseSingleValueProperty(after, eCSSProperty_pause_after)) {
-        if (ExpectEndProperty()) {
-          AppendValue(eCSSProperty_pause_before, before);
-          AppendValue(eCSSProperty_pause_after, after);
-          return PR_TRUE;
-        }
-        return PR_FALSE;
-      }
-    }
-    if (ExpectEndProperty()) {
-      AppendValue(eCSSProperty_pause_before, before);
-      AppendValue(eCSSProperty_pause_after, before);
-      return PR_TRUE;
-    }
-  }
-  return PR_FALSE;
-}
-
-PRBool
 CSSParserImpl::ParseQuotes()
 {
   nsCSSValue value;
   if (!ParseVariant(value, VARIANT_HOS, nsnull)) {
     return PR_FALSE;
   }
   if (value.GetUnit() != eCSSUnit_String) {
     if (!ExpectEndProperty()) {
diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -449,24 +449,16 @@ CSS_PROP_DISPLAY(
     animation_timing_function,
     CSS_PROP_DOMPROP_PREFIXED(AnimationTimingFunction),
     CSS_PROPERTY_PARSE_VALUE_LIST |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     VARIANT_KEYWORD | VARIANT_TIMING_FUNCTION, // used by list parsing
     kTransitionTimingFunctionKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
-CSS_PROP_BACKENDONLY(
-    azimuth,
-    azimuth,
-    Azimuth,
-    CSS_PROPERTY_PARSE_VALUE |
-        CSS_PROPERTY_VALUE_PARSER_FUNCTION,
-    0,
-    kAzimuthKTable)
 CSS_PROP_SHORTHAND(
     background,
     background,
     Background,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_BACKGROUND(
     background-attachment,
     background_attachment,
@@ -1335,35 +1327,16 @@ CSS_PROP_CONTENT(
     counter-reset,
     counter_reset,
     CounterReset,
     CSS_PROPERTY_PARSE_FUNCTION,
     0,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 137285
-CSS_PROP_SHORTHAND(
-    cue,
-    cue,
-    Cue,
-    CSS_PROPERTY_PARSE_FUNCTION)
-CSS_PROP_BACKENDONLY(
-    cue-after,
-    cue_after,
-    CueAfter,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HUO,
-    nsnull)
-CSS_PROP_BACKENDONLY(
-    cue-before,
-    cue_before,
-    CueBefore,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HUO,
-    nsnull)
 CSS_PROP_USERINTERFACE(
     cursor,
     cursor,
     Cursor,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS |
         CSS_PROPERTY_START_IMAGE_LOADS |
         CSS_PROPERTY_IMAGE_IS_IN_ARRAY_0,
@@ -1384,23 +1357,16 @@ CSS_PROP_DISPLAY(
     display,
     display,
     Display,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kDisplayKTable,
     offsetof(nsStyleDisplay, mDisplay),
     eStyleAnimType_EnumU8)
-CSS_PROP_BACKENDONLY(
-    elevation,
-    elevation,
-    Elevation,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HK | VARIANT_ANGLE,
-    kElevationKTable)
 CSS_PROP_TABLEBORDER(
     empty-cells,
     empty_cells,
     EmptyCells,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kEmptyCellsKTable,
     CSS_PROP_NO_OFFSET,
@@ -2094,49 +2060,16 @@ CSS_PROP_DISPLAY(
     eStyleAnimType_None) // temp fix for bug 24000
 CSS_PROP_BACKENDONLY(
     page-break-inside,
     page_break_inside,
     PageBreakInside,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kPageBreakInsideKTable)
-CSS_PROP_SHORTHAND(
-    pause,
-    pause,
-    Pause,
-    CSS_PROPERTY_PARSE_FUNCTION)
-CSS_PROP_BACKENDONLY(
-    pause-after,
-    pause_after,
-    PauseAfter,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HTP,
-    nsnull)
-CSS_PROP_BACKENDONLY(
-    pause-before,
-    pause_before,
-    PauseBefore,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HTP,
-    nsnull)
-CSS_PROP_BACKENDONLY(
-    pitch,
-    pitch,
-    Pitch,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HKF,
-    kPitchKTable)
-CSS_PROP_BACKENDONLY(
-    pitch-range,
-    pitch_range,
-    PitchRange,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HN,
-    nsnull)
 CSS_PROP_VISIBILITY(
     pointer-events,
     pointer_events,
     PointerEvents,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kPointerEventsKTable,
     offsetof(nsStyleVisibility, mPointerEvents),
@@ -2163,23 +2096,16 @@ CSS_PROP_DISPLAY(
     resize,
     resize,
     Resize,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kResizeKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
-CSS_PROP_BACKENDONLY(
-    richness,
-    richness,
-    Richness,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HN,
-    nsnull)
 CSS_PROP_POSITION(
     right,
     right,
     Right,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     VARIANT_AHLP | VARIANT_CALC,
     nsnull,
@@ -2187,58 +2113,16 @@ CSS_PROP_POSITION(
     eStyleAnimType_Sides_Right)
 CSS_PROP_BACKENDONLY(
     size,
     size,
     Size,
     CSS_PROPERTY_PARSE_FUNCTION,
     0,
     kPageSizeKTable)
-CSS_PROP_BACKENDONLY(
-    speak,
-    speak,
-    Speak,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HK,
-    kSpeakKTable)
-CSS_PROP_BACKENDONLY(
-    speak-header,
-    speak_header,
-    SpeakHeader,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HK,
-    kSpeakHeaderKTable)
-CSS_PROP_BACKENDONLY(
-    speak-numeral,
-    speak_numeral,
-    SpeakNumeral,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HK,
-    kSpeakNumeralKTable)
-CSS_PROP_BACKENDONLY(
-    speak-punctuation,
-    speak_punctuation,
-    SpeakPunctuation,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HK,
-    kSpeakPunctuationKTable)
-CSS_PROP_BACKENDONLY(
-    speech-rate,
-    speech_rate,
-    SpeechRate,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HN | VARIANT_KEYWORD,
-    kSpeechRateKTable)
-CSS_PROP_BACKENDONLY(
-    stress,
-    stress,
-    Stress,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HN,
-    nsnull)
 CSS_PROP_TABLE(
     table-layout,
     table_layout,
     TableLayout,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kTableLayoutKTable,
     CSS_PROP_NO_OFFSET,
@@ -2455,31 +2339,16 @@ CSS_PROP_VISIBILITY(
     visibility,
     visibility,
     Visibility,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kVisibilityKTable,
     offsetof(nsStyleVisibility, mVisible),
     eStyleAnimType_EnumU8)  // reflow for collapse
-CSS_PROP_BACKENDONLY(
-    voice-family,
-    voice_family,
-    VoiceFamily,
-    CSS_PROPERTY_PARSE_VALUE |
-        CSS_PROPERTY_VALUE_PARSER_FUNCTION,
-    0,
-    nsnull)
-CSS_PROP_BACKENDONLY(
-    volume,
-    volume,
-    Volume,
-    CSS_PROPERTY_PARSE_VALUE,
-    VARIANT_HPN | VARIANT_KEYWORD,
-    kVolumeKTable)
 CSS_PROP_TEXT(
     white-space,
     white_space,
     WhiteSpace,
     CSS_PROPERTY_PARSE_VALUE,
     VARIANT_HK,
     kWhitespaceKTable,
     CSS_PROP_NO_OFFSET,
diff --git a/layout/style/nsCSSProps.cpp b/layout/style/nsCSSProps.cpp
--- a/layout/style/nsCSSProps.cpp
+++ b/layout/style/nsCSSProps.cpp
@@ -575,33 +575,16 @@ const PRInt32 nsCSSProps::kAppearanceKTa
   eCSSKeyword__moz_window_button_minimize,    NS_THEME_WINDOW_BUTTON_MINIMIZE,
   eCSSKeyword__moz_window_button_maximize,    NS_THEME_WINDOW_BUTTON_MAXIMIZE,
   eCSSKeyword__moz_window_button_restore,     NS_THEME_WINDOW_BUTTON_RESTORE,
   eCSSKeyword__moz_window_button_box,         NS_THEME_WINDOW_BUTTON_BOX,
   eCSSKeyword__moz_window_button_box_maximized, NS_THEME_WINDOW_BUTTON_BOX_MAXIMIZED,
   eCSSKeyword_UNKNOWN,-1
 };
 
-// Keyword id tables for variant/enum parsing
-const PRInt32 nsCSSProps::kAzimuthKTable[] = {
-  eCSSKeyword_left_side,    NS_STYLE_AZIMUTH_LEFT_SIDE,
-  eCSSKeyword_far_left,     NS_STYLE_AZIMUTH_FAR_LEFT,
-  eCSSKeyword_left,         NS_STYLE_AZIMUTH_LEFT,
-  eCSSKeyword_center_left,  NS_STYLE_AZIMUTH_CENTER_LEFT,
-  eCSSKeyword_center,       NS_STYLE_AZIMUTH_CENTER,
-  eCSSKeyword_center_right, NS_STYLE_AZIMUTH_CENTER_RIGHT,
-  eCSSKeyword_right,        NS_STYLE_AZIMUTH_RIGHT,
-  eCSSKeyword_far_right,    NS_STYLE_AZIMUTH_FAR_RIGHT,
-  eCSSKeyword_right_side,   NS_STYLE_AZIMUTH_RIGHT_SIDE,
-  eCSSKeyword_behind,       NS_STYLE_AZIMUTH_BEHIND,
-  eCSSKeyword_leftwards,    NS_STYLE_AZIMUTH_LEFTWARDS,
-  eCSSKeyword_rightwards,   NS_STYLE_AZIMUTH_RIGHTWARDS,
-  eCSSKeyword_UNKNOWN,-1
-};
-
 const PRInt32 nsCSSProps::kBackgroundAttachmentKTable[] = {
   eCSSKeyword_fixed, NS_STYLE_BG_ATTACHMENT_FIXED,
   eCSSKeyword_scroll, NS_STYLE_BG_ATTACHMENT_SCROLL,
   eCSSKeyword_UNKNOWN,-1
 };
 
 const PRInt32 nsCSSProps::kBackgroundInlinePolicyKTable[] = {
   eCSSKeyword_each_box,     NS_STYLE_BG_INLINE_POLICY_EACH_BOX,
@@ -886,25 +869,16 @@ const PRInt32 nsCSSProps::kDisplayKTable
   eCSSKeyword__moz_inline_stack,  NS_STYLE_DISPLAY_INLINE_STACK,
   eCSSKeyword__moz_deck,          NS_STYLE_DISPLAY_DECK,
   eCSSKeyword__moz_popup,         NS_STYLE_DISPLAY_POPUP,
   eCSSKeyword__moz_groupbox,      NS_STYLE_DISPLAY_GROUPBOX,
 #endif
   eCSSKeyword_UNKNOWN,-1
 };
 
-const PRInt32 nsCSSProps::kElevationKTable[] = {
-  eCSSKeyword_below,  NS_STYLE_ELEVATION_BELOW,
-  eCSSKeyword_level,  NS_STYLE_ELEVATION_LEVEL,
-  eCSSKeyword_above,  NS_STYLE_ELEVATION_ABOVE,
-  eCSSKeyword_higher, NS_STYLE_ELEVATION_HIGHER,
-  eCSSKeyword_lower,  NS_STYLE_ELEVATION_LOWER,
-  eCSSKeyword_UNKNOWN,-1
-};
-
 const PRInt32 nsCSSProps::kEmptyCellsKTable[] = {
   eCSSKeyword_show,                 NS_STYLE_TABLE_EMPTY_CELLS_SHOW,
   eCSSKeyword_hide,                 NS_STYLE_TABLE_EMPTY_CELLS_HIDE,
   eCSSKeyword__moz_show_background, NS_STYLE_TABLE_EMPTY_CELLS_SHOW_BACKGROUND,
   eCSSKeyword_UNKNOWN,-1
 };
 
 const PRInt32 nsCSSProps::kFloatKTable[] = {
@@ -1137,25 +1111,16 @@ const PRInt32 nsCSSProps::kPageMarksKTab
 };
 
 const PRInt32 nsCSSProps::kPageSizeKTable[] = {
   eCSSKeyword_landscape, NS_STYLE_PAGE_SIZE_LANDSCAPE,
   eCSSKeyword_portrait, NS_STYLE_PAGE_SIZE_PORTRAIT,
   eCSSKeyword_UNKNOWN,-1
 };
 
-const PRInt32 nsCSSProps::kPitchKTable[] = {
-  eCSSKeyword_x_low, NS_STYLE_PITCH_X_LOW,
-  eCSSKeyword_low, NS_STYLE_PITCH_LOW,
-  eCSSKeyword_medium, NS_STYLE_PITCH_MEDIUM,
-  eCSSKeyword_high, NS_STYLE_PITCH_HIGH,
-  eCSSKeyword_x_high, NS_STYLE_PITCH_X_HIGH,
-  eCSSKeyword_UNKNOWN,-1
-};
-
 const PRInt32 nsCSSProps::kPointerEventsKTable[] = {
   eCSSKeyword_none, NS_STYLE_POINTER_EVENTS_NONE,
   eCSSKeyword_visiblepainted, NS_STYLE_POINTER_EVENTS_VISIBLEPAINTED,
   eCSSKeyword_visiblefill, NS_STYLE_POINTER_EVENTS_VISIBLEFILL,
   eCSSKeyword_visiblestroke, NS_STYLE_POINTER_EVENTS_VISIBLESTROKE,
   eCSSKeyword_visible, NS_STYLE_POINTER_EVENTS_VISIBLE,
   eCSSKeyword_painted, NS_STYLE_POINTER_EVENTS_PAINTED,
   eCSSKeyword_fill, NS_STYLE_POINTER_EVENTS_FILL,
@@ -1193,52 +1158,16 @@ const PRInt32 nsCSSProps::kRadialGradien
 const PRInt32 nsCSSProps::kResizeKTable[] = {
   eCSSKeyword_none,       NS_STYLE_RESIZE_NONE,
   eCSSKeyword_both,       NS_STYLE_RESIZE_BOTH,
   eCSSKeyword_horizontal, NS_STYLE_RESIZE_HORIZONTAL,
   eCSSKeyword_vertical,   NS_STYLE_RESIZE_VERTICAL,
   eCSSKeyword_UNKNOWN,-1
 };
 
-const PRInt32 nsCSSProps::kSpeakKTable[] = {
-  eCSSKeyword_none,      NS_STYLE_SPEAK_NONE,
-  eCSSKeyword_normal,    NS_STYLE_SPEAK_NORMAL,
-  eCSSKeyword_spell_out, NS_STYLE_SPEAK_SPELL_OUT,
-  eCSSKeyword_UNKNOWN,-1
-};
-
-const PRInt32 nsCSSProps::kSpeakHeaderKTable[] = {
-  eCSSKeyword_once, NS_STYLE_SPEAK_HEADER_ONCE,
-  eCSSKeyword_always, NS_STYLE_SPEAK_HEADER_ALWAYS,
-  eCSSKeyword_UNKNOWN,-1
-};
-
-const PRInt32 nsCSSProps::kSpeakNumeralKTable[] = {
-  eCSSKeyword_digits, NS_STYLE_SPEAK_NUMERAL_DIGITS,
-  eCSSKeyword_continuous, NS_STYLE_SPEAK_NUMERAL_CONTINUOUS,
-  eCSSKeyword_UNKNOWN,-1
-};
-
-const PRInt32 nsCSSProps::kSpeakPunctuationKTable[] = {
-  eCSSKeyword_none, NS_STYLE_SPEAK_PUNCTUATION_NONE,
-  eCSSKeyword_code, NS_STYLE_SPEAK_PUNCTUATION_CODE,
-  eCSSKeyword_UNKNOWN,-1
-};
-
-const PRInt32 nsCSSProps::kSpeechRateKTable[] = {
-  eCSSKeyword_x_slow, NS_STYLE_SPEECH_RATE_X_SLOW,
-  eCSSKeyword_slow, NS_STYLE_SPEECH_RATE_SLOW,
-  eCSSKeyword_medium, NS_STYLE_SPEECH_RATE_MEDIUM,
-  eCSSKeyword_fast, NS_STYLE_SPEECH_RATE_FAST,
-  eCSSKeyword_x_fast, NS_STYLE_SPEECH_RATE_X_FAST,
-  eCSSKeyword_faster, NS_STYLE_SPEECH_RATE_FASTER,
-  eCSSKeyword_slower, NS_STYLE_SPEECH_RATE_SLOWER,
-  eCSSKeyword_UNKNOWN,-1
-};
-
 const PRInt32 nsCSSProps::kStackSizingKTable[] = {
   eCSSKeyword_ignore, NS_STYLE_STACK_SIZING_IGNORE,
   eCSSKeyword_stretch_to_fit, NS_STYLE_STACK_SIZING_STRETCH_TO_FIT,
   eCSSKeyword_UNKNOWN,-1
 };
 
 const PRInt32 nsCSSProps::kTableLayoutKTable[] = {
   eCSSKeyword_auto, NS_STYLE_TABLE_LAYOUT_AUTO,
@@ -1361,26 +1290,16 @@ const PRInt32 nsCSSProps::kVerticalAlign
 
 const PRInt32 nsCSSProps::kVisibilityKTable[] = {
   eCSSKeyword_visible, NS_STYLE_VISIBILITY_VISIBLE,
   eCSSKeyword_hidden, NS_STYLE_VISIBILITY_HIDDEN,
   eCSSKeyword_collapse, NS_STYLE_VISIBILITY_COLLAPSE,
   eCSSKeyword_UNKNOWN,-1
 };
 
-const PRInt32 nsCSSProps::kVolumeKTable[] = {
-  eCSSKeyword_silent, NS_STYLE_VOLUME_SILENT,
-  eCSSKeyword_x_soft, NS_STYLE_VOLUME_X_SOFT,
-  eCSSKeyword_soft, NS_STYLE_VOLUME_SOFT,
-  eCSSKeyword_medium, NS_STYLE_VOLUME_MEDIUM,
-  eCSSKeyword_loud, NS_STYLE_VOLUME_LOUD,
-  eCSSKeyword_x_loud, NS_STYLE_VOLUME_X_LOUD,
-  eCSSKeyword_UNKNOWN,-1
-};
-
 const PRInt32 nsCSSProps::kWhitespaceKTable[] = {
   eCSSKeyword_normal, NS_STYLE_WHITESPACE_NORMAL,
   eCSSKeyword_pre, NS_STYLE_WHITESPACE_PRE,
   eCSSKeyword_nowrap, NS_STYLE_WHITESPACE_NOWRAP,
   eCSSKeyword_pre_wrap, NS_STYLE_WHITESPACE_PRE_WRAP,
   eCSSKeyword_pre_line, NS_STYLE_WHITESPACE_PRE_LINE,
   eCSSKeyword_UNKNOWN,-1
 };
@@ -1943,22 +1862,16 @@ static const nsCSSProperty gBorderStartW
 static const nsCSSProperty gBorderEndWidthSubpropTable[] = {
   // nsCSSParser::ParseDirectionalBoxProperty depends on this order
   eCSSProperty_border_end_width_value,
   eCSSProperty_border_right_width_ltr_source,
   eCSSProperty_border_left_width_rtl_source,
   eCSSProperty_UNKNOWN
 };
 
-static const nsCSSProperty gCueSubpropTable[] = {
-  eCSSProperty_cue_after,
-  eCSSProperty_cue_before,
-  eCSSProperty_UNKNOWN
-};
-
 static const nsCSSProperty gFontSubpropTable[] = {
   eCSSProperty_font_family,
   eCSSProperty_font_style,
   eCSSProperty_font_variant,
   eCSSProperty_font_weight,
   eCSSProperty_font_size,
   eCSSProperty_line_height,
   eCSSProperty_font_size_adjust, // XXX Added LDB.
@@ -2088,22 +2001,16 @@ static const nsCSSProperty gPaddingStart
 static const nsCSSProperty gPaddingEndSubpropTable[] = {
   // nsCSSParser::ParseDirectionalBoxProperty depends on this order
   eCSSProperty_padding_end_value,
   eCSSProperty_padding_right_ltr_source,
   eCSSProperty_padding_left_rtl_source,
   eCSSProperty_UNKNOWN
 };
 
-static const nsCSSProperty gPauseSubpropTable[] = {
-  eCSSProperty_pause_after,
-  eCSSProperty_pause_before,
-  eCSSProperty_UNKNOWN
-};
-
 static const nsCSSProperty gTransitionSubpropTable[] = {
   eCSSProperty_transition_property,
   eCSSProperty_transition_duration,
   eCSSProperty_transition_timing_function,
   eCSSProperty_transition_delay,
   eCSSProperty_UNKNOWN
 };
 
diff --git a/layout/style/nsCSSValue.cpp b/layout/style/nsCSSValue.cpp
--- a/layout/style/nsCSSValue.cpp
+++ b/layout/style/nsCSSValue.cpp
@@ -801,24 +801,16 @@ nsCSSValue::AppendToString(nsCSSProperty
         intValue &= ~NS_STYLE_TEXT_DECORATION_OVERRIDE_ALL;
         nsStyleUtil::AppendBitmaskCSSValue(
           aProperty, intValue,
           NS_STYLE_TEXT_DECORATION_UNDERLINE,
           NS_STYLE_TEXT_DECORATION_PREF_ANCHORS,
           aResult);
       }
     }
-    else if (eCSSProperty_azimuth == aProperty) {
-      PRInt32 intValue = GetIntValue();
-      AppendASCIItoUTF16(nsCSSProps::LookupPropertyValue(aProperty, (intValue & ~NS_STYLE_AZIMUTH_BEHIND)), aResult);
-      if ((NS_STYLE_AZIMUTH_BEHIND & intValue) != 0) {
-        aResult.Append(PRUnichar(' '));
-        AppendASCIItoUTF16(nsCSSProps::LookupPropertyValue(aProperty, NS_STYLE_AZIMUTH_BEHIND), aResult);
-      }
-    }
     else if (eCSSProperty_marks == aProperty) {
       PRInt32 intValue = GetIntValue();
       if (intValue == NS_STYLE_PAGE_MARKS_NONE) {
         AppendASCIItoUTF16(nsCSSProps::LookupPropertyValue(aProperty, intValue),
                            aResult);
       } else {
         nsStyleUtil::AppendBitmaskCSSValue(aProperty, intValue,
                                            NS_STYLE_PAGE_MARKS_CROP,
diff --git a/layout/style/test/property_database.js b/layout/style/test/property_database.js
--- a/layout/style/test/property_database.js
+++ b/layout/style/test/property_database.js
@@ -1001,25 +1001,16 @@ var gCSSProperties = {
 	"-moz-window-shadow": {
 		domProp: "MozWindowShadow",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "default" ],
 		other_values: [ "none", "menu", "tooltip", "sheet" ],
 		invalid_values: []
 	},
-	"azimuth": {
-		domProp: "azimuth",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "center", "0deg" ],
-		other_values: [ "center behind", "behind far-right", "left-side", "73deg", "90.1deg", "0.1deg" ],
-		invalid_values: [ "0deg behind", "behind 0deg", "90deg behind", "behind 90deg" ]
-	},
 	"background": {
 		domProp: "background",
 		inherited: false,
 		type: CSS_TYPE_TRUE_SHORTHAND,
 		subproperties: [ "background-attachment", "background-color", "background-image", "background-position", "background-repeat", "background-clip", "background-origin", "background-size" ],
 		initial_values: [ "transparent", "none", "repeat", "scroll", "0% 0%", "top left", "left top", "transparent none", "top left none", "left top none", "none left top", "none top left", "none 0% 0%", "transparent none repeat scroll top left", "left top repeat none scroll transparent" ],
 		other_values: [
 				/* without multiple backgrounds */
@@ -1748,44 +1739,16 @@ var gCSSProperties = {
 	"counter-reset": {
 		domProp: "counterReset",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "none" ],
 		other_values: [ "foo 1", "bar", "foo 3 bar baz 2", "\\32  1", "-\\32  1", "-c 1", "\\32 1", "-\\32 1", "\\2  1", "-\\2  1", "-c 1", "\\2 1", "-\\2 1" ],
 		invalid_values: []
 	},
-	"cue": {
-		domProp: "cue",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_TRUE_SHORTHAND,
-		subproperties: [ "cue-before", "cue-after" ],
-		initial_values: [ "none", "none none" ],
-		other_values: [ "url(404.wav)", "url(404.wav) none", "none url(404.wav)" ],
-		invalid_values: []
-	},
-	"cue-after": {
-		domProp: "cueAfter",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "none" ],
-		other_values: [ "url(404.wav)" ],
-		invalid_values: []
-	},
-	"cue-before": {
-		domProp: "cueBefore",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "none" ],
-		other_values: [ "url(404.wav)" ],
-		invalid_values: []
-	},
 	"cursor": {
 		domProp: "cursor",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
 		other_values: [ "crosshair", "default", "pointer", "move", "e-resize", "ne-resize", "nw-resize", "n-resize", "se-resize", "sw-resize", "s-resize", "w-resize", "text", "wait", "help", "progress", "copy", "alias", "context-menu", "cell", "not-allowed", "col-resize", "row-resize", "no-drop", "vertical-text", "all-scroll", "nesw-resize", "nwse-resize", "ns-resize", "ew-resize", "none", "-moz-grab", "-moz-grabbing", "-moz-zoom-in", "-moz-zoom-out" ],
 		invalid_values: []
 	},
@@ -1802,25 +1765,16 @@ var gCSSProperties = {
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "inline" ],
 		/* XXX none will really mess with other properties */
 		prerequisites: { "float": "none", "position": "static" },
 		other_values: [ "block", "list-item", "inline-block", "table", "inline-table", "table-row-group", "table-header-group", "table-footer-group", "table-row", "table-column-group", "table-column", "table-cell", "table-caption", "none" ],
 		invalid_values: []
 	},
-	"elevation": {
-		domProp: "elevation",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "level", "0deg" ],
-		other_values: [ "below", "above", "60deg", "higher", "lower", "-79deg", "0.33deg" ],
-		invalid_values: []
-	},
 	"empty-cells": {
 		domProp: "emptyCells",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "show" ],
 		other_values: [ "hide" ],
 		invalid_values: []
 	},
@@ -2407,62 +2361,16 @@ var gCSSProperties = {
 		domProp: "pageBreakInside",
 		inherited: true,
 		backend_only: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
 		other_values: [ "avoid" ],
 		invalid_values: []
 	},
-	"pause": {
-		domProp: "pause",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_TRUE_SHORTHAND,
-		subproperties: [ "pause-before", "pause-after" ],
-		initial_values: [ "0s", "0ms", "0s 0ms" ],
-		other_values: [ "1s", "200ms", "-2s", "50%", "-10%", "10% 200ms", "-3s -5%" ],
-		invalid_values: [ "0", "0px", "0 0", "0ms 0" ]
-	},
-	"pause-after": {
-		domProp: "pauseAfter",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "0s", "0ms" ],
-		other_values: [ "1s", "200ms", "-2s", "50%", "-10%" ],
-		invalid_values: [ "0", "0px" ]
-	},
-	"pause-before": {
-		domProp: "pauseBefore",
-		inherited: false,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "0s", "0ms" ],
-		other_values: [ "1s", "200ms", "-2s", "50%", "-10%" ],
-		invalid_values: [ "0", "0px" ]
-	},
-	"pitch": {
-		domProp: "pitch",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "medium" ],
-		other_values: [ "x-low", "low", "high", "x-high" ],
-		invalid_values: []
-	},
-	"pitch-range": {
-		domProp: "pitchRange",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "50", "50.0" ],
-		other_values: [ "0", "100.0", "99.7", "47", "3.2" ],
-		invalid_values: [" -0.01", "100.2", "108", "-3" ]
-	},
 	"pointer-events": {
 		domProp: "pointerEvents",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
 		other_values: [ "visiblePainted", "visibleFill", "visibleStroke", "visible",
 						"painted", "fill", "stroke", "all", "none" ],
 		invalid_values: []
@@ -2479,25 +2387,16 @@ var gCSSProperties = {
 		domProp: "quotes",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ '"\u201C" "\u201D" "\u2018" "\u2019"',
 						  '"\\201C" "\\201D" "\\2018" "\\2019"' ],
 		other_values: [ "none", "'\"' '\"'" ],
 		invalid_values: []
 	},
-	"richness": {
-		domProp: "richness",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "50", "50.0" ],
-		other_values: [ "0", "100.0", "99.7", "47", "3.2" ],
-		invalid_values: [" -0.01", "100.2", "108", "-3" ]
-	},
 	"right": {
 		domProp: "right",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		/* FIXME: run tests with multiple prerequisites */
 		prerequisites: { "position": "relative" },
 		/* XXX 0 may or may not be equal to auto */
 		initial_values: [ "auto" ],
@@ -2519,72 +2418,16 @@ var gCSSProperties = {
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
 		other_values: [ "landscape", "portrait", "8.5in 11in", "14in 11in", "297mm 210mm", "21cm 29.7cm", "100mm" ],
 		invalid_values: [
 			// XXX spec unclear on 0s and negatives
 			"100mm 100mm 100mm"
 		]
 	},
-	"speak": {
-		domProp: "speak",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "normal" ],
-		other_values: [ "none", "spell-out" ],
-		invalid_values: []
-	},
-	"speak-header": {
-		domProp: "speakHeader",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "once" ],
-		other_values: [ "always" ],
-		invalid_values: []
-	},
-	"speak-numeral": {
-		domProp: "speakNumeral",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "continuous" ],
-		other_values: [ "digits" ],
-		invalid_values: []
-	},
-	"speak-punctuation": {
-		domProp: "speakPunctuation",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "none" ],
-		other_values: [ "code" ],
-		invalid_values: []
-	},
-	"speech-rate": {
-		domProp: "speechRate",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "medium" ],
-		other_values: [ "x-slow", "slow", "fast", "x-fast", "faster", "slower", "80", "500", "73.2" ],
-		invalid_values: [
-			// "0", "-80" // unclear
-		]
-	},
-	"stress": {
-		domProp: "stress",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "50", "50.0" ],
-		other_values: [ "0", "100.0", "99.7", "47", "3.2" ],
-		invalid_values: [" -0.01", "100.2", "108", "-3" ]
-	},
 	"table-layout": {
 		domProp: "tableLayout",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
 		other_values: [ "fixed" ],
 		invalid_values: []
 	},
@@ -2753,34 +2596,16 @@ var gCSSProperties = {
 	"visibility": {
 		domProp: "visibility",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "visible" ],
 		other_values: [ "hidden", "collapse" ],
 		invalid_values: []
 	},
-	"voice-family": {
-		domProp: "voiceFamily",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "male" ], /* arbitrary guess */
-		other_values: [ "female", "child", "Bob, male", "Jane, Juliet, female" ],
-		invalid_values: []
-	},
-	"volume": {
-		domProp: "volume",
-		inherited: true,
-		backend_only: true,
-		type: CSS_TYPE_LONGHAND,
-		initial_values: [ "50", "50.0", "medium" ],
-		other_values: [ "0", "100.0", "99.7", "47", "3.2", "silent", "x-soft", "soft", "loud", "x-loud" ],
-		invalid_values: [" -0.01", "100.2", "108", "-3" ]
-	},
 	"white-space": {
 		domProp: "whiteSpace",
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "normal" ],
 		other_values: [ "pre", "nowrap", "pre-wrap", "pre-line" ],
 		invalid_values: []
 	},

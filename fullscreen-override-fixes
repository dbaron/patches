From: L. David Baron <dbaron@dbaron.org>

Bug 839812 - Add clip-path style for fullscreen override, which was probably originally intended ("SVG masking, clipping, or filtering").  r=dholbert

diff --git a/content/html/content/test/file_fullscreen-ancestor-stacking-context.html b/content/html/content/test/file_fullscreen-ancestor-stacking-context.html
--- a/content/html/content/test/file_fullscreen-ancestor-stacking-context.html
+++ b/content/html/content/test/file_fullscreen-ancestor-stacking-context.html
@@ -31,16 +31,17 @@ https://bugzilla.mozilla.org/show_bug.cg
    Both lists should include every property that is able to induce an element
    to form a stacking context. */
 const gPropertyTestDecls = {
 //"domPropName": "prop-name: some-non-initial-value",
   "zIndex":      "z-index: 5",
   "opacity":     "opacity: 0.8",
   "mask":        "mask: url(#mymask)",
   "clip":        "clip: rect(0 0 0 0)",
+  "clipPath":    "clip-path: url(#mypath)",
   "filter":      "filter: url(#myfilter)",
   "transform":   "transform: translate(0)",
 // XXXdholbert The "will-change" line in full-screen-override.css is only
 // parsed and honored if "layout.css.will-change.enabled" is turned on
 // *at startup time* (so, flipping it here with SpecialPowers wouldn't be
 // sufficient). So, we won't get the right behavior for 'will-change' here
 // until it's enabled by default (bug 961871). This line can be uncommented
 // when that happens:
diff --git a/layout/style/full-screen-override.css b/layout/style/full-screen-override.css
--- a/layout/style/full-screen-override.css
+++ b/layout/style/full-screen-override.css
@@ -11,14 +11,16 @@
      since that would apply to the full-screen element and make the page visible
      behind it. It would also create a pseudo-stacking-context that would let content
      draw on top of the full-screen element. */
   opacity: initial !important;
   /* Ancestors of a full-screen element should not apply SVG masking, clipping, or
      filtering, since that would affect the full-screen element and create a pseudo-
      stacking context. */
   mask: initial !important;
+  clip-path: initial !important;
+  filter: initial !important;
   clip: initial !important;
-  filter: initial !important;
   transform: initial !important;
+  /* FIXME: do we need to worry about 'overflow'? */
   will-change: initial !important;
 }
 

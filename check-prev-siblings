From: L. David Baron <dbaron@dbaron.org>

Add checks to VerifyList that previous siblings match next siblings.

diff --git a/layout/generic/nsFrameList.cpp b/layout/generic/nsFrameList.cpp
--- a/layout/generic/nsFrameList.cpp
+++ b/layout/generic/nsFrameList.cpp
@@ -601,31 +601,39 @@ nsFrameList::VerifyList() const
                "bad list state");
 
   if (IsEmpty()) {
     return;
   }
 
   // Simple algorithm to find a loop in a linked list -- advance pointers
   // through it at speeds of 1 and 2, and if they ever get to be equal bail
+  NS_ASSERTION(!mFirstChild->GetPrevSibling(), "bad prev sibling pointer");
   nsIFrame *first = mFirstChild, *second = mFirstChild;
-  do {
+  for (;;) {
     first = first->GetNextSibling();
     second = second->GetNextSibling();
     if (!second) {
       break;
     }
+    NS_ASSERTION(second->GetPrevSibling()->GetNextSibling() == second,
+                 "bad prev sibling pointer");
     second = second->GetNextSibling();
     if (first == second) {
       // Loop detected!  Since second advances faster, they can't both be null;
       // we would have broken out of the loop long ago.
       NS_ERROR("loop in frame list.  This will probably hang soon.");
       return;
     }                           
-  } while (first && second);
+    if (!second) {
+      break;
+    }
+    NS_ASSERTION(second->GetPrevSibling()->GetNextSibling() == second,
+                 "bad prev sibling pointer");
+  }
 
   NS_ASSERTION(mLastChild == nsLayoutUtils::GetLastSibling(mFirstChild),
                "bogus mLastChild");
   // XXX we should also assert that all GetParent() are either null or
   // the same non-null value, but nsCSSFrameConstructor::nsFrameItems
   // prevents that, e.g. table captions.
 }
 #endif

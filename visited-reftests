From: L. David Baron <dbaron@dbaron.org>

Reftests for :visited handling.  (Bug 147777)

diff --git a/layout/reftests/css-visited/color-on-link-1.html b/layout/reftests/css-visited/color-on-link-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/color-on-link-1.html
@@ -0,0 +1,6 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link { color: fuchsia; }
+:visited { color: purple; }
+</style>
+<a href="unvisited-page.html">link</a>
diff --git a/layout/reftests/css-visited/color-on-link-before-1.html b/layout/reftests/css-visited/color-on-link-before-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/color-on-link-before-1.html
@@ -0,0 +1,6 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link:before { content: "link"; color: fuchsia; }
+:visited:before { content: "link"; color: purple; }
+</style>
+<a href="unvisited-page.html"></a>
diff --git a/layout/reftests/css-visited/color-on-visited-1.html b/layout/reftests/css-visited/color-on-visited-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/color-on-visited-1.html
@@ -0,0 +1,6 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link { color: fuchsia; }
+:visited { color: purple; }
+</style>
+<a href="visited-page.html">link</a>
diff --git a/layout/reftests/css-visited/color-on-visited-before-1.html b/layout/reftests/css-visited/color-on-visited-before-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/color-on-visited-before-1.html
@@ -0,0 +1,6 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link:before { content: "link"; color: fuchsia; }
+:visited:before { content: "link"; color: purple; }
+</style>
+<a href="visited-page.html"></a>
diff --git a/layout/reftests/css-visited/reftest.list b/layout/reftests/css-visited/reftest.list
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/reftest.list
@@ -0,0 +1,4 @@
+# Because coloring of visited links is asynchronous and does not block
+# or fire any events, the tests in this directory are not run through
+# the reftest harness.  Instead, they are run through
+# layout/style/tests/test_visited_reftests.html .
diff --git a/layout/reftests/css-visited/visited-page.html b/layout/reftests/css-visited/visited-page.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/visited-page.html
@@ -0,0 +1,1 @@
+<!DOCTYPE HTML>
diff --git a/layout/reftests/css-visited/width-on-link-1.html b/layout/reftests/css-visited/width-on-link-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/width-on-link-1.html
@@ -0,0 +1,14 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link, :visited { display: block }
+:link { width: 100px; }
+:visited { width: 200px; }
+</style>
+<table>
+  <tr>
+    <a href="unvisited-page.html"></a>
+  </tr>
+  <tr>
+    text in next cell
+  </tr>
+</table>
diff --git a/layout/reftests/css-visited/width-on-visited-1.html b/layout/reftests/css-visited/width-on-visited-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-visited/width-on-visited-1.html
@@ -0,0 +1,14 @@
+<!DOCTYPE HTML>
+<style type="text/css">
+:link, :visited { display: block }
+:link { width: 100px; }
+:visited { width: 200px; }
+</style>
+<table>
+  <tr>
+    <a href="visited-page.html"></a>
+  </tr>
+  <tr>
+    text in next cell
+  </tr>
+</table>
diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -173,16 +173,17 @@ _TEST_FILES =	test_acid3_test46.html \
 		test_units_angle.html \
 		test_units_frequency.html \
 		test_units_length.html \
 		test_units_time.html \
 		test_value_cloning.html \
 		test_value_computation.html \
 		test_value_storage.html \
 		test_visited_pref.html \
+		test_visited_reftests.html \
 		css_properties.js \
 		property_database.js \
 		descriptor_database.js \
 		unstyled.xml \
 		unstyled.css \
 		unstyled-frame.xml \
 		unstyled-frame.css \
 		redirect.sjs \
@@ -198,19 +199,26 @@ _TEST_FILES =	test_acid3_test46.html \
 		bug453896_iframe.html \
 		bug517224.sjs \
 		test_bug525952.html \
 		ccd-quirks.html \
 		ccd-standards.html \
 		ccd.sjs \
 		$(NULL)
 
+_VISITED_REFTEST_FILES = \
+		$(shell find $(topsrcdir)/layout/reftests/css-visited/ -name '*.html') \
+		$(NULL)
+
 _BROWSER_FILES = \
 		browser_bug453896.js \
 		bug453896_iframe.html \
 		media_queries_iframe.html \
 		$(NULL)
 
 libs:: $(_TEST_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
 
+libs:: $(_VISITED_REFTEST_FILES)
+	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)/css-visited/
+
 libs:: $(_BROWSER_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/browser/$(relativesrcdir)
diff --git a/layout/style/test/test_visited_reftests.html b/layout/style/test/test_visited_reftests.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_visited_reftests.html
@@ -0,0 +1,126 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=147777
+-->
+<head>
+  <title>Test for Bug 147777</title>
+  <script type="application/javascript" src="/MochiKit/packed.js"></script>
+  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="application/javascript" src="/tests/SimpleTest/WindowSnapshot.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
+</head>
+<body>
+<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=147777">Mozilla Bug 147777</a>
+<pre id="test">
+<script type="application/javascript">
+
+/** Test for Bug 147777 **/
+
+// Because link-coloring for visited links is asynchronous, running
+// reftests that involve link coloring requires that we poll for the
+// correct result until all links are styled correctly.
+
+// A requirement of these reftests is that the reference rendering is
+// styled correctly when loaded.  We only poll for the tests.
+
+var gTests = [
+  // there's also an implicit "load visited-page.html" at the start,
+  // thanks to the code below.
+  "!= color-on-link-1.html color-on-visited-1.html",
+  "!= color-on-link-before-1.html color-on-visited-before-1.html",
+  "== width-on-link-1.html width-on-visited-1.html",
+];
+
+// Maintain a reference count of how many things we're waiting for until
+// we can say the tests are done.
+var gDelayCount = 0;
+function AddFinishDependency()
+  { ++gDelayCount; }
+function RemoveFinishDependency()
+  { if (--gDelayCount == 0) SimpleTest.finish(); }
+
+function loadVisitedPage()
+{
+  var element = document.createElement("iframe");
+  element.addEventListener("load", visitedPageLoad, false);
+  element.src = "css-visited/visited-page.html";
+  document.body.appendChild(element);
+  AddFinishDependency();
+}
+
+function visitedPageLoad()
+{
+  for (var i = 0; i < gTests.length; ++i) {
+    startTest(gTests[i]);
+  }
+  RemoveFinishDependency();
+}
+
+function takeSnapshot(iframe_element)
+{
+  return snapshotWindow(iframe_element.contentWindow, false);
+}
+
+function passes(op, shot1, shot2)
+{
+  var [correct, s1, s2] = compareSnapshots(shot1, shot2, op == "==");
+  return correct;
+}
+
+function startTest(testLine)
+{
+  var splitData = testLine.split(" ");
+  var testData =
+    { op: splitData[0], test: splitData[1], reference: splitData[2] };
+
+  // Maintain state specific to this test in the closure exposed to all
+  // the functions nested inside this one.
+
+  function startIframe(url)
+  {
+    var element = document.createElement("iframe");
+    element.addEventListener("load", handleLoad, false);
+    element.src = "css-visited/" + url;
+    document.body.appendChild(element);
+    function handleLoad(event)
+    {
+      iframe.loaded = true;
+      iframe.snapshot = takeSnapshot(element);
+      var other = (iframe == test) ? reference : test;
+      if (other.loaded) {
+        checkTest();
+      }
+    }
+    function checkTest()
+    {
+      var other = (iframe == test) ? reference : test;
+      if (passes(testData.op, iframe.snapshot, other.snapshot)) {
+        reportSuccess();
+      } else {
+        // Links might not have been colored yet.  Try again in 100ms.
+        setTimeout(checkTest, 100);
+      }
+    }
+    function reportSuccess()
+    {
+      RemoveFinishDependency();
+      ok(true, testData.op + " " + testData.test + " " + testData.reference);
+    }
+    var iframe = { element: element, loaded: false };
+
+    return iframe;
+  }
+
+  AddFinishDependency();
+  var test = startIframe(testData.test);
+  var reference = startIframe(testData.reference);
+}
+
+SimpleTest.waitForExplicitFinish();
+loadVisitedPage();
+
+</script>
+</pre>
+</body>
+</html>

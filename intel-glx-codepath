From: L. David Baron <dbaron@dbaron.org>

Intel needs to follow this ATI codepath as well.  Not sure what the right approach is here, though.  (Bug 605992)

diff --git a/gfx/thebes/GLContextProviderGLX.cpp b/gfx/thebes/GLContextProviderGLX.cpp
--- a/gfx/thebes/GLContextProviderGLX.cpp
+++ b/gfx/thebes/GLContextProviderGLX.cpp
@@ -511,17 +511,18 @@ GLContextProviderGLX::CreateForWindow(ns
     // is a relatively safe intermediate step.
 
     Display *display = (Display*)aWidget->GetNativeData(NS_NATIVE_DISPLAY); 
     int xscreen = DefaultScreen(display);
     Window window = GET_NATIVE_WINDOW(aWidget);
 
     int numConfigs;
     ScopedXFree<GLXFBConfig> cfgs;
-    if (gIsATI || !GLXVersionCheck(1, 3)) {
+    bool chooseFBConfig = gIsATI || !GLXVersionCheck(1, 3);
+    if (chooseFBConfig) {
         const int attribs[] = {
             GLX_DOUBLEBUFFER, False,
             0
         };
         cfgs = sGLXLibrary.xChooseFBConfig(display,
                                            xscreen,
                                            attribs,
                                            &numConfigs);
@@ -546,17 +547,17 @@ GLContextProviderGLX::CreateForWindow(ns
         return nsnull;
     }
     const VisualID widgetVisualID = XVisualIDFromVisual(widgetAttrs.visual);
 #ifdef DEBUG
     printf("[GLX] widget has VisualID 0x%lx\n", widgetVisualID);
 #endif
 
     ScopedXFree<XVisualInfo> vi;
-    if (gIsATI) {
+    if (chooseFBConfig) {
         XVisualInfo vinfo_template;
         int nvisuals;
         vinfo_template.visual   = widgetAttrs.visual;
         vinfo_template.visualid = XVisualIDFromVisual(vinfo_template.visual);
         vinfo_template.depth    = widgetAttrs.depth;
         vinfo_template.screen   = xscreen;
         vi = XGetVisualInfo(display, VisualIDMask|VisualDepthMask|VisualScreenMask,
                             &vinfo_template, &nvisuals);
@@ -566,17 +567,17 @@ GLContextProviderGLX::CreateForWindow(ns
     int matchIndex = -1;
     ScopedXFree<XVisualInfo> vinfo;
 
     for (int i = 0; i < numConfigs; i++) {
         vinfo = sGLXLibrary.xGetVisualFromFBConfig(display, cfgs[i]);
         if (!vinfo) {
             continue;
         }
-        if (gIsATI) {
+        if (chooseFBConfig) {
             if (AreCompatibleVisuals(vi, vinfo)) {
                 matchIndex = i;
                 break;
             }
         } else {
             if (widgetVisualID == vinfo->visualid) {
                 matchIndex = i;
                 break;

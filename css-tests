Add some tests for CSS parsing and data storage.

diff --git a/layout/style/test/ListCSSProperties.cpp b/layout/style/test/ListCSSProperties.cpp
new file mode 100644
--- /dev/null
+++ b/layout/style/test/ListCSSProperties.cpp
@@ -0,0 +1,102 @@
+/* vim: set shiftwidth=4 tabstop=8 autoindent cindent expandtab: */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is ListCSSProperties.
+ *
+ * The Initial Developer of the Original Code is the Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   L. David Baron <dbaron@dbaron.org>, Mozilla Corporation (original author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include <stdio.h>
+#include <string.h>
+
+struct PropertyInfo {
+    const char *propName;
+    const char *domName;
+};
+
+/* excludes shorthand properties */
+const PropertyInfo gLonghandProperties[] = {
+
+#define CSS_PROP_NOTIMPLEMENTED(name_, id_, method_) \
+    { #name_, #method_ },
+#define CSS_PROP(name_, id_, method_, datastruct_, member_, type_, kwtable_) \
+    { #name_, #method_ },
+
+#include "nsCSSPropList.h"
+
+#undef CSS_PROP_NOTIMPLEMENTED
+#undef CSS_PROP
+
+};
+
+const PropertyInfo gShorthandProperties[] = {
+
+#define CSS_PROP_SHORTHAND(name_, id_, method_) \
+    { #name_, #method_ },
+
+#include "nsCSSPropList.h"
+
+#undef CSS_PROP_SHORTHAND
+
+};
+
+#define ARRAY_LENGTH(a_) (sizeof(a_)/sizeof((a_)[0]))
+
+void
+print_array(const char *aName, const PropertyInfo *aProps, int aLength)
+{
+    printf("var %s = [\n", aName);
+
+    for (int i = 0;;) {
+        const PropertyInfo *p = aProps + i;
+        if (strcmp(p->domName, "X") == 0) {
+            printf("\t{ name: \"%s\", prop: null}", p->propName);
+        } else {
+            printf("\t{ name: \"%s\", prop: \"%s\"}", p->propName, p->domName);
+        }
+        if (++i == aLength)
+            break;
+        printf(",\n");
+    }
+
+    printf("\n];\n\n");
+}
+
+int
+main()
+{
+    print_array("gLonghandProperties", gLonghandProperties,
+                ARRAY_LENGTH(gLonghandProperties));
+    print_array("gShorthandProperties", gShorthandProperties,
+                ARRAY_LENGTH(gShorthandProperties));
+    return 0;
+}
diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -42,14 +42,31 @@ relativesrcdir  = layout/style/test
 relativesrcdir  = layout/style/test
 
 include $(DEPTH)/config/autoconf.mk
+
+MODULE		= layout
+
+CPPSRCS		= \
+		ListCSSProperties.cpp \
+		$(NULL)
+
+SIMPLE_PROGRAMS	= $(CPPSRCS:.cpp=$(BIN_SUFFIX))
+
 include $(topsrcdir)/config/rules.mk
+
+css_properties.js: ListCSSProperties$(BIN_SUFFIX) css_properties_like_longhand.js Makefile
+	$(RM) $@
+	./ListCSSProperties$(BIN_SUFFIX) > $@
+	cat $(srcdir)/css_properties_like_longhand.js >> $@
 
 _TEST_FILES = 	test_bug302186.html \
 		test_bug319381.html \
 		test_bug365932.html \
 		test_bug372770.html \
 		test_bug373293.html \
+		test_inherit_storage.html \
+		css_properties.js \
 		$(NULL)
+
 
 libs:: $(_TEST_FILES)
 	$(INSTALL) $^ $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
diff --git a/layout/style/test/css_properties_like_longhand.js b/layout/style/test/css_properties_like_longhand.js
new file mode 100644
--- /dev/null
+++ b/layout/style/test/css_properties_like_longhand.js
@@ -0,0 +1,12 @@
+var gShorthandPropertiesLikeLonghand = [
+	{ name: "background-position", prop: "BackgroundPosition"},
+	{ name: "-moz-margin-end", prop: "MozMarginEnd"},
+	{ name: "margin-left", prop: "MarginLeft"},
+	{ name: "margin-right", prop: "MarginRight"},
+	{ name: "-moz-margin-start", prop: "MozMarginStart"},
+	{ name: "overflow", prop: "Overflow"},
+	{ name: "-moz-padding-end", prop: "MozPaddingEnd"},
+	{ name: "padding-left", prop: "PaddingLeft"},
+	{ name: "padding-right", prop: "PaddingRight"},
+	{ name: "-moz-padding-start", prop: "MozPaddingStart"},
+];
diff --git a/layout/style/test/test_inherit_storage.html b/layout/style/test/test_inherit_storage.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_inherit_storage.html
@@ -0,0 +1,56 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Test for parsing and storage of CSS 'inherit'</title>
+  <script type="text/javascript" src="/MochiKit/MochiKit.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="css_properties.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+</head>
+<body>
+<p id="display"></p>
+<div id="content" style="display: none">
+
+<div id="testnode"></div>
+  
+</div>
+<pre id="test">
+<script class="testbody" type="text/javascript">
+
+/** Test for parsing and storage of CSS 'inherit' **/
+
+var gDeclaration = document.getElementById("testnode").style;
+
+for (var idx in gLonghandProperties)
+  test_property(gLonghandProperties[idx]);
+for (var idx in gShorthandPropertiesLikeLonghand)
+  test_property(gShorthandPropertiesLikeLonghand[idx]);
+
+function test_property(property)
+{
+  var pass = true;
+
+  if (property.prop)
+    pass = pass && gDeclaration[property.prop] == "";
+  pass = pass && gDeclaration.getPropertyValue(property.name) == "";
+
+  gDeclaration.setProperty(property.name, "inherit", "");
+
+  if (property.prop)
+    pass = pass && gDeclaration[property.prop] == "inherit";
+  pass = pass && gDeclaration.getPropertyValue(property.name) == "inherit";
+
+  gDeclaration.removeProperty(property.name);
+
+  if (property.prop)
+    pass = pass && gDeclaration[property.prop] == "";
+  pass = pass && gDeclaration.getPropertyValue(property.name) == "";
+
+  ok(pass, "inherit parsed and stored for CSS '" + property.name + "'");
+}
+
+</script>
+</pre>
+</body>
+</html>
+

Finish the deflated string cache after uninterning atoms, so we don't leak their associated strings.

diff --git a/js/src/jsapi.c b/js/src/jsapi.c
--- a/js/src/jsapi.c
+++ b/js/src/jsapi.c
@@ -771,6 +771,11 @@ JS_DestroyRuntime(JSRuntime *rt)
 
     js_FreeRuntimeScriptState(rt);
     js_FinishAtomState(rt);
+    /*
+     * Finish the deflated string cache after the last GC and after
+     * calling js_FinishAtomState, which finalizes strings.
+     */
+    js_FinishDeflatedStringCache(rt);
     js_FinishGC(rt);
 #ifdef JS_THREADSAFE
     if (rt->gcLock)
diff --git a/js/src/jscntxt.c b/js/src/jscntxt.c
--- a/js/src/jscntxt.c
+++ b/js/src/jscntxt.c
@@ -408,12 +408,6 @@ js_DestroyContext(JSContext *cx, JSDestr
         /* Free the script filename table if it exists and is empty. */
         if (rt->scriptFilenameTable && rt->scriptFilenameTable->nentries == 0)
             js_FinishRuntimeScriptState(rt);
-
-        /*
-         * Free the deflated string cache, but only after the last GC has
-         * collected all unleaked strings.
-         */
-        js_FinishDeflatedStringCache(rt);
 
         /*
          * Free unit string storage only after the last GC has completed, so

From: L. David Baron <dbaron@dbaron.org>

Add test for rule serialization to catch any bugs in DocumentRule::GetCssText that are like the bug in the DEBUG-only DocumentRule::List in the initial patch for bug 398962.

diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -153,16 +153,17 @@ _TEST_FILES =	test_acid3_test46.html \
 		test_parse_rule.html \
 		test_parse_url.html \
 		test_pixel_lengths.html \
 		test_pointer-events.html \
 		test_property_database.html \
 		test_priority_preservation.html \
 		test_property_syntax_errors.html \
 		test_rem_unit.html \
+		test_rule_serialization.html \
 		test_rules_out_of_sheets.html \
 		test_selectors.html \
 		test_selectors_on_anonymous_content.html \
 		test_shorthand_property_getters.html \
 		test_style_struct_copy_constructors.html \
 		test_system_font_serialization.html \
 		test_transitions_and_zoom.html \
 		test_transitions_cancel_near_end.html \
diff --git a/layout/style/test/test_rule_serialization.html b/layout/style/test/test_rule_serialization.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_rule_serialization.html
@@ -0,0 +1,54 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=
+-->
+<head>
+  <title>Test for Bug </title>
+  <script type="application/javascript" src="/MochiKit/packed.js"></script>
+  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
+  <style type="text/css" id="style"></style>
+</head>
+<body>
+<pre id="test">
+<script type="application/javascript">
+
+var rules = [
+  { rule: "@-moz-document url(http://www.example.com/) {}" },
+  { rule: "@-moz-document url('http://www.example.com/') {}" },
+  { rule: '@-moz-document url("http://www.example.com/") {}' },
+  { rule: "@-moz-document url-prefix('http://www.example.com/') {}" },
+  { rule: '@-moz-document url-prefix("http://www.example.com/") {}' },
+  { rule: "@-moz-document domain('example.com') {}" },
+  { rule: '@-moz-document domain("example.com") {}' },
+  { rule: "@-moz-document regexp('http://www.w3.org/TR/\\d{4}/[^/]*-CSS2-\\d{8}/') {}" },
+  { rule: '@-moz-document regexp("http://www.w3.org/TR/\\d{4}/[^/]*-CSS2-\\d{8}/") {}' },
+];
+
+var style = document.getElementById("style");
+var style_text = document.createTextNode("");
+style.appendChild(style_text);
+
+for (var i in rules) {
+  var obj = rules[i];
+  var rule = obj.rule;
+
+  style_text.data = rule;
+  is(style.sheet.cssRules.length, 1, "should have one rule");
+  var ser1 = style.sheet.cssRules[0].cssText;
+  if ("is_canonical" in obj) {
+    is(ser1, rule, "rule '" + rule + "' should serialize to itself");
+  }
+
+  style_text.data = ser1;
+  is(style.sheet.cssRules.length, 1, "should have one rule");
+  var ser2 = style.sheet.cssRules[0].cssText;
+  is(ser2, ser1,
+     "parse+serialize for rule '" + rule + "' should be idempotent");
+}
+
+</script>
+</pre>
+</body>
+</html>

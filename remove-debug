From: L. David Baron <dbaron@dbaron.org>

Bug 914253 patch 7 - Remove some debugging code and the remnants of the old address adjustment code.  No review.

DONTBUILD

diff --git a/tools/rb/fix_linux_stack.py b/tools/rb/fix_linux_stack.py
--- a/tools/rb/fix_linux_stack.py
+++ b/tools/rb/fix_linux_stack.py
@@ -121,20 +121,16 @@ def separate_debug_file_for(file):
 
     buildid = elf_section(file, ".note.gnu.build-id");
     if buildid is not None:
         # The build ID is an ELF note section, so it begins with a
         # name size (4), a description size (size of contents), a
         # type (3), and the name "GNU\0".
         note_header = buildid[0:16]
         buildid = buildid[16:]
-        #print word32(note_header[0:4])
-        #print word32(note_header[4:8])
-        #print len(buildid)
-        #print word32(note_header[8:12])
         if word32(note_header[0:4]) != 4 or \
            word32(note_header[4:8]) != len(buildid) or \
            word32(note_header[8:12]) != 3 or \
            note_header[12:16] != "GNU\0":
             sys.stderr.write("malformed .note.gnu.build_id in " + file + "\n")
         else:
             buildid = "".join(map(lambda ch: "%02X" % ord(ch), buildid)).lower()
             f = os.path.join(global_debug_dir, ".build-id", buildid[0:2], buildid[2:] + ".debug")
@@ -231,20 +227,18 @@ line_re = re.compile("^(.*) ?\[([^ ]*) \
 balance_tree_re = re.compile("^([ \|0-9-]*)")
 
 def fixSymbols(line):
     result = line_re.match(line)
     if result is not None:
         # before allows preservation of balance trees
         # after allows preservation of counts
         (before, file, address, after) = result.groups()
-        #address = int(address, 16)
 
         if os.path.exists(file) and os.path.isfile(file):
-            #address += address_adjustment(file)
             (name, fileline) = addressToSymbol(file, address)
             info = "%s (%s)" % (name, fileline)
 
             # throw away the bad symbol, but keep balance tree structure
             before = balance_tree_re.match(before).groups()[0]
 
             return before + info + after + "\n"
         else:

Hacks to get pango to shutdown more cleanly and thus allow us to shut down fontconfig.

diff --git a/gfx/thebes/src/gfxPangoFonts.cpp b/gfx/thebes/src/gfxPangoFonts.cpp
--- a/gfx/thebes/src/gfxPangoFonts.cpp
+++ b/gfx/thebes/src/gfxPangoFonts.cpp
@@ -600,19 +600,27 @@ gfxPangoFont::Shutdown()
 gfxPangoFont::Shutdown()
 {
     gfxPangoFontCache::Shutdown();
 
     // This just cleans up memory used by Pango's caches and may cause an
     // assert and crash in cairo (Bug 399556), so only do this when we care
     // about cleaning up memory on shutdown.
 #if defined(DEBUG) || defined(NS_BUILD_REFCNT_LOGGING) || defined(NS_TRACE_MALLOC)
+    // Do some shutdown of the fontmap, which clears a bunch of circular
+    // references from the fontmap to itself.  The shutdown that this
+    // does is much less than what's done by the fontmap's finalize,
+    // though.
     PangoFontMap *fontmap = pango_cairo_font_map_get_default ();
     if (PANGO_IS_FC_FONT_MAP (fontmap))
         pango_fc_font_map_shutdown (PANGO_FC_FONT_MAP (fontmap));
+
+    // And then free the reference in the static (hope nobody else needs
+    // it!)
+    g_object_unref (fontmap);
 #endif
 }
 
 static PangoStyle
 ThebesStyleToPangoStyle (const gfxFontStyle *fs)
 {
     if (fs->style == FONT_STYLE_ITALIC)
         return PANGO_STYLE_ITALIC;
diff --git a/gfx/thebes/src/gfxPlatform.cpp b/gfx/thebes/src/gfxPlatform.cpp
--- a/gfx/thebes/src/gfxPlatform.cpp
+++ b/gfx/thebes/src/gfxPlatform.cpp
@@ -223,24 +223,16 @@ gfxPlatform::~gfxPlatform()
     // The cairo folks think we should only clean up in debug builds,
     // but we're generally in the habit of trying to shut down as
     // cleanly as possible even in production code, so call this
     // cairo_debug_* function unconditionally.
     //
     // because cairo can assert and thus crash on shutdown, don't do this in release builds
 #if MOZ_TREE_CAIRO && (defined(DEBUG) || defined(NS_BUILD_REFCNT_LOGGING) || defined(NS_TRACE_MALLOC))
     cairo_debug_reset_static_data();
-#endif
-
-#if 0
-    // It would be nice to do this (although it might need to be after
-    // the cairo shutdown that happens in ~gfxPlatform).  It even looks
-    // idempotent.  But it has fatal assertions that fire if stuff is
-    // leaked, and we hit them.
-    FcFini();
 #endif
 }
 
 PRBool
 gfxPlatform::UseGlitz()
 {
 #ifdef MOZ_ENABLE_GLITZ
     if (gGlitzState == -1) {
diff --git a/gfx/thebes/src/gfxPlatformGtk.cpp b/gfx/thebes/src/gfxPlatformGtk.cpp
--- a/gfx/thebes/src/gfxPlatformGtk.cpp
+++ b/gfx/thebes/src/gfxPlatformGtk.cpp
@@ -90,24 +90,16 @@ gfxPlatformGtk::gfxPlatformGtk()
 }
 
 gfxPlatformGtk::~gfxPlatformGtk()
 {
     gfxFontconfigUtils::Shutdown();
     sFontconfigUtils = nsnull;
 
     gfxPangoFont::Shutdown();
-
-#if 0
-    // It would be nice to do this (although it might need to be after
-    // the cairo shutdown that happens in ~gfxPlatform).  It even looks
-    // idempotent.  But it has fatal assertions that fire if stuff is
-    // leaked, and we hit them.
-    FcFini();
-#endif
 }
 
 already_AddRefed<gfxASurface>
 gfxPlatformGtk::CreateOffscreenSurface(const gfxIntSize& size,
                                        gfxASurface::gfxImageFormat imageFormat)
 {
     nsRefPtr<gfxASurface> newSurface = nsnull;
 
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -266,16 +266,17 @@ static char gToolkitBuildID[40];
 
 static int    gRestartArgc;
 static char **gRestartArgv;
 
 #if defined(MOZ_WIDGET_GTK2)
 #include <gtk/gtk.h>
 #include <gdk/gdkx.h>
 #include "nsGTKToolkit.h"
+#include <fontconfig/fontconfig.h>
 #endif
 
 // Save the given word to the specified environment variable.
 static void
 SaveWordToEnv(const char *name, const nsACString & word)
 {
   char *expr = PR_smprintf("%s=%s", name, PromiseFlatCString(word).get());
   if (expr)
@@ -2389,16 +2390,17 @@ static void MOZ_gdk_display_close(GdkDis
       XCloseDisplay(dpy);
   }
   else {
     if (!theme_is_qt)
       gdk_display_close(display);
 #if GTK_CHECK_VERSION(2,8,0) && \
   (defined(DEBUG) || defined(NS_BUILD_REFCNT_LOGGING) || defined(NS_TRACE_MALLOC))
     cairo_debug_reset_static_data();
+    FcFini();
 #endif
   }
 }
 #endif // MOZ_WIDGET_GTK2
 
 /** 
  * NSPR will search for the "nspr_use_zone_allocator" symbol throughout
  * the process and use it to determine whether the application defines its own

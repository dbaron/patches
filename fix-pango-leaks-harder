From: L. David Baron <dbaron@dbaron.org>

Hacks to get pango to shutdown more cleanly and thus allow us to shut down fontconfig.

diff --git a/gfx/thebes/gfxPlatform.cpp b/gfx/thebes/gfxPlatform.cpp
--- a/gfx/thebes/gfxPlatform.cpp
+++ b/gfx/thebes/gfxPlatform.cpp
@@ -318,24 +318,16 @@ gfxPlatform::~gfxPlatform()
     // but we're generally in the habit of trying to shut down as
     // cleanly as possible even in production code, so call this
     // cairo_debug_* function unconditionally.
     //
     // because cairo can assert and thus crash on shutdown, don't do this in release builds
 #if MOZ_TREE_CAIRO && (defined(DEBUG) || defined(NS_BUILD_REFCNT_LOGGING) || defined(NS_TRACE_MALLOC))
     cairo_debug_reset_static_data();
 #endif
-
-#if 0
-    // It would be nice to do this (although it might need to be after
-    // the cairo shutdown that happens in ~gfxPlatform).  It even looks
-    // idempotent.  But it has fatal assertions that fire if stuff is
-    // leaked, and we hit them.
-    FcFini();
-#endif
 }
 
 already_AddRefed<gfxASurface>
 gfxPlatform::OptimizeImage(gfxImageSurface *aSurface,
                            gfxASurface::gfxImageFormat format)
 {
     const gfxIntSize& surfaceSize = aSurface->GetSize();
 
diff --git a/gfx/thebes/gfxPlatformGtk.cpp b/gfx/thebes/gfxPlatformGtk.cpp
--- a/gfx/thebes/gfxPlatformGtk.cpp
+++ b/gfx/thebes/gfxPlatformGtk.cpp
@@ -144,24 +144,16 @@ gfxPlatformGtk::~gfxPlatformGtk()
     delete gPrefFonts;
     gPrefFonts = NULL;
     delete gCodepointsWithNoFonts;
     gCodepointsWithNoFonts = NULL;
 
     FT_Done_FreeType(gPlatformFTLibrary);
     gPlatformFTLibrary = NULL;
 #endif
-
-#if 0
-    // It would be nice to do this (although it might need to be after
-    // the cairo shutdown that happens in ~gfxPlatform).  It even looks
-    // idempotent.  But it has fatal assertions that fire if stuff is
-    // leaked, and we hit them.
-    FcFini();
-#endif
 }
 
 already_AddRefed<gfxASurface>
 gfxPlatformGtk::CreateOffscreenSurface(const gfxIntSize& size,
                                        gfxASurface::gfxImageFormat imageFormat)
 {
     nsRefPtr<gfxASurface> newSurface = nsnull;
 #ifdef MOZ_X11
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -266,16 +266,17 @@ static char **gRestartArgv;
 #define PANGO_ENABLE_BACKEND
 #include <pango/pangofc-fontmap.h>
 #endif
 #include <gtk/gtk.h>
 #ifdef MOZ_X11
 #include <gdk/gdkx.h>
 #endif /* MOZ_X11 */
 #include "nsGTKToolkit.h"
+#include <fontconfig/fontconfig.h>
 #endif
 
 // Save literal putenv string to environment variable.
 static void
 SaveToEnv(const char *putenv)
 {
   char *expr = strdup(putenv);
   if (expr)
@@ -2647,24 +2648,26 @@ static void MOZ_gdk_display_close(GdkDis
         pango_fc_font_map_shutdown(PANGO_FC_FONT_MAP(fontmap));
     g_object_unref(pangoContext);
     // PangoCairo still holds a reference to the fontmap.
     // Now that we have finished with GTK and Pango, we could unref fontmap,
     // which would allow us to call FcFini, but removing what is really
     // Pango's ref feels a bit evil.  Pango-1.22 will have support for
     // pango_cairo_font_map_set_default(NULL), which would release the
     // reference on the old fontmap.
+    g_object_unref (fontmap);
 
 #if GTK_CHECK_VERSION(2,8,0)
     // cairo_debug_reset_static_data() is prototyped through cairo.h included
     // by gtk.h.
 #ifdef cairo_debug_reset_static_data
 #error "Looks like we're including Mozilla's cairo instead of system cairo"
 #endif
     cairo_debug_reset_static_data();
+    FcFini();
 #endif // 2.8.0
 #endif // CLEANUP_MEMORY
 
     if (buggyCairoShutdown) {
       if (!theme_is_qt)
         gdk_display_close(display);
     }
   }

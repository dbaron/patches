From: L. David Baron <dbaron@dbaron.org>

Bug 1388840 - Proposed calc() changes for https://github.com/w3c/csswg-drafts/issues/765 .

MozReview-Commit-ID: 8fxzak3SzRD

diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -5053,17 +5053,26 @@ AddIntrinsicSizeOffset(gfxContext* aRend
        (aStyleSize.HasPercent() &&
         FormControlShrinksForPercentISize(aFrame)))) {
     // A percentage width or max-width on replaced elements means they
     // can shrink to 0.
     // This is also true for percentage widths (but not max-widths) on
     // text inputs.
     // Note that if this is max-width, this overrides the fixed-width
     // rule in the next condition.
-    result = 0; // let |min| handle padding/border/margin
+
+    // If this is a calc() expression with a percent, we only want the
+    // percent part shrink to 0.
+    nscoord sizeCoord = aStyleSize.IsCalcUnit()
+      ? std::max(nsRuleNode::ComputeComputedCalc(aStyleSize, 0), 0) : 0;
+    nscoord maxSizeCoord = aStyleMaxSize.IsCalcUnit()
+      ? std::max(nsRuleNode::ComputeComputedCalc(aStyleMaxSize, 0), 0) : 0;
+    result = std::min(sizeCoord, maxSizeCoord);
+
+    // let |min| handle padding/border/margin
   } else if (GetAbsoluteCoord(aStyleSize, size) ||
              GetIntrinsicCoord(aStyleSize, aRenderingContext, aFrame,
                                PROP_WIDTH, size)) {
     result = size + coordOutsideSize;
     if (shouldAddPercent) {
       result = nsLayoutUtils::AddPercents(result, pctOutsideSize);
     }
   } else {

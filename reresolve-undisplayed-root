When re-resolving style, re-resolve root in undisplayed map too.  (Bug 473042)

diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -266,16 +266,20 @@ public:
   nsIFrame* GetInitialContainingBlock() { return mInitialContainingBlock; }
   // This returns the outermost frame for the root element
   nsIFrame* GetRootElementFrame() { return mInitialContainingBlock; }
   // This returns the frame for the root element that does not
   // have a psuedo-element style
   nsIFrame* GetRootElementStyleFrame() { return mRootElementStyleFrame; }
   nsIFrame* GetPageSequenceFrame() { return mPageSequenceFrame; }
 
+  // Get the frame that is the parent of the root element.
+  nsIFrame* GetDocElementContainingBlock()
+    { return mDocElementContainingBlock; }
+
 private:
 
   nsresult ReconstructDocElementHierarchyInternal();
 
   nsresult ReinsertContent(nsIContent*    aContainer,
                            nsIContent*    aChild);
 
   nsresult ConstructPageFrame(nsIPresShell*  aPresShell, 
diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -1262,20 +1262,28 @@ nsFrameManager::ReResolveStyleContext(ns
         }
       }
       else {
         break;
       }
     }
 
     // now look for undisplayed child content and pseudos
-    if (!pseudoTag && localContent && mUndisplayedMap) {
+    if ((!pseudoTag ||
+         // We need to reresolve the root if it's undisplayed.
+         (!localContent && aFrame == mPresShell->FrameConstructor()->
+                                       GetDocElementContainingBlock())) &&
+        mUndisplayedMap) {
       for (UndisplayedNode* undisplayed =
                                    mUndisplayedMap->GetFirstNode(localContent);
            undisplayed; undisplayed = undisplayed->mNext) {
+        NS_ASSERTION(localContent ||
+                     undisplayed->mContent ==
+                       mPresShell->GetDocument()->GetRootContent(),
+                     "undisplayed node child of null must be root");
         nsRefPtr<nsStyleContext> undisplayedContext;
         nsIAtom* const undisplayedPseudoTag = undisplayed->mStyle->GetPseudoType();
         if (!undisplayedPseudoTag) {  // child content
           undisplayedContext = styleSet->ResolveStyleFor(undisplayed->mContent,
                                                          newContext);
         }
         else if (undisplayedPseudoTag == nsCSSAnonBoxes::mozNonElement) {
           undisplayedContext = styleSet->ResolveStyleForNonElement(newContext);

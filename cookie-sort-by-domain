Sort cookie sites in cookie manager by domain components.  (Bug 142179)

diff --git a/browser/components/preferences/permissions.xul b/browser/components/preferences/permissions.xul
--- a/browser/components/preferences/permissions.xul
+++ b/browser/components/preferences/permissions.xul
@@ -82,16 +82,17 @@
     </hbox>
     <separator class="thin"/>
     <tree id="permissionsTree" flex="1" style="height: 18em;"
           hidecolumnpicker="true"
           onkeypress="gPermissionManager.onPermissionKeyPress(event)"
           onselect="gPermissionManager.onPermissionSelected();">
       <treecols>
         <treecol id="siteCol" label="&treehead.sitename.label;" flex="3"
+                 style="text-align: right"
                 onclick="gPermissionManager.onPermissionSort('rawHost');" persist="width"/>
         <splitter class="tree-splitter"/>
         <treecol id="statusCol" label="&treehead.status.label;" flex="1"
                 onclick="gPermissionManager.onPermissionSort('capability');" persist="width"/>
       </treecols>
       <treechildren/>
     </tree>
   </vbox>
diff --git a/browser/components/preferences/permissionsutils.js b/browser/components/preferences/permissionsutils.js
--- a/browser/components/preferences/permissionsutils.js
+++ b/browser/components/preferences/permissionsutils.js
@@ -82,17 +82,28 @@ var gTreeUtils = {
     }
     selection.selectEventsSuppressed = false;
   },
   
   sort: function (aTree, aView, aDataSet, aColumn, 
                   aLastSortColumn, aLastSortAscending) 
   {
     var ascending = (aColumn == aLastSortColumn) ? !aLastSortAscending : true;
-    aDataSet.sort(function (a, b) { return a[aColumn].toLowerCase().localeCompare(b[aColumn].toLowerCase()); });
+    var compareFunc;
+    if (aColumn == "rawHost") {
+      // sort by components of domain name, from last to first
+      compareFunc = function(a, b) {
+        return a[aColumn].toLowerCase().split(".").reverse().join(".").
+          localeCompare(
+            b[aColumn].toLowerCase().split(".").reverse().join("."));
+      };
+    } else {
+      compareFunc = function (a, b) { return a[aColumn].toLowerCase().localeCompare(b[aColumn].toLowerCase()); };
+    }
+    aDataSet.sort(compareFunc);
     if (!ascending)
       aDataSet.reverse();
     
     aTree.view.selection.select(-1);
     aTree.view.selection.select(0);
     aTree.treeBoxObject.invalidate();
     aTree.treeBoxObject.ensureRowIsVisible(0);
     

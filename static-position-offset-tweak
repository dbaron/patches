Fix bug in handling of static positions.

diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -733,7 +733,9 @@ nsHTMLReflowState::GetNearestContainingB
 // In that case depending on the progression direction either the left or
 // right edge would be marked as not being exact
 struct nsHypotheticalBox {
+  // offsets from left edge of containing block (which is a padding edge)
   nscoord       mLeft, mRight;
+  // offsets from top edge of containing block (which is a padding edge)
   nscoord       mTop;
   PRPackedBool  mLeftIsExact, mRightIsExact;
 
@@ -911,7 +913,7 @@ nsHTMLReflowState::CalculateHypothetical
     
     } else {
       // We need to compute it. It's important we do this, because if it's
-      // percentage based this computed value may be different from the comnputed
+      // percentage based this computed value may be different from the computed
       // value calculated using the absolute containing block width
       boxWidth = ComputeWidthValue(aBlockContentWidth,
                                    insideBoxSizing, outsideBoxSizing,
@@ -1017,6 +1019,7 @@ nsHTMLReflowState::CalculateHypothetical
     if (NS_STYLE_DISPLAY_INLINE == mStyleDisplay->mOriginalDisplay) {
       aHypotheticalBox.mRight = placeholderOffset.x;
     } else {
+      // XXX This is wrong, but mLeft comes out OK!
       aHypotheticalBox.mRight = aBlockLeftContentEdge + aBlockContentWidth;
     }
     aHypotheticalBox.mRightIsExact = PR_TRUE;
@@ -1065,7 +1068,7 @@ nsHTMLReflowState::CalculateHypothetical
   // translate.
   nsMargin border = cbrs->mComputedBorderPadding - cbrs->mComputedPadding;
   aHypotheticalBox.mLeft -= border.left;
-  aHypotheticalBox.mRight -= border.right;
+  aHypotheticalBox.mRight -= border.left;
   aHypotheticalBox.mTop -= border.top;
 }
 
@@ -1136,6 +1139,7 @@ nsHTMLReflowState::InitAbsoluteConstrain
       } else {
         // Well, we don't know 'left' so we have to use 'right' and
         // then solve for 'left'
+        // XXX Shouldn't this match the math below?
         mComputedOffsets.right = hypotheticalBox.mRight;
         rightIsAuto = PR_FALSE;
       }

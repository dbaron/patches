From: L. David Baron <dbaron@dbaron.org>

Bug 1308876 - Downgrade assertion that fires for paginating large row groups to NS_WARNING_ASSERTION.  r?dholbert

The primary patch in this bug (I think -- though it's possible it's one
of the other patches, actually) causes this assertion to fire:
  REFTEST TEST-UNEXPECTED-FAIL | tests/reftest/tests/layout/base/crashtests/470851-1.xhtml | assertion count 2 is more than expected 0 assertions
I think that's fine; the changes cause us to reflow less, which in some
cases changes the way table reflow is going to happen while paginating
or doing multicolumn reflow.

I think having an NS_ASSERTION that's warning about Web content that
doesn't fully show up isn't appropriate.  If a large row group is at the
top of the page and we can't break it, part of the layout will be
missing, but that doesn't merit something that we need to change test
annotations for.

TODO: Look at the test that is asserting for layout differences!

MozReview-Commit-ID: HP11cTSPwAY

diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -131,17 +131,17 @@ load 534716-1.html
 load 563009-1.html
 load 563009-2.html
 load 563009-3.html
 load 573354-1.xhtml
 load 576890-1.html
 load 576890-2.html
 load 576890-3.html
 load 580481-1.xhtml
-asserts(1) load 595758-1.xhtml # Bug 714667
+load 595758-1.xhtml
 load 595758-2.xhtml
 load 678447-1.html
 load 691824-1.xhtml
 load 695430-1.html
 load 696640-1.html
 load 696640-2.html
 load 705996-1.html
 load 705996-2.html
diff --git a/layout/tables/nsTableRowGroupFrame.cpp b/layout/tables/nsTableRowGroupFrame.cpp
--- a/layout/tables/nsTableRowGroupFrame.cpp
+++ b/layout/tables/nsTableRowGroupFrame.cpp
@@ -1229,18 +1229,18 @@ nsTableRowGroupFrame::SplitRowGroup(nsPr
                                            oldRowVisualOverflow,
                                            false);
 
         if (aStatus.IsIncomplete()) {
           // The row frame is incomplete and all of the rowspan 1 cells' block frames split
           if ((rowMetrics.Height() <= rowReflowInput.AvailableHeight()) || isTopOfPage) {
             // The row stays on this page because either it split ok or we're on the top of page.
             // If top of page and the height exceeded the avail height, then there will be data loss
-            NS_ASSERTION(rowMetrics.Height() <= rowReflowInput.AvailableHeight(),
-                         "data loss - incomplete row needed more height than available, on top of page");
+            NS_WARNING_ASSERTION(rowMetrics.Height() <= rowReflowInput.AvailableHeight(),
+                                 "data loss - incomplete row needed more height than available, on top of page");
             CreateContinuingRowFrame(*aPresContext, *rowFrame, (nsIFrame**)&contRow);
             if (contRow) {
               aDesiredSize.Height() += rowMetrics.Height();
               if (prevRowFrame)
                 aDesiredSize.Height() += cellSpacingB;
             }
             else return NS_ERROR_NULL_POINTER;
           }

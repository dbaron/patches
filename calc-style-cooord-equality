From: L. David Baron <dbaron@dbaron.org>

Make nsStyleCoord::operator== check deep equality of calc() expressions rather than just doing pointer comparison.  (Bug 585715)

diff --git a/layout/style/nsStyleCoord.cpp b/layout/style/nsStyleCoord.cpp
--- a/layout/style/nsStyleCoord.cpp
+++ b/layout/style/nsStyleCoord.cpp
@@ -97,24 +97,46 @@ nsStyleCoord& nsStyleCoord::operator=(co
   else {
     mValue.mInt = aCopy.mValue.mInt;
   }
   return *this;
 }
 
 PRBool nsStyleCoord::operator==(const nsStyleCoord& aOther) const
 {
-  if (mUnit == aOther.mUnit) {
-    if ((eStyleUnit_Percent <= mUnit) && (mUnit < eStyleUnit_Coord)) {
-      return PRBool(mValue.mFloat == aOther.mValue.mFloat);
-    }
-    else {
-      return PRBool(mValue.mInt == aOther.mValue.mInt);
-    }
+  if (mUnit != aOther.mUnit) {
+    return PR_FALSE;
   }
+  switch (mUnit) {
+    case eStyleUnit_Null:
+    case eStyleUnit_Normal:
+    case eStyleUnit_Auto:
+    case eStyleUnit_None:
+      return PR_TRUE;
+    case eStyleUnit_Percent:
+    case eStyleUnit_Factor:
+    case eStyleUnit_Degree:
+    case eStyleUnit_Grad:
+    case eStyleUnit_Radian:
+      return mValue.mFloat == aOther.mValue.mFloat;
+    case eStyleUnit_Coord:
+    case eStyleUnit_Integer:
+    case eStyleUnit_Enumerated:
+      return mValue.mInt == aOther.mValue.mInt;
+    case eStyleUnit_Calc:
+    case eStyleUnit_Calc_Plus:
+    case eStyleUnit_Calc_Minus:
+    case eStyleUnit_Calc_Times_L:
+    case eStyleUnit_Calc_Times_R:
+    case eStyleUnit_Calc_Divided:
+    case eStyleUnit_Calc_Minimum:
+    case eStyleUnit_Calc_Maximum:
+      return *this->GetArrayValue() == *aOther.GetArrayValue();
+  }
+  NS_ABORT_IF_FALSE(PR_FALSE, "unexpected unit");
   return PR_FALSE;
 }
 
 void nsStyleCoord::Reset()
 {
   mUnit = eStyleUnit_Null;
   mValue.mInt = 0;
 }

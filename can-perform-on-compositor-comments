From: L. David Baron <dbaron@dbaron.org>

Bug 1161049 patch 2 - Add comments reflecting what CanPerformOnCompositorThread doesn't check.  r=birtles

diff --git a/layout/style/AnimationCommon.h b/layout/style/AnimationCommon.h
--- a/layout/style/AnimationCommon.h
+++ b/layout/style/AnimationCommon.h
@@ -156,16 +156,24 @@ protected:
   virtual nsIAtom* GetAnimationsAtom() = 0;
   virtual nsIAtom* GetAnimationsBeforeAtom() = 0;
   virtual nsIAtom* GetAnimationsAfterAtom() = 0;
 
   virtual bool IsAnimationManager() {
     return false;
   }
 
+  // Return an AnimationCollection* if we have an animation for
+  // the element aContent and pseudo-element indicator aElementProperty
+  // that can be performed on the compositor thread (as defined by 
+  // AnimationCollection::CanPerformOnCompositorThread).
+  //
+  // Note that this does not test whether the element's layer uses
+  // off-main-thread compositing, although it does check whether
+  // off-main-thread compositing is enabled as a whole.
   static AnimationCollection*
   GetAnimationsForCompositor(nsIContent* aContent,
                              nsIAtom* aElementProperty,
                              nsCSSProperty aProperty);
 
   PRCList mElementCollections;
   nsPresContext *mPresContext; // weak (non-null from ctor to Disconnect)
   bool mIsObservingRefreshDriver;
@@ -278,36 +286,42 @@ struct AnimationCollection : public PRCL
   enum CanAnimateFlags {
     // Testing for width, height, top, right, bottom, or left.
     CanAnimate_HasGeometricProperty = 1,
     // Allow the case where OMTA is allowed in general, but not for the
     // specified property.
     CanAnimate_AllowPartial = 2
   };
 
+private:
   static bool
   CanAnimatePropertyOnCompositor(const dom::Element *aElement,
                                  nsCSSProperty aProperty,
                                  CanAnimateFlags aFlags);
 
+public:
   static bool IsCompositorAnimationDisabledForFrame(nsIFrame* aFrame);
 
   // True if this animation can be performed on the compositor thread.
   //
   // If aFlags contains CanAnimate_AllowPartial, returns whether the
   // state of this element's animations at the current refresh driver
   // time contains animation data that can be done on the compositor
   // thread.  (This is useful for determining whether a layer should be
   // active, or whether to send data to the layer.)
   //
   // If aFlags does not contain CanAnimate_AllowPartial, returns whether
   // the state of this element's animations at the current refresh driver
   // time can be fully represented by data sent to the compositor.
   // (This is useful for determining whether throttle the animation
   // (suppress main-thread style updates).)
+  //
+  // Note that this does not test whether the element's layer uses
+  // off-main-thread compositing, although it does check whether
+  // off-main-thread compositing is enabled as a whole.
   bool CanPerformOnCompositorThread(CanAnimateFlags aFlags) const;
 
   void PostUpdateLayerAnimations();
 
   bool HasAnimationOfProperty(nsCSSProperty aProperty) const;
 
   bool IsForElement() const { // rather than for a pseudo-element
     return mElementProperty == nsGkAtoms::animationsProperty ||

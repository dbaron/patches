Don't stomp on aFont so that we don't break ComputeFontData when called with an aStartStruct.  b=216456

diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -24,6 +24,7 @@
  *   Daniel Glazman <glazman@netscape.com>
  *   Roger B. Sidje <rbs@maths.uq.edu.au>
  *   Mats Palmgren <mats.palmgren@bredband.net>
+ *   L. David Baron <dbaron@dbaron.org>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either of the GNU General Public License Version 2 or later (the "GPL"),
@@ -1973,7 +1974,11 @@ nsRuleNode::SetFont(nsPresContext* aPres
   if (eCSSUnit_String == aFontData.mFamily.GetUnit()) {
     // set the correct font if we are using DocumentFonts OR we are overriding for XUL
     // MJA: bug 31816
-    if (!aIsGeneric) {
+    if (aIsGeneric) {
+      // XXXldb Should this name be quoted?
+      aFont->mFont.name = aDefaultFont.name;
+    }
+    else {
       // only bother appending fallback fonts if this isn't a fallback generic font itself
       if (!aFont->mFont.name.IsEmpty())
         aFont->mFont.name.Append((PRUnichar)',');
@@ -2204,9 +2209,6 @@ nsRuleNode::SetGenericFont(nsPresContext
     parentFont.mFont = tmpFont->mFont;
     parentFont.mSize = tmpFont->mSize;
   }
-  aFont->mFlags = parentFont.mFlags;
-  aFont->mFont = parentFont.mFont;
-  aFont->mSize = parentFont.mSize;
 
   PRBool dummy;
   PRUint32 fontBit = nsCachedStyleData::GetBitForSID(eStyleStruct_Font);
@@ -2237,16 +2239,12 @@ nsRuleNode::SetGenericFont(nsPresContext
 
     nsRuleNode::SetFont(aPresContext, context, aMinFontSize,
                         PR_TRUE, fontData, *defaultFont,
-                        &parentFont, aFont, dummy);
+                        &parentFont, &parentFont, dummy);
 
     // XXX Not sure if we need to do this here
     // If we have a post-resolve callback, handle that now.
     if (ruleData.mPostResolveCallback)
       (ruleData.mPostResolveCallback)((nsStyleStruct*)aFont, &ruleData);
-
-    parentFont.mFlags = aFont->mFlags;
-    parentFont.mFont = aFont->mFont;
-    parentFont.mSize = aFont->mSize;
   }
 
   // Finish off by applying our own rules. In this case, aFontData

From: L. David Baron <dbaron@dbaron.org>

Fix parenthesis-matching while parsing local() function in @font-face src: descriptor.  (Bug 511333)  r=zweinberg

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -7906,20 +7906,24 @@ CSSParserImpl::ParseFontSrc(nsCSSValue& 
       // The text permits both unquoted identifiers and quoted
       // strings.  We resolve this ambiguity in the spec by
       // assuming that the appropriate production is a single
       // <family-name>, possibly surrounded by whitespace.
 
       nsAutoString family;
       if (!ExpectSymbol('(', PR_FALSE))
         return PR_FALSE;
-      if (!ParseOneFamily(family))
-        return PR_FALSE;
-      if (!ExpectSymbol(')', PR_TRUE))
-        return PR_FALSE;
+      if (!ParseOneFamily(family)) {
+        SkipUntil(')');
+        return PR_FALSE;
+      }
+      if (!ExpectSymbol(')', PR_TRUE)) {
+        SkipUntil(')');
+        return PR_FALSE;
+      }
 
       // the style parameters to the nsFont constructor are ignored,
       // because it's only being used to call EnumerateFamilies
       nsFont font(family, 0, 0, 0, 0, 0, 0);
       ExtractFirstFamilyData dat;
 
       font.EnumerateFamilies(ExtractFirstFamily, (void*) &dat);
       if (!dat.mGood)
diff --git a/layout/style/test/test_font_face_parser.html b/layout/style/test/test_font_face_parser.html
--- a/layout/style/test/test_font_face_parser.html
+++ b/layout/style/test/test_font_face_parser.html
@@ -127,17 +127,36 @@
     { rule: _("src: \"/fonts/Mouse\";"), d: {} },
     { rule: _("src: /fonts/Mouse;"), d: {} },
     { rule: _("src: url(\"/fonts/Mouse\") format(truetype);"), d: {} },
     { rule: _("src: url(\"/fonts/Mouse\") format(\"truetype\",opentype);"), d: {} },
     { rule: _("src: local(*);"), d: {} },
     { rule: _("src: format(\"truetype\");"), d: {} },
     { rule: _("src: local(Mouse) format(\"truetype\");"), d: {} },
     { rule: _("src: local(Mouse, Rat);"), d: {} },
-    { rule: _("src: local(sans-serif);"), d: {} }
+    { rule: _("src: local(sans-serif);"), d: {} },
+
+    // Repeated descriptors
+    { rule: _("font-weight: 700; font-weight: 200;"),
+      d: {"font-weight" : "200"},
+      noncanonical: true },
+    { rule: _("src: url(\"/fonts/Cat\"); src: url(\"/fonts/Mouse\");"),
+      d: { "src" : "url(\"/fonts/Mouse\")" },
+      noncanonical: true },
+    { rule: _("src: local(Cat); src: local(Mouse)"),
+      d: { "src" : "local(\"Mouse\")" },
+      noncanonical: true },
+
+    // Correct parenthesis matching for local()
+    { rule: _("src: local(Mouse); src: local(Cat(); src: local(Rat); )"),
+      d: { "src" : "local(\"Mouse\")" },
+      noncanonical: true },
+    { rule: _("src: local(Mouse); src: local(\"Cat\"; src: local(Rat); )"),
+      d: { "src" : "local(\"Mouse\")" },
+      noncanonical: true },
 
     // unicode-range is not implemented (bug 443976).
     // tests for that omitted for now.
   ];
 
   var display = document.getElementById("display");
   var sheet = document.styleSheets[1];
 

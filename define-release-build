From: L. David Baron <dbaron@dbaron.org>

Bug 837211 patch 1 - Add ALPHA_BUILD as the opposite of RELEASE_BUILD so we can be careful about having included the definitions we want.

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -3502,34 +3502,42 @@ dnl set GRE_MILESTONE
 dnl ========================================================
 if test -n "$LIBXUL_SDK"; then
     GRE_MILESTONE=`$PYTHON "$_topsrcdir"/config/printconfigsetting.py "$LIBXUL_DIST"/bin/platform.ini Build Milestone`
 else
     GRE_MILESTONE=`tail -n 1 "$_topsrcdir"/config/milestone.txt 2>/dev/null || tail -1 "$_topsrcdir"/config/milestone.txt`
 fi
 AC_SUBST(GRE_MILESTONE)
 
-# set RELEASE_BUILD and NIGHTLY_BUILD variables depending on the cycle we're in
+# set RELEASE_BUILD, ALPHA_BUILD, and NIGHTLY_BUILD variables depending on the
+# cycle we're in.
 # The logic works like this:
-# - if we have "a1" in GRE_MILESTONE, we're building Nightly (define NIGHTLY_BUILD)
-# - otherwise, if we have "a" in GRE_MILESTONE, we're building Nightly or Aurora
+# - if we have "a1" in GRE_MILESTONE, we're building Nightly (define
+#   NIGHTLY_BUILD and ALPHA_BUILD)
+# - otherwise, if we have "a" in GRE_MILESTONE, we're building Nightly or
+#   Aurora (define ALPHA_BUILD)
 # - otherwise, we're building Release/Beta (define RELEASE_BUILD)
 case "$GRE_MILESTONE" in
   *a1*)
       NIGHTLY_BUILD=1
       AC_DEFINE(NIGHTLY_BUILD)
+      ALPHA_BUILD=1
+      AC_DEFINE(ALPHA_BUILD)
       ;;
   *a*)
+      ALPHA_BUILD=1
+      AC_DEFINE(ALPHA_BUILD)
       ;;
   *)
       RELEASE_BUILD=1
       AC_DEFINE(RELEASE_BUILD)
       ;;
 esac
 AC_SUBST(NIGHTLY_BUILD)
+AC_SUBST(ALPHA_BUILD)
 AC_SUBST(RELEASE_BUILD)
 
 dnl ========================================================
 dnl Disable compiling sources in unified mode.
 dnl ========================================================
 
 if test -z "$NIGHTLY_BUILD"; then
     MOZ_DISABLE_UNIFIED_COMPILATION=1

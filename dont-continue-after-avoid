From: L. David Baron <dbaron@dbaron.org>

Bug 1308876 - Don't continue reflow after deciding we need to try again due to page-break-inside:avoid.  r?:mats

The primary patch in this bug causes fewer dirty reflows, which leads to lines
being out-of-date for the reason described in the comment.  This causes
incorrect layout of some references sections on wikipedia, for which a
simplified testcase is included.

This bug was not caught by anything in our test suite, but I noticed it
while browsing wikipedia (since I use a build that has my patches in it
for my regular browsing).

MozReview-Commit-ID: 4hTQpGS2pZH

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -4711,35 +4711,41 @@ nsBlockFrame::PlaceLine(BlockReflowInput
   }
 
   if (!aState.mReflowStatus.IsFullyComplete() &&
       ShouldAvoidBreakInside(aState.mReflowInput)) {
     aLine->AppendFloats(aState.mCurrentLineFloats);
     aState.mReflowStatus.SetInlineLineBreakBeforeAndReset();
     // Reflow the line again when we reflow at our new position.
     aLine->MarkDirty();
+    *aKeepReflowGoing = false;
     return true;
   }
 
   // See if the line fit (our first line always does).
   if (mLines.front() != aLine &&
       newBCoord > aState.mBEndEdge &&
       aState.mBEndEdge != NS_UNCONSTRAINEDSIZE) {
     NS_ASSERTION(aState.mCurrentLine == aLine, "oops");
     if (ShouldAvoidBreakInside(aState.mReflowInput)) {
       // All our content doesn't fit, start on the next page.
       aState.mReflowStatus.SetInlineLineBreakBeforeAndReset();
+      *aKeepReflowGoing = false;
     } else {
       // Push aLine and all of its children and anything else that
       // follows to our next-in-flow.
       PushTruncatedLine(aState, aLine, aKeepReflowGoing);
     }
     return true;
   }
 
+  // Note that any early return before this update of aState.mBCoord
+  // must either (a) return false or (b) set aKeepReflowGoing to false.
+  // Otherwise we'll keep reflowing later lines at an incorrect
+  // position, and we might not come back and clean up the damage later.
   aState.mBCoord = newBCoord;
 
   // Add the already placed current-line floats to the line
   aLine->AppendFloats(aState.mCurrentLineFloats);
 
   // Any below current line floats to place?
   if (aState.mBelowCurrentLineFloats.NotEmpty()) {
     // Reflow the below-current-line floats, which places on the line's
diff --git a/layout/reftests/columns/break-avoid-line-position-1-ref.html b/layout/reftests/columns/break-avoid-line-position-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/columns/break-avoid-line-position-1-ref.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<html lang="en" dir="ltr">
+<meta charset="UTF-8"/>
+<title>Wikipedia References Multicol Bug</title>
+
+<style>
+  html { overflow: hidden }
+  div { width: 15em; margin-right: 2em; float: left; }
+  p { margin: 0 }
+</style>
+
+<div>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222 abcdefghijkl3333333333</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+</div>
+<div>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222 abcdefghijkl3333333333</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111</p>
+</div>
diff --git a/layout/reftests/columns/break-avoid-line-position-1.html b/layout/reftests/columns/break-avoid-line-position-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/columns/break-avoid-line-position-1.html
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html lang="en" dir="ltr">
+<meta charset="UTF-8"/>
+<title>Wikipedia References Multicol Bug</title>
+
+<style>
+  html { overflow: hidden }
+  div { width: 32em; column-count: 2; column-gap: 2em; }
+  p { page-break-inside:avoid; margin: 0; }
+</style>
+
+<div>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222 abcdefghijkl3333333333</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222 abcdefghijkl3333333333</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111 abcdefghijkl2222222222</p>
+  <p>abcdefghijkl0000000000 abcdefghijkl1111111111</p>
+</div>
diff --git a/layout/reftests/columns/reftest.list b/layout/reftests/columns/reftest.list
--- a/layout/reftests/columns/reftest.list
+++ b/layout/reftests/columns/reftest.list
@@ -33,8 +33,9 @@ HTTP(..) == columnfill-auto-3.html colum
 == column-balancing-nested-001.html column-balancing-nested-001-ref.html
 == columnrule-overflow.html columnrule-overflow-ref.html
 == columns-table-caption-000.html columns-table-caption-000-ref.html
 == positioning-transforms-bug1112501.html positioning-transforms-bug1112501-ref.html
 fuzzy-if(browserIsRemote&&winWidget,140,276) == fieldset-columns-001.html fieldset-columns-001-ref.html
 == dynamic-change-with-overflow-1.html dynamic-change-with-overflow-1-ref.html
 == dynamic-text-indent-1.html dynamic-text-indent-1-ref.html
 == dynamic-text-indent-2.html dynamic-text-indent-2-ref.html
+== break-avoid-line-position-1.html break-avoid-line-position-1-ref.html

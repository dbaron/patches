Reject 0 as a value for -moz-column-count.
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -5373,17 +5373,23 @@ CSSParserImpl::ParseSingleValueProperty(
   case eCSSProperty_border_left_width_value: // for internal use
   case eCSSProperty_border_right_width_value: // for internal use
   case eCSSProperty_border_start_width_value: // for internal use
   case eCSSProperty_border_top_width:
   case eCSSProperty__moz_column_rule_width:
     return ParsePositiveVariant(aValue, VARIANT_HKL,
                                 nsCSSProps::kBorderWidthKTable);
   case eCSSProperty__moz_column_count:
-    return ParsePositiveVariant(aValue, VARIANT_AHI, nsnull);
+    // Need to reject 0 in addition to negatives, so don't bother with
+    // ParsePositiveVariant.  If we accept 0, we need to change
+    // NS_STYLE_COLUMN_COUNT_AUTO to something else.
+    return ParseVariant(aValue, VARIANT_AHI, nsnull) &&
+           (aValue.GetUnit() != eCSSUnit_Integer ||
+            aValue.GetIntValue() > 0 ||
+            (UngetToken(), PR_FALSE));
   case eCSSProperty__moz_column_width:
     return ParsePositiveVariant(aValue, VARIANT_AHL, nsnull);
   case eCSSProperty__moz_column_gap:
     return ParsePositiveVariant(aValue, VARIANT_HL | VARIANT_NORMAL, nsnull);
   case eCSSProperty_bottom:
   case eCSSProperty_top:
   case eCSSProperty_left:
   case eCSSProperty_right:
diff --git a/layout/style/test/property_database.js b/layout/style/test/property_database.js
--- a/layout/style/test/property_database.js
+++ b/layout/style/test/property_database.js
@@ -349,19 +349,20 @@ var gCSSProperties = {
 		other_values: [ "border-box", "padding-box" ],
 		invalid_values: [ "margin-box", "content", "padding", "border", "margin" ]
 	},
 	"-moz-column-count": {
 		domProp: "MozColumnCount",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "auto" ],
-		other_values: [ "1", "0", "17" ],
+		other_values: [ "1", "17" ],
 		invalid_values: [
-			"-1", //unclear: see http://lists.w3.org/Archives/Public/www-style/2007Apr/0030
+			"-1", // unclear: see http://lists.w3.org/Archives/Public/www-style/2007Apr/0030.html
+			"0", // unclear: see http://lists.w3.org/Archives/Public/www-style/2008Dec/0191.html
 			"3px"
 		]
 	},
 	"-moz-column-gap": {
 		domProp: "MozColumnGap",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "normal", "1em" ],
diff --git a/layout/style/test/test_value_computation.html b/layout/style/test/test_value_computation.html
--- a/layout/style/test/test_value_computation.html
+++ b/layout/style/test/test_value_computation.html
@@ -35,19 +35,16 @@
 
 /** Test for computation of values in property database **/
 
 var gNotAccepted = {
   "list-style": [ "none disc outside" ],
 };
 
 var gBadComputed = {
-  // NS_STYLE_COLUMN_COUNT_AUTO is 0
-  "-moz-column-count": [ "0" ],
-
   "clip": [ "rect(auto,auto,auto,auto)" ],
 
   // The 'medium' keyword should be computing to '3px', not 'medium'.
   "outline-width": [ "3px" ],
 
   // These values are treated as auto.
   "page-break-after": [ "avoid" ],
   "page-break-before": [ "avoid" ],

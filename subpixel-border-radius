From: L. David Baron <dbaron@dbaron.org>

Don't throw away the subpixel part of the border-radius.  (Bug 485501)

diff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp
+++ b/layout/base/nsCSSRendering.cpp
@@ -481,22 +481,22 @@ ComputePixelRadii(const nscoord *aTwipsR
                   nscoord twipsPerPixel,
                   gfxCornerSizes *oBorderRadii)
 {
   nscoord twipsRadii[8];
   memcpy(twipsRadii, aTwipsRadii, sizeof twipsRadii);
 
   gfxFloat radii[8];
   NS_FOR_CSS_HALF_CORNERS(corner)
-    radii[corner] = twipsRadii[corner] / twipsPerPixel;
+    radii[corner] = gfxFloat(twipsRadii[corner]) / twipsPerPixel;
 
   // css3-background specifies this algorithm for reducing
   // corner radii when they are too big.
-  gfxFloat maxWidth = outerRect.width / twipsPerPixel;
-  gfxFloat maxHeight = outerRect.height / twipsPerPixel;
+  gfxFloat maxWidth = gfxFloat(outerRect.width) / twipsPerPixel;
+  gfxFloat maxHeight = gfxFloat(outerRect.height) / twipsPerPixel;
   gfxFloat f = 1.0f;
   NS_FOR_CSS_SIDES(side) {
     PRUint32 hc1 = NS_SIDE_TO_HALF_CORNER(side, PR_FALSE, PR_TRUE);
     PRUint32 hc2 = NS_SIDE_TO_HALF_CORNER(side, PR_TRUE, PR_TRUE);
     gfxFloat length = NS_SIDE_IS_VERTICAL(side) ? maxHeight : maxWidth;
     gfxFloat sum = radii[hc1] + radii[hc2];
     // avoid floating point division in the normal case
     if (length < sum)

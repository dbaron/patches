From: Felipe Gomes <felipc@gmail.com>

Bug 582315. Intermittent orange in test_taskbarprogress_downloadstates.xul

diff --git a/toolkit/mozapps/downloads/tests/chrome/test_taskbarprogress_downloadstates.xul b/toolkit/mozapps/downloads/tests/chrome/test_taskbarprogress_downloadstates.xul
--- a/toolkit/mozapps/downloads/tests/chrome/test_taskbarprogress_downloadstates.xul
+++ b/toolkit/mozapps/downloads/tests/chrome/test_taskbarprogress_downloadstates.xul
@@ -80,26 +80,29 @@ let testState = {
 }
 
 function continueTest() {
   SimpleTest.executeSoon(function(){
     gGen.next();
   });
 }
 
+let wasPaused = {};
+
 let downloadListener = {
 
   onStateChange: function(a, b, c, d, e) {
     checkCorrectState();
   },
 
   onDownloadStateChange: function(aState, aDownload)
   {
 
     if (aDownload.state == Ci.nsIDownloadManager.DOWNLOAD_PAUSED) {
+      wasPaused[aDownload.id] = true;
       testState.pausedDownloadCount++;
       testState.activeDownloadCount--;
 
       continueTest();
     }
 
     if (aDownload.state == Ci.nsIDownloadManager.DOWNLOAD_FINISHED) {
       testState.activeDownloadCount--;
@@ -109,43 +112,43 @@ let downloadListener = {
       SimpleTest.executeSoon(checkCorrectState);
       if(testState.finishedDownloadCount == 2) {
         SimpleTest.executeSoon(finishTest);
       }
 
     }
 
     if (aDownload.state == Ci.nsIDownloadManager.DOWNLOAD_DOWNLOADING) {
-        continueTest();
+      if (!wasPaused[aDownload.id])
+        dm.pauseDownload(aDownload.id);
+      continueTest();
     }
 
   },
 
   onProgressChange: function(a, b, c, d, e, f, g) { },
   onSecurityChange: function(a, b, c, d) { }
 };
 
 function testSteps() {
 
   // Step 1 - Add downloads and pause
+
   testState.activeDownloadCount++;
   downloadA = addDownload();
-  yield;
-
-  dm.pauseDownload(downloadA.id);
-  yield;
+  yield; // added
+  yield; // paused
 
   testState.activeDownloadCount++;
   downloadB = addDownload();
-  yield;
-
-  dm.pauseDownload(downloadB.id);
-  yield;
+  yield; // added
+  yield; // paused
 
   // Step 2 - Resume downloads
+ 
   testState.activeDownloadCount++;
   testState.pausedDownloadCount--;
   dm.resumeDownload(downloadA.id);
   yield; 
 
   testState.activeDownloadCount++;
   testState.pausedDownloadCount--;
   dm.resumeDownload(downloadB.id);

When displacing blocks that don't interact with floats around floats, displace the border box rather than the margin box.  b=427129, 377664  Simultaneously, only displace when the width actually won't go down to an amount that fits (i.e., if it will go to an amount smaller than the intrinsic minimum width, let it).  b=427782

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -6786,31 +6786,36 @@ static nscoord
 static nscoord
 OneWidthToClearPastFloats(nsPresContext* aPresContext,
                           const nsHTMLReflowState& aParentReflowState,
-                          nscoord aCBWidth,
+                          nscoord aAvailableWidth,
                           nsIFrame* aFrame)
 {
-  // We need to compute percent widths, since intrinsic width
-  // computation doesn't.
-  if (aFrame->GetStylePosition()->mWidth.GetUnit() == eStyleUnit_Percent) {
-    // All we really need here is the result of ComputeSize, and we
-    // could *almost* get that from an nsCSSOffsetState, except for the
-    // last argument.
-    nsSize availSpace(aCBWidth, NS_UNCONSTRAINEDSIZE);
-    nsHTMLReflowState reflowState(aPresContext, aParentReflowState,
-                                  aFrame, availSpace);
-    return reflowState.ComputedWidth();
-  }
-
-  return nsLayoutUtils::IntrinsicForContainer(aParentReflowState.rendContext,
-                                              aFrame,
-                                              nsLayoutUtils::MIN_WIDTH);
-}
-
+  // We actually don't want the min width here; see bug 427782; we only
+  // want to displace if the width won't compute to a value small enough
+  // to fit.
+  // All we really need here is the result of ComputeSize, and we
+  // could *almost* get that from an nsCSSOffsetState, except for the
+  // last argument.
+  nsSize availSpace(aAvailableWidth, NS_UNCONSTRAINEDSIZE);
+  nsHTMLReflowState reflowState(aPresContext, aParentReflowState,
+                                aFrame, availSpace);
+  return reflowState.ComputedWidth() +
+         reflowState.mComputedBorderPadding.LeftRight();
+}
+
+// Note that this width can vary based on the vertical position.
+// However, the cases where it varies are the cases where the width fits
+// in the available space given, which means that variation shouldn't
+// matter.
 /* static */
 nscoord
 nsBlockFrame::WidthToClearPastFloats(nsBlockReflowState& aState,
                                      nsIFrame* aFrame)
 {
+  aState.GetAvailableSpace();
+  nscoord leftOffset, rightOffset;
+  aState.ReplacedBlockOffsetsForFloats(aFrame, leftOffset, rightOffset);
+  nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+
   nscoord result;
   // A table outer frame is an exception in that it is a block child
   // that is not a containing block for its children.
@@ -6821,10 +6826,10 @@ nsBlockFrame::WidthToClearPastFloats(nsB
     nsIFrame *innerTable = aFrame->GetFirstChild(nsnull);
     nsIFrame *caption = aFrame->GetFirstChild(nsGkAtoms::captionList);
     result = OneWidthToClearPastFloats(aState.mPresContext, outerRS,
-                                       aState.mContentArea.width, innerTable);
+                                       availWidth, innerTable);
     if (caption) {
       nscoord captionWidth = OneWidthToClearPastFloats(aState.mPresContext,
-                               outerRS, aState.mContentArea.width, caption);
+                               outerRS, availWidth, caption);
       PRUint8 captionSide = caption->GetStyleTableBorder()->mCaptionSide;
       if (captionSide == NS_SIDE_TOP || captionSide == NS_SIDE_BOTTOM)
         result = PR_MAX(result, captionWidth);
@@ -6833,7 +6838,7 @@ nsBlockFrame::WidthToClearPastFloats(nsB
     }
   } else {
     result = OneWidthToClearPastFloats(aState.mPresContext,
-               aState.mReflowState, aState.mContentArea.width, aFrame);
+               aState.mReflowState, availWidth, aFrame);
   }
   return result;
 }
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -188,6 +188,40 @@ nsBlockReflowState::FreeLineBox(nsLineBo
   }
 }
 
+void
+nsBlockReflowState::ReplacedBlockOffsetsForFloats(nsIFrame* aFrame,
+                                                  nscoord& aLeftResult,
+                                                  nscoord& aRightResult)
+{
+  // The frame is clueless about the space manager and therefore we
+  // only give it free space. An example is a table frame - the
+  // tables do not flow around floats.
+  // However, we can let its margins intersect floats.
+  NS_ASSERTION(mAvailSpaceRect.x >= 0, "bad avail space rect x");
+  NS_ASSERTION(mAvailSpaceRect.width == 0 ||
+               mAvailSpaceRect.XMost() <= mContentArea.width,
+               "bad avail space rect width");
+
+  nscoord leftOffset, rightOffset;
+  if (mAvailSpaceRect.width == mContentArea.width) {
+    // We don't need to compute margins when there are no floats around.
+    leftOffset = 0;
+    rightOffset = 0;
+  } else {
+    nsCSSOffsetState os(aFrame, mReflowState.rendContext, mContentArea.width);
+    nscoord leftFloatXOffset = mAvailSpaceRect.x;
+    leftOffset = PR_MAX(leftFloatXOffset, os.mComputedMargin.left) -
+                 os.mComputedMargin.left;
+    leftOffset = PR_MAX(leftOffset, 0); // in case of negative margin
+    nscoord rightFloatXOffset = mContentArea.width - mAvailSpaceRect.XMost();
+    rightOffset = PR_MAX(rightFloatXOffset, os.mComputedMargin.right) -
+                  os.mComputedMargin.right;
+    rightOffset = PR_MAX(rightOffset, 0); // in case of negative margin
+  }
+  aLeftResult = leftOffset;
+  aRightResult = rightOffset;
+}
+
 // Compute the amount of available space for reflowing a block frame
 // at the current Y coordinate. This method assumes that
 // GetAvailableSpace has already been called.
@@ -254,11 +288,10 @@ nsBlockReflowState::ComputeBlockAvailSpa
     }
   }
   else {
-    // The frame is clueless about the space manager and therefore we
-    // only give it free space. An example is a table frame - the
-    // tables do not flow around floats.
-    aResult.x = mAvailSpaceRect.x + borderPadding.left;
-    aResult.width = mAvailSpaceRect.width;
+    nscoord leftOffset, rightOffset;
+    ReplacedBlockOffsetsForFloats(aFrame, leftOffset, rightOffset);
+    aResult.x = borderPadding.left + leftOffset;
+    aResult.width = mContentArea.width - leftOffset - rightOffset;
   }
 
 #ifdef REALLY_NOISY_REFLOW
diff --git a/layout/generic/nsBlockReflowState.h b/layout/generic/nsBlockReflowState.h
--- a/layout/generic/nsBlockReflowState.h
+++ b/layout/generic/nsBlockReflowState.h
@@ -141,6 +141,12 @@ public:
   // Reconstruct the previous bottom margin that goes above |aLine|.
   void ReconstructMarginAbove(nsLineList::iterator aLine);
 
+  // Caller must have called GetAvailableSpace for the current mY
+  void ReplacedBlockOffsetsForFloats(nsIFrame* aFrame,
+                                     nscoord& aLeftResult,
+                                     nscoord& aRightResult);
+
+  // Caller must have called GetAvailableSpace for the current mY
   void ComputeBlockAvailSpace(nsIFrame* aFrame,
                               const nsStyleDisplay* aDisplay,
                               nsRect& aResult);
diff --git a/layout/reftests/bugs/134706-3-left-scrollframe-ref.html b/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
--- a/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
+++ b/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
@@ -7,11 +7,9 @@
 </head>
 <body>
 
-<div style="width: 300px; height: 150px; background: aqua">
+<div style="width: 300px; height: 100px; background: aqua">
   <div style="float:left; background:blue; width: 100px; height: 100px"></div>
-  <div style="float:left; background:yellow; width: 300px; height: 50px">
-    <div style="background:purple; width: 250px; height: 50px"></div>
-  </div>
+  <div style="float:left; background:purple; width: 200px; height: 50px"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/134706-3-right-scrollframe-ref.html b/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
--- a/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
+++ b/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
@@ -7,11 +7,9 @@
 </head>
 <body>
 
-<div style="width: 300px; height: 150px; background: aqua">
+<div style="width: 300px; height: 100px; background: aqua">
   <div style="float:right; background:blue; width: 100px; height: 100px"></div>
-  <div style="float:left; background:yellow; width: 300px; height: 50px">
-    <div style="background:purple; width: 250px; height: 50px"></div>
-  </div>
+  <div style="float:left; background:purple; width: 200px; height: 50px"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/134706-4-ref.html b/layout/reftests/bugs/134706-4-ref.html
--- a/layout/reftests/bugs/134706-4-ref.html
+++ b/layout/reftests/bugs/134706-4-ref.html
@@ -34,33 +34,25 @@
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:left; background:blue; width: 100px; height: 20px"></div>
   <div style="float:left; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:left; background:blue; width: 100px; height: 20px"></div>
   <div style="float:right; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:right; background:blue; width: 100px; height: 20px"></div>
   <div style="float:left; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:right; background:blue; width: 100px; height: 20px"></div>
   <div style="float:right; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/427129-scrollframe.html b/layout/reftests/bugs/427129-scrollframe.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/427129-scrollframe.html
@@ -0,0 +1,190 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>Reftest, bug 427129</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	html, body { margin: 0; }
+
+	.contain {
+		background: aqua; color: black;
+		height: 10px; margin: 2px 50px;
+		padding-top: 0.1px; /* needed for some reason (XXX WHY?) */
+	}
+
+	.fl, .fr { height: 5px; }
+	.fl { float: left; width: 56px; }
+	.fr { float: right; width: 73px; }
+
+	.t { overflow: hidden; background: blue; height: 5px; width: 85px;
+	     border-left: 1px solid blue; padding-left: 2px;
+	     padding-right: 4px; border-right: 8px solid blue; }
+
+	</style>
+</head>
+<body>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 30px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 100px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 30px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 100px"></div>
+</div>
+
+<!-- Remember that the extra end-edge margin gets ignored -->
+<div style="width: 300px">
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 57px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 57px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 56px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 57px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 73px 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 74px 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 29%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 29%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 56px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 57px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 73px 0 15px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 74px 0 15px; width: 28%"></div>
+	</div>
+</div>
+
+</body>
+</html>

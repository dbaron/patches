When displacing blocks that don't interact with floats around floats, displace the border box rather than the margin box.  b=427129, 377664  Simultaneously, only displace when the width actually won't go down to an amount that fits (i.e., if it will go to an amount smaller than the intrinsic minimum width, let it).  b=427782

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -1779,18 +1779,20 @@ nsBlockFrame::ReflowDirtyLines(nsBlockRe
       line->MarkDirty();
     }
 
-    nscoord replacedWidth = 0;
+    ReplacedElementWidthToClear replacedWidthStruct;
+    ReplacedElementWidthToClear *replacedWidth = nsnull;
     if (line->IsBlock() &&
         !nsBlockFrame::BlockCanIntersectFloats(line->mFirstChild)) {
-      replacedWidth =
+      replacedWidthStruct =
         nsBlockFrame::WidthToClearPastFloats(aState, line->mFirstChild);
+      replacedWidth = &replacedWidthStruct;
     }
 
     // We have to reflow the line if it's a block whose clearance
     // might have changed, so detect that.
     if (!line->IsDirty() &&
         (line->GetBreakTypeBefore() != NS_STYLE_CLEAR_NONE ||
-         replacedWidth != 0)) {
+         replacedWidth)) {
       nscoord curY = aState.mY;
       // See where we would be after applying any clearance due to
       // BRs.
@@ -2803,10 +2805,12 @@ nsBlockFrame::ReflowBlockFrame(nsBlockRe
   PRBool treatWithClearance = aLine->HasClearance();
 
   PRBool mightClearFloats = breakType != NS_STYLE_CLEAR_NONE;
-  nscoord replacedWidth = 0;
+  ReplacedElementWidthToClear replacedWidthStruct;
+  ReplacedElementWidthToClear *replacedWidth = nsnull;
   if (!nsBlockFrame::BlockCanIntersectFloats(frame)) {
     mightClearFloats = PR_TRUE;
-    replacedWidth = nsBlockFrame::WidthToClearPastFloats(aState, frame);
+    replacedWidthStruct = nsBlockFrame::WidthToClearPastFloats(aState, frame);
+    replacedWidth = &replacedWidthStruct;
   }
 
   // If our top margin was counted as part of some parents top-margin
@@ -2954,7 +2958,7 @@ nsBlockFrame::ReflowBlockFrame(nsBlockRe
     PRBool isImpacted = aState.IsImpactedByFloat() ? PR_TRUE : PR_FALSE;
     aLine->SetLineIsImpactedByFloat(isImpacted);
     nsRect availSpace;
-    aState.ComputeBlockAvailSpace(frame, display, availSpace);
+    aState.ComputeBlockAvailSpace(frame, display, replacedWidth, availSpace);
     
     // Now put the Y coordinate back to the top of the top-margin +
     // clearance, and flow the block.
@@ -6783,35 +6787,42 @@ nsBlockFrame::BlockCanIntersectFloats(ns
          !(aFrame->GetStateBits() & NS_BLOCK_SPACE_MGR);
 }
 
-static nscoord
+static nsBlockFrame::ReplacedElementWidthToClear
 OneWidthToClearPastFloats(nsPresContext* aPresContext,
                           const nsHTMLReflowState& aParentReflowState,
-                          nscoord aCBWidth,
+                          nscoord aAvailableWidth,
                           nsIFrame* aFrame)
 {
-  // We need to compute percent widths, since intrinsic width
-  // computation doesn't.
-  if (aFrame->GetStylePosition()->mWidth.GetUnit() == eStyleUnit_Percent) {
-    // All we really need here is the result of ComputeSize, and we
-    // could *almost* get that from an nsCSSOffsetState, except for the
-    // last argument.
-    nsSize availSpace(aCBWidth, NS_UNCONSTRAINEDSIZE);
-    nsHTMLReflowState reflowState(aPresContext, aParentReflowState,
-                                  aFrame, availSpace);
-    return reflowState.ComputedWidth();
-  }
-
-  return nsLayoutUtils::IntrinsicForContainer(aParentReflowState.rendContext,
-                                              aFrame,
-                                              nsLayoutUtils::MIN_WIDTH);
-}
-
+  nsBlockFrame::ReplacedElementWidthToClear result;
+  // We actually don't want the min width here; see bug 427782; we only
+  // want to displace if the width won't compute to a value small enough
+  // to fit.
+  // All we really need here is the result of ComputeSize, and we
+  // could *almost* get that from an nsCSSOffsetState, except for the
+  // last argument.
+  nsSize availSpace(aAvailableWidth, NS_UNCONSTRAINEDSIZE);
+  nsHTMLReflowState reflowState(aPresContext, aParentReflowState,
+                                aFrame, availSpace);
+  result.borderBoxWidth = reflowState.ComputedWidth() +
+                          reflowState.mComputedBorderPadding.LeftRight();
+  result.marginLeft  = reflowState.mComputedMargin.left;
+  result.marginRight = reflowState.mComputedMargin.right;
+  return result;
+}
+
+// Note that this width can vary based on the vertical position.
+// However, the cases where it varies are the cases where the width fits
+// in the available space given, which means that variation shouldn't
+// matter.
 /* static */
-nscoord
+nsBlockFrame::ReplacedElementWidthToClear
 nsBlockFrame::WidthToClearPastFloats(nsBlockReflowState& aState,
                                      nsIFrame* aFrame)
 {
-  nscoord result;
+  aState.GetAvailableSpace();
+  nscoord leftOffset, rightOffset;
+
+  ReplacedElementWidthToClear result;
   // A table outer frame is an exception in that it is a block child
   // that is not a containing block for its children.
   if (aFrame->GetType() == nsGkAtoms::tableOuterFrame) {
@@ -6820,20 +6831,82 @@ nsBlockFrame::WidthToClearPastFloats(nsB
                               aFrame, availSpace);
     nsIFrame *innerTable = aFrame->GetFirstChild(nsnull);
     nsIFrame *caption = aFrame->GetFirstChild(nsGkAtoms::captionList);
-    result = OneWidthToClearPastFloats(aState.mPresContext, outerRS,
-                                       aState.mContentArea.width, innerTable);
-    if (caption) {
-      nscoord captionWidth = OneWidthToClearPastFloats(aState.mPresContext,
-                               outerRS, aState.mContentArea.width, caption);
-      PRUint8 captionSide = caption->GetStyleTableBorder()->mCaptionSide;
-      if (captionSide == NS_SIDE_TOP || captionSide == NS_SIDE_BOTTOM)
-        result = PR_MAX(result, captionWidth);
-      else
-        result += captionWidth;
-    }
-  } else {
+    PRUint8 captionSide;
+    if (!caption) {
+      aState.ReplacedBlockOffsetsForFloats(innerTable, leftOffset, rightOffset);
+      nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+      result = OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                         availWidth, innerTable);
+    } else if ((captionSide = caption->GetStyleTableBorder()->mCaptionSide)
+                 == NS_STYLE_CAPTION_SIDE_TOP ||
+               captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM) {
+      aState.ReplacedBlockOffsetsForFloats(innerTable, leftOffset, rightOffset);
+      nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+      ReplacedElementWidthToClear innerTableWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  availWidth, innerTable);
+      ReplacedElementWidthToClear captionWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  innerTableWidth.borderBoxWidth, caption);
+      result.marginLeft = innerTableWidth.marginLeft;
+      result.borderBoxWidth = PR_MAX(innerTableWidth.borderBoxWidth,
+                                     captionWidth.MarginBoxWidth());
+      result.marginRight = innerTableWidth.marginRight;
+    } else if (captionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE ||
+               captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE) {
+      aState.ReplacedBlockOffsetsForFloats(innerTable, leftOffset, rightOffset);
+      nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+      ReplacedElementWidthToClear innerTableWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  availWidth, innerTable);
+      aState.ReplacedBlockOffsetsForFloats(caption, leftOffset, rightOffset);
+      availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+      ReplacedElementWidthToClear captionWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  availWidth, caption);
+      result.marginLeft = PR_MIN(innerTableWidth.marginLeft,
+                                 captionWidth.marginLeft);
+      result.marginRight = PR_MIN(innerTableWidth.marginRight,
+                                  captionWidth.marginRight);
+      result.borderBoxWidth = PR_MAX(innerTableWidth.MarginBoxWidth(),
+                                     captionWidth.MarginBoxWidth()) -
+                              (result.marginLeft + result.marginRight);
+    } else {
+      NS_ASSERTION(captionSide == NS_STYLE_CAPTION_SIDE_LEFT ||
+                   captionSide == NS_STYLE_CAPTION_SIDE_RIGHT,
+                   "unexpected caption-side");
+      nscoord dummy;
+      if (captionSide == NS_STYLE_CAPTION_SIDE_LEFT) {
+        aState.ReplacedBlockOffsetsForFloats(caption, leftOffset, dummy);
+        aState.ReplacedBlockOffsetsForFloats(innerTable, dummy, rightOffset);
+      } else {
+        aState.ReplacedBlockOffsetsForFloats(innerTable, leftOffset, dummy);
+        aState.ReplacedBlockOffsetsForFloats(caption, dummy, rightOffset);
+      }
+      nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
+      ReplacedElementWidthToClear captionWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  availWidth, caption);
+      ReplacedElementWidthToClear innerTableWidth =
+        OneWidthToClearPastFloats(aState.mPresContext, outerRS,
+                                  availWidth - captionWidth.MarginBoxWidth(),
+                                  innerTable);
+      if (captionSide == NS_STYLE_CAPTION_SIDE_LEFT) {
+        result.marginLeft = captionWidth.marginLeft;
+        result.marginRight = innerTableWidth.marginRight;
+      } else {
+        result.marginLeft = innerTableWidth.marginLeft;
+        result.marginRight = captionWidth.marginRight;
+      }
+      result.borderBoxWidth = innerTableWidth.MarginBoxWidth() +
+                              captionWidth.MarginBoxWidth() -
+                              (result.marginLeft + result.marginRight);
+    }
+  } else {
+    aState.ReplacedBlockOffsetsForFloats(aFrame, leftOffset, rightOffset);
+    nscoord availWidth = aState.mContentArea.width - leftOffset - rightOffset;
     result = OneWidthToClearPastFloats(aState.mPresContext,
-               aState.mReflowState, aState.mContentArea.width, aFrame);
+               aState.mReflowState, availWidth, aFrame);
   }
   return result;
 }
diff --git a/layout/generic/nsBlockFrame.h b/layout/generic/nsBlockFrame.h
--- a/layout/generic/nsBlockFrame.h
+++ b/layout/generic/nsBlockFrame.h
@@ -299,8 +299,13 @@ public:
    * Returns the width that needs to be cleared past floats for blocks
    * that cannot intersect floats.
    */
-  static nscoord WidthToClearPastFloats(nsBlockReflowState& aState,
-                                        nsIFrame* aFrame);
+  struct ReplacedElementWidthToClear {
+    nscoord marginLeft, borderBoxWidth, marginRight;
+    nscoord MarginBoxWidth() const
+      { return marginLeft + borderBoxWidth + marginRight; }
+  };
+  static ReplacedElementWidthToClear
+    WidthToClearPastFloats(nsBlockReflowState& aState, nsIFrame* aFrame);
 
   /**
    * Walks up the frame tree, starting with aCandidate, and returns the first
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -188,12 +188,65 @@ nsBlockReflowState::FreeLineBox(nsLineBo
   }
 }
 
+void
+nsBlockReflowState::ReplacedBlockOffsetsForFloats(nsIFrame* aFrame,
+                                                  nscoord& aLeftResult,
+                                                  nscoord& aRightResult,
+                                                  nsBlockFrame::
+                                                    ReplacedElementWidthToClear
+                                                               *aReplacedWidth)
+{
+  // The frame is clueless about the space manager and therefore we
+  // only give it free space. An example is a table frame - the
+  // tables do not flow around floats.
+  // However, we can let its margins intersect floats.
+  NS_ASSERTION(mAvailSpaceRect.x >= 0, "bad avail space rect x");
+  NS_ASSERTION(mAvailSpaceRect.width == 0 ||
+               mAvailSpaceRect.XMost() <= mContentArea.width,
+               "bad avail space rect width");
+
+  nscoord leftOffset, rightOffset;
+  if (mAvailSpaceRect.width == mContentArea.width) {
+    // We don't need to compute margins when there are no floats around.
+    leftOffset = 0;
+    rightOffset = 0;
+  } else {
+    // We pass in aReplacedWidth to make handling outer table frames
+    // work correctly.  For outer table frames, we need to subtract off
+    // the margin that's going to be at the edge of them, since we're
+    // dealing with margin that it's really the child's responsibility
+    // to place.
+    nsCSSOffsetState os(aFrame, mReflowState.rendContext, mContentArea.width);
+    NS_ASSERTION(!aReplacedWidth ||
+                 aFrame->GetType() == nsGkAtoms::tableOuterFrame ||
+                 (aReplacedWidth->marginLeft  == os.mComputedMargin.left &&
+                  aReplacedWidth->marginRight == os.mComputedMargin.right),
+                 "unexpected aReplacedWidth");
+
+    nscoord leftFloatXOffset = mAvailSpaceRect.x;
+    leftOffset = PR_MAX(leftFloatXOffset, os.mComputedMargin.left) -
+                 (aReplacedWidth ? aReplacedWidth->marginLeft
+                                 : os.mComputedMargin.left);
+    leftOffset = PR_MAX(leftOffset, 0); // in case of negative margin
+    nscoord rightFloatXOffset = mContentArea.width - mAvailSpaceRect.XMost();
+    rightOffset = PR_MAX(rightFloatXOffset, os.mComputedMargin.right) -
+                  (aReplacedWidth ? aReplacedWidth->marginRight
+                                  : os.mComputedMargin.right);
+    rightOffset = PR_MAX(rightOffset, 0); // in case of negative margin
+  }
+  aLeftResult = leftOffset;
+  aRightResult = rightOffset;
+}
+
 // Compute the amount of available space for reflowing a block frame
 // at the current Y coordinate. This method assumes that
 // GetAvailableSpace has already been called.
 void
 nsBlockReflowState::ComputeBlockAvailSpace(nsIFrame* aFrame,
                                            const nsStyleDisplay* aDisplay,
+                                           nsBlockFrame::
+                                             ReplacedElementWidthToClear
+                                                               *aReplacedWidth,
                                            nsRect& aResult)
 {
 #ifdef REALLY_NOISY_REFLOW
@@ -222,7 +275,9 @@ nsBlockReflowState::ComputeBlockAvailSpa
   // nsBlockFrame::WidthToClearPastFloats would need to use the
   // shrink-wrap formula, max(MIN_WIDTH, min(avail width, PREF_WIDTH))
   // rather than just using MIN_WIDTH.
-  if (nsBlockFrame::BlockCanIntersectFloats(aFrame)) {
+  NS_ASSERTION(nsBlockFrame::BlockCanIntersectFloats(aFrame) == !aReplacedWidth,
+               "unexpected replaced width");
+  if (!aReplacedWidth) {
     if (mBand.GetFloatCount()) {
       // Use the float-edge property to determine how the child block
       // will interact with the float.
@@ -254,11 +309,11 @@ nsBlockReflowState::ComputeBlockAvailSpa
     }
   }
   else {
-    // The frame is clueless about the space manager and therefore we
-    // only give it free space. An example is a table frame - the
-    // tables do not flow around floats.
-    aResult.x = mAvailSpaceRect.x + borderPadding.left;
-    aResult.width = mAvailSpaceRect.width;
+    nscoord leftOffset, rightOffset;
+    ReplacedBlockOffsetsForFloats(aFrame, leftOffset, rightOffset,
+                                  aReplacedWidth);
+    aResult.x = borderPadding.left + leftOffset;
+    aResult.width = mContentArea.width - leftOffset - rightOffset;
   }
 
 #ifdef REALLY_NOISY_REFLOW
@@ -1004,7 +1059,7 @@ nsBlockReflowState::PlaceBelowCurrentLin
 
 nscoord
 nsBlockReflowState::ClearFloats(nscoord aY, PRUint8 aBreakType,
-                                nscoord aReplacedWidth)
+                     nsBlockFrame::ReplacedElementWidthToClear *aReplacedWidth)
 {
 #ifdef DEBUG
   if (nsBlockFrame::gNoisyReflow) {
@@ -1027,10 +1082,16 @@ nsBlockReflowState::ClearFloats(nscoord 
     newY = bp.top + mSpaceManager->ClearFloats(newY - bp.top, aBreakType);
   }
 
-  if (aReplacedWidth > 0) {
+  if (aReplacedWidth) {
     for (;;) {
       GetAvailableSpace(newY, PR_FALSE);
-      if (mAvailSpaceRect.width >= aReplacedWidth || mBand.GetFloatCount() == 0) {
+      if (mBand.GetFloatCount() == 0 ||
+          PR_MAX(mAvailSpaceRect.x, aReplacedWidth->marginLeft) +
+            aReplacedWidth->borderBoxWidth +
+            PR_MAX(mContentArea.width -
+                     PR_MIN(mContentArea.width, mAvailSpaceRect.XMost()),
+                   aReplacedWidth->marginRight) <=
+          mContentArea.width) {
         break;
       }
       // See the analogous code for inlines in nsBlockFrame::DoReflowInlineFrames
diff --git a/layout/generic/nsBlockReflowState.h b/layout/generic/nsBlockReflowState.h
--- a/layout/generic/nsBlockReflowState.h
+++ b/layout/generic/nsBlockReflowState.h
@@ -46,9 +46,7 @@
 #include "nsBlockBandData.h"
 #include "nsLineBox.h"
 #include "nsFrameList.h"
-#include "nsContainerFrame.h"
-
-class nsBlockFrame;
+#include "nsBlockFrame.h"
 
   // block reflow state flags
 #define BRS_UNCONSTRAINEDHEIGHT   0x00000001
@@ -111,7 +109,8 @@ public:
   // Returns the first coordinate >= aY that clears the
   // floats indicated by aBreakType and has enough width between floats
   // (or no floats remaining) to accomodate aReplacedWidth.
-  nscoord ClearFloats(nscoord aY, PRUint8 aBreakType, nscoord aReplacedWidth = 0);
+  nscoord ClearFloats(nscoord aY, PRUint8 aBreakType,
+    nsBlockFrame::ReplacedElementWidthToClear *aReplacedWidth = nsnull);
 
   PRBool IsAdjacentWithTop() const {
     return mY ==
@@ -141,8 +140,18 @@ public:
   // Reconstruct the previous bottom margin that goes above |aLine|.
   void ReconstructMarginAbove(nsLineList::iterator aLine);
 
+  // Caller must have called GetAvailableSpace for the current mY
+  void ReplacedBlockOffsetsForFloats(nsIFrame* aFrame,
+                                     nscoord& aLeftResult,
+                                     nscoord& aRightResult,
+                                     nsBlockFrame::ReplacedElementWidthToClear
+                                                     *aReplacedWidth = nsnull);
+
+  // Caller must have called GetAvailableSpace for the current mY
   void ComputeBlockAvailSpace(nsIFrame* aFrame,
                               const nsStyleDisplay* aDisplay,
+                              nsBlockFrame::ReplacedElementWidthToClear
+                                                               *aReplacedWidth,
                               nsRect& aResult);
 
 protected:
diff --git a/layout/reftests/bugs/134706-3-left-scrollframe-ref.html b/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
--- a/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
+++ b/layout/reftests/bugs/134706-3-left-scrollframe-ref.html
@@ -7,11 +7,9 @@
 </head>
 <body>
 
-<div style="width: 300px; height: 150px; background: aqua">
+<div style="width: 300px; height: 100px; background: aqua">
   <div style="float:left; background:blue; width: 100px; height: 100px"></div>
-  <div style="float:left; background:yellow; width: 300px; height: 50px">
-    <div style="background:purple; width: 250px; height: 50px"></div>
-  </div>
+  <div style="float:left; background:purple; width: 200px; height: 50px"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/134706-3-right-scrollframe-ref.html b/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
--- a/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
+++ b/layout/reftests/bugs/134706-3-right-scrollframe-ref.html
@@ -7,11 +7,9 @@
 </head>
 <body>
 
-<div style="width: 300px; height: 150px; background: aqua">
+<div style="width: 300px; height: 100px; background: aqua">
   <div style="float:right; background:blue; width: 100px; height: 100px"></div>
-  <div style="float:left; background:yellow; width: 300px; height: 50px">
-    <div style="background:purple; width: 250px; height: 50px"></div>
-  </div>
+  <div style="float:left; background:purple; width: 200px; height: 50px"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/134706-4-ref.html b/layout/reftests/bugs/134706-4-ref.html
--- a/layout/reftests/bugs/134706-4-ref.html
+++ b/layout/reftests/bugs/134706-4-ref.html
@@ -34,33 +34,25 @@
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:left; background:blue; width: 100px; height: 20px"></div>
   <div style="float:left; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:left; background:blue; width: 100px; height: 20px"></div>
   <div style="float:right; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:right; background:blue; width: 100px; height: 20px"></div>
   <div style="float:left; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 <div style="width: 300px; height: 20px; background: aqua"><tr><td>
   <div style="float:right; background:blue; width: 100px; height: 20px"></div>
   <div style="float:right; background:silver; width: 100px; height: 6px"></div>
-  <div style="float:left; width: 200px; height: 10px; background: yellow">
-    <div style="float:left; width: 150px; height: 10px; background: purple"></div>
-  </div>
+  <div style="float:left; width: 100px; height: 10px; background: purple"></div>
 </div>
 
 </body>
diff --git a/layout/reftests/bugs/427129-image.html b/layout/reftests/bugs/427129-image.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/427129-image.html
@@ -0,0 +1,190 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>Reftest, bug 427129</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	html, body { margin: 0; }
+
+	.contain {
+		background: aqua; color: black;
+		height: 10px; margin: 2px 50px;
+		padding-top: 0.1px; /* needed for some reason (XXX WHY?) */
+	}
+
+	.fl, .fr { height: 5px; }
+	.fl { float: left; width: 56px; }
+	.fr { float: right; width: 73px; }
+
+	.t { display: block; background: blue; height: 5px; width: 85px;
+	     border-left: 1px solid blue; padding-left: 2px;
+	     padding-right: 4px; border-right: 8px solid blue; }
+
+	</style>
+</head>
+<body>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: 30px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: 56px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: 73px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: 100px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: auto">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: auto; margin-right: 30px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: auto; margin-right: 56px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: auto; margin-right: 73px">
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<img src="solidblue2.png" class="t" style="margin-left: auto; margin-right: 100px">
+</div>
+
+<!-- Remember that the extra end-edge margin gets ignored -->
+<div style="width: 300px">
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px; width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="width: 57px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px; width: 57px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px 0 56px; width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px 0 57px; width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 73px 0 15px; width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 74px 0 15px; width: 56px">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="width: 28%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px; width: 28%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="width: 29%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px; width: 29%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px 0 56px; width: 28%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 15px 0 57px; width: 28%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 73px 0 15px; width: 28%">
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<img src="solidblue2.png" class="t" style="margin: 0 74px 0 15px; width: 28%">
+	</div>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/427129-ref.html b/layout/reftests/bugs/427129-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/427129-ref.html
@@ -0,0 +1,136 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>Reftest, bug 427129</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	html, body { margin: 0; }
+
+	.contain {
+		background: aqua; color: black;
+		height: 10px; margin: 2px 50px;
+		padding-top: 0.1px; /* needed for some reason (XXX WHY?) */
+	}
+
+	.t { background: blue; height: 5px; width: 100px; }
+
+	</style>
+</head>
+<body>
+
+<div class="contain">
+	<div class="t" style="margin-left: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: 100px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="t" style="margin-left: auto; margin-right: 100px"></div>
+</div>
+
+<!-- Remember that the extra end-edge margin gets ignored -->
+<div style="width: 300px">
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; width: 72px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; margin-left: 15px; width: 72px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; margin-left: 57px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<!-- we ignore the margin-right here, which is questionable but
+		     probably correct -->
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; width: 73px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; margin-left: 15px; width: 73px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-top: 5px; margin-left: 57px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+
+	<div class="contain">
+		<!-- we ignore the margin-right here, which is questionable but
+		     probably correct -->
+		<div class="t" style="margin-left: 56px; width: 71px"></div>
+	</div>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/427129-scrollframe.html b/layout/reftests/bugs/427129-scrollframe.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/427129-scrollframe.html
@@ -0,0 +1,190 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>Reftest, bug 427129</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	html, body { margin: 0; }
+
+	.contain {
+		background: aqua; color: black;
+		height: 10px; margin: 2px 50px;
+		padding-top: 0.1px; /* needed for some reason (XXX WHY?) */
+	}
+
+	.fl, .fr { height: 5px; }
+	.fl { float: left; width: 56px; }
+	.fr { float: right; width: 73px; }
+
+	.t { overflow: hidden; background: blue; height: 5px; width: 85px;
+	     border-left: 1px solid blue; padding-left: 2px;
+	     padding-right: 4px; border-right: 8px solid blue; }
+
+	</style>
+</head>
+<body>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 30px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: 100px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 30px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 56px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 73px"></div>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<div class="t" style="margin-left: auto; margin-right: 100px"></div>
+</div>
+
+<!-- Remember that the extra end-edge margin gets ignored -->
+<div style="width: 300px">
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 57px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 57px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 56px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 57px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 73px 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 74px 0 15px; width: 56px"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="width: 29%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px; width: 29%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 56px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 15px 0 57px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 73px 0 15px; width: 28%"></div>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<div class="t" style="margin: 0 74px 0 15px; width: 28%"></div>
+	</div>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/427129-table.html b/layout/reftests/bugs/427129-table.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/427129-table.html
@@ -0,0 +1,192 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
+	"http://www.w3.org/TR/html4/strict.dtd">
+<html lang="en-US">
+<head>
+	<title>Reftest, bug 427129</title>
+	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+	<meta http-equiv="Content-Style-Type" content="text/css">
+	<style type="text/css">
+
+	html, body { margin: 0; }
+
+	.contain {
+		background: aqua; color: black;
+		height: 10px; margin: 2px 50px;
+		padding-top: 0.1px; /* needed for some reason (XXX WHY?) */
+	}
+
+	.fl, .fr { height: 5px; }
+	.fl { float: left; width: 56px; }
+	.fr { float: right; width: 73px; }
+
+	/* tables default to border-box sizing */
+	.t { background: blue; height: 5px; width: 100px; border-spacing: 0;
+	     border-left: 1px solid blue; padding-left: 2px;
+	     padding-right: 4px; border-right: 8px solid blue; }
+	.t td { padding: 0; }
+
+	</style>
+</head>
+<body>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: 30px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: 56px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: 73px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: 100px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: auto"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: auto; margin-right: 30px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: auto; margin-right: 56px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: auto; margin-right: 73px"><tr><td></td></tr></table>
+</div>
+
+<div class="contain">
+	<div class="fl"></div>
+	<div class="fr"></div>
+	<table class="t" style="margin-left: auto; margin-right: 100px"><tr><td></td></tr></table>
+</div>
+
+<!-- Remember that the extra end-edge margin gets ignored -->
+<div style="width: 300px">
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px; width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="width: 72px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px; width: 72px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px 0 56px; width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px 0 57px; width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 73px 0 15px; width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 74px 0 15px; width: 71px"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="width: 35.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px; width: 35.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="width: 36.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px; width: 36.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px 0 56px; width: 35.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 15px 0 57px; width: 35.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 73px 0 15px; width: 35.5%"><tr><td></td></tr></table>
+	</div>
+
+	<div class="contain">
+		<div class="fl"></div>
+		<div class="fr"></div>
+		<table class="t" style="margin: 0 74px 0 15px; width: 35.5%"><tr><td></td></tr></table>
+	</div>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/bugs/reftest.list b/layout/reftests/bugs/reftest.list
--- a/layout/reftests/bugs/reftest.list
+++ b/layout/reftests/bugs/reftest.list
@@ -805,3 +805,6 @@ fails-if(MOZ_WIDGET_TOOLKIT=="gtk2") == 
 == 425972-1.html 425972-1-ref.html
 == 425972-2.html 425972-2-ref.html
 != 425972-1.html 425972-2.html
+== 427129-scrollframe.html 427129-ref.html
+== 427129-table.html 427129-ref.html
+== 427129-image.html 427129-ref.html
diff --git a/layout/reftests/bugs/solidblue2.png b/layout/reftests/bugs/solidblue2.png
new file mode 100644
index 0000000000000000000000000000000000000000..9998c98b96089d6aefa11febd60f90795a81e434
GIT binary patch
literal 82
zc%17D@N?(olHy`uVBq!ia0vp^j3CUx1SBVv2j2s6ii6yp7}lMWc?sn3c)B=-a9mGL
cNch3ez{t$VaC6n&%|LMmPgg&ebxsLQ0FMR}GXMYp


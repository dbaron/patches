From: L. David Baron <dbaron@dbaron.org>

Bug 1133392 - Make handling of nsChangeHint_UpdateSubtreeOverflow iterate continuations, as all change hint handling needs to.  r=mats

The test fails without the patch (missing underline on "an underline")
and passes with the patch (where the underline is present, and aligned
with the non-displaced text).

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -826,18 +826,25 @@ RestyleManager::ProcessRestyledFrames(ns
                    (hint & nsChangeHint_UpdateOverflow),
                    "nsChangeHint_UpdateOverflow should be passed too");
       if (!didReflowThisFrame &&
           (hint & (nsChangeHint_UpdateOverflow |
                    nsChangeHint_UpdatePostTransformOverflow |
                    nsChangeHint_UpdateParentOverflow |
                    nsChangeHint_UpdateSubtreeOverflow))) {
         if (hint & nsChangeHint_UpdateSubtreeOverflow) {
-          // FIXME (bug 1133392): Continuations?
-          AddSubtreeToOverflowTracker(frame);
+          for (nsIFrame *cont = frame; cont; cont =
+                 nsLayoutUtils::GetNextContinuationOrIBSplitSibling(cont)) {
+            AddSubtreeToOverflowTracker(cont);
+          }
+          // The work we just did in AddSubtreeToOverflowTracker
+          // subsumes some of the other hints:
+          hint = NS_SubtractHint(hint,
+                   NS_CombineHint(nsChangeHint_UpdateOverflow |
+                                  nsChangeHint_UpdatePostTransformOverflow));
         }
         if (hint & nsChangeHint_ChildrenOnlyTransform) {
           // The overflow areas of the child frames need to be updated:
           nsIFrame* hintFrame = GetFrameForChildrenOnlyTransformHint(frame);
           nsIFrame* childFrame = hintFrame->GetFirstPrincipalChild();
           NS_ASSERTION(!nsLayoutUtils::GetNextContinuationOrIBSplitSibling(frame),
                        "SVG frames should not have continuations "
                        "or ib-split siblings");
@@ -861,17 +868,16 @@ RestyleManager::ProcessRestyledFrames(ns
                          "SVG child frame not expected to have different parent");
           }
         }
         // If |frame| is dirty or has dirty children, we don't bother updating
         // overflows since that will happen when it's reflowed.
         if (!(frame->GetStateBits() &
               (NS_FRAME_IS_DIRTY | NS_FRAME_HAS_DIRTY_CHILDREN))) {
           if (hint & (nsChangeHint_UpdateOverflow |
-                      nsChangeHint_UpdateSubtreeOverflow |
                       nsChangeHint_UpdatePostTransformOverflow)) {
             OverflowChangedTracker::ChangeKind changeKind;
             // If we have both nsChangeHint_UpdateOverflow and
             // nsChangeHint_UpdatePostTransformOverflow,
             // CHILDREN_CHANGED is selected as it is
             // strictly stronger.
             if (hint & (nsChangeHint_UpdateOverflow |
                         nsChangeHint_UpdateSubtreeOverflow)) {
diff --git a/layout/reftests/text-decoration/1133392-ref.html b/layout/reftests/text-decoration/1133392-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/text-decoration/1133392-ref.html
@@ -0,0 +1,17 @@
+<!DOCTYPE HTML>
+<html>
+<title>reftest, bug 1133392</title>
+<style>
+
+p > span {
+  text-decoration: underline;
+}
+
+p > span > span {
+  vertical-align: -2em;
+}
+
+</style>
+
+<p class="state-one"><span>This text<br>
+has <span>an underline</span>.</span></p>
diff --git a/layout/reftests/text-decoration/1133392.html b/layout/reftests/text-decoration/1133392.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/text-decoration/1133392.html
@@ -0,0 +1,36 @@
+<!DOCTYPE HTML>
+<html class="reftest-wait">
+<title>reftest, bug 1133392</title>
+<style>
+
+  p:not(.state-one) > span {
+    text-decoration: underline;
+  }
+
+  p > span > span {
+    vertical-align: -2em;
+  }
+
+  p:not(.state-three) > span > span {
+    visibility: hidden;
+  }
+
+</style>
+
+<p class="state-one"><span>This text<br>
+has <span>an underline</span>.</span></p>
+
+<script>
+
+  var p = document.getElementsByTagName("p")[0];
+  p.offsetLeft; // flush layout
+  document.getElementsByTagName('p')[0].className = 'state-two';
+
+  document.addEventListener("MozReftestInvalidate", step_three, false);
+  function step_three(event) {
+    document.getElementsByTagName('p')[0].className = 'state-three';
+    document.documentElement.classList.remove("reftest-wait");
+  }
+
+</script>
+
diff --git a/layout/reftests/text-decoration/reftest.list b/layout/reftests/text-decoration/reftest.list
--- a/layout/reftests/text-decoration/reftest.list
+++ b/layout/reftests/text-decoration/reftest.list
@@ -102,8 +102,9 @@ skip-if(B2G) == 641444-1.html 641444-1-r
 == decoration-css21-block.html decoration-css21-block-ref.html
 != inline-baseline-almost-standards.html inline-baseline-almost-standards-ref.html
 != inline-baseline-quirks.html inline-baseline-quirks-ref.html
 == 676538-1.html 676538-1-ref.html
 == underline-button-1.html underline-button-1-ref.html
 == underline-button-2.html underline-button-2-ref.html
 == underline-select-1.html underline-select-1-ref.html
 == underline-select-2.html underline-select-2-ref.html
+== 1133392.html 1133392-ref.html

Only run assertion checks in DEBUG builds.  (Bug 472557)

diff --git a/layout/tools/reftest/reftest.js b/layout/tools/reftest/reftest.js
--- a/layout/tools/reftest/reftest.js
+++ b/layout/tools/reftest/reftest.js
@@ -861,45 +861,47 @@ function FinishTestItem()
     gClearingForAssertionCheck = true;
     gBrowser.loadURI("about:blank");
 }
 
 function DoAssertionCheck()
 {
     gClearingForAssertionCheck = false;
 
-    // TEMPORARILY DISABLING ASSERTION CHECKS FOR NOW.  TO RE-ENABLE,
-    // USE COMMENTED LINE TO REPLACE FOLLOWING ONE.
-    // var newAssertionCount = gDebug.assertionCount;
-    var newAssertionCount = 0;
-    var numAsserts = newAssertionCount - gAssertionCount;
-    gAssertionCount = newAssertionCount;
+    if (gDebug.isDebugBuild) {
+        // TEMPORARILY DISABLING ASSERTION CHECKS FOR NOW.  TO RE-ENABLE,
+        // USE COMMENTED LINE TO REPLACE FOLLOWING ONE.
+        // var newAssertionCount = gDebug.assertionCount;
+        var newAssertionCount = 0;
+        var numAsserts = newAssertionCount - gAssertionCount;
+        gAssertionCount = newAssertionCount;
 
-    var minAsserts = gURLs[0].minAsserts;
-    var maxAsserts = gURLs[0].maxAsserts;
+        var minAsserts = gURLs[0].minAsserts;
+        var maxAsserts = gURLs[0].maxAsserts;
 
-    var expectedAssertions = "expected " + minAsserts;
-    if (minAsserts != maxAsserts) {
-        expectedAssertions += " to " + maxAsserts;
-    }
-    expectedAssertions += " assertions";
+        var expectedAssertions = "expected " + minAsserts;
+        if (minAsserts != maxAsserts) {
+            expectedAssertions += " to " + maxAsserts;
+        }
+        expectedAssertions += " assertions";
 
-    if (numAsserts < minAsserts) {
-        ++gTestResults.AssertionUnexpectedFixed;
-        dump("REFTEST TEST-UNEXPECTED-PASS | " + gURLs[0].prettyPath +
-             " | assertion count " + numAsserts + " is less than " +
-             expectedAssertions + "\n");
-    } else if (numAsserts > maxAsserts) {
-        ++gTestResults.AssertionUnexpected;
-        dump("REFTEST TEST-UNEXPECTED-FAIL | " + gURLs[0].prettyPath +
-             " | assertion count " + numAsserts + " is more than " +
-             expectedAssertions + "\n");
-    } else if (numAsserts != 0) {
-        ++gTestResults.AssertionKnown;
-        dump("REFTEST TEST-KNOWN-FAIL | " + gURLs[0].prettyPath +
-             " | assertion count " + numAsserts + " matches " +
-             expectedAssertions + "\n");
+        if (numAsserts < minAsserts) {
+            ++gTestResults.AssertionUnexpectedFixed;
+            dump("REFTEST TEST-UNEXPECTED-PASS | " + gURLs[0].prettyPath +
+                 " | assertion count " + numAsserts + " is less than " +
+                 expectedAssertions + "\n");
+        } else if (numAsserts > maxAsserts) {
+            ++gTestResults.AssertionUnexpected;
+            dump("REFTEST TEST-UNEXPECTED-FAIL | " + gURLs[0].prettyPath +
+                 " | assertion count " + numAsserts + " is more than " +
+                 expectedAssertions + "\n");
+        } else if (numAsserts != 0) {
+            ++gTestResults.AssertionKnown;
+            dump("REFTEST TEST-KNOWN-FAIL | " + gURLs[0].prettyPath +
+                 " | assertion count " + numAsserts + " matches " +
+                 expectedAssertions + "\n");
+        }
     }
 
     // And start the next test.
     gURLs.shift();
     StartCurrentTest();
 }
diff --git a/xpcom/base/nsDebugImpl.cpp b/xpcom/base/nsDebugImpl.cpp
--- a/xpcom/base/nsDebugImpl.cpp
+++ b/xpcom/base/nsDebugImpl.cpp
@@ -133,16 +133,27 @@ nsDebugImpl::Break(const char *aFile, PR
 NS_IMETHODIMP
 nsDebugImpl::Abort(const char *aFile, PRInt32 aLine)
 {
   NS_DebugBreak(NS_DEBUG_ABORT, nsnull, nsnull, aFile, aLine);
   return NS_OK;
 }
 
 NS_IMETHODIMP
+nsDebugImpl::GetIsDebugBuild(PRBool* aResult)
+{
+#ifdef DEBUG
+  *aResult = PR_TRUE;
+#else
+  *aResult = PR_FALSE;
+#endif
+  return NS_OK;
+}
+
+NS_IMETHODIMP
 nsDebugImpl::GetAssertionCount(PRInt32* aResult)
 {
   *aResult = gAssertionCount;
   return NS_OK;
 }
 
 /**
  * Implementation of the nsDebug methods. Note that this code is
diff --git a/xpcom/base/nsIDebug2.idl b/xpcom/base/nsIDebug2.idl
--- a/xpcom/base/nsIDebug2.idl
+++ b/xpcom/base/nsIDebug2.idl
@@ -34,16 +34,23 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 /* interface to expose information about calls to NS_DebugBreak */
 
 #include "nsIDebug.idl"
 
-[scriptable, uuid(15c0b474-fedb-4789-878b-def834b84735)]
+[scriptable, uuid(9c9307ed-480a-4f2a-8f29-21378c03bcbc)]
 interface nsIDebug2 : nsIDebug
 {
     /**
+     * Whether XPCOM was compiled with DEBUG defined.  This often
+     * correlates to whether other code (e.g., Firefox, XULRunner) was
+     * compiled with DEBUG defined.
+     */
+    readonly attribute boolean isDebugBuild;
+
+    /**
      * The number of assertions since process start.
      */
     readonly attribute long assertionCount;
 };

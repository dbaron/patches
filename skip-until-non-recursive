Use a local stack rather than the call stack in SkipUntil to avoid excessive recursion.  (Bug 432561)

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -2167,30 +2167,37 @@ CSSParserImpl::ParsePageRule(RuleAppendF
   // XXX not yet implemented
   return PR_FALSE;
 }
 
 void
 CSSParserImpl::SkipUntil(PRUnichar aStopSymbol)
 {
   nsCSSToken* tk = &mToken;
+  nsAutoTArray<PRUnichar, 16> stack;
+  stack.AppendElement(aStopSymbol);
   for (;;) {
     if (!GetToken(PR_TRUE)) {
       break;
     }
     if (eCSSToken_Symbol == tk->mType) {
       PRUnichar symbol = tk->mSymbol;
-      if (symbol == aStopSymbol) {
-        break;
+      if (symbol == stack.ElementAt(stack.Length() - 1)) {
+        if (stack.Length() == 0) {
+          break;
+        }
       } else if ('{' == symbol) {
-        SkipUntil('}');
+        // In this case and the two below, just handle out-of-memory by
+        // parsing incorrectly.  It's highly unlikely we're dealing with
+        // a legitimate style sheet anyway.
+        stack.AppendElement('}');
       } else if ('[' == symbol) {
-        SkipUntil(']');
+        stack.AppendElement(']');
       } else if ('(' == symbol) {
-        SkipUntil(')');
+        stack.AppendElement(')');
       }
     }
   }
 }
 
 void
 CSSParserImpl::SkipUntilOneOf(const PRUnichar* aStopSymbolChars)
 {

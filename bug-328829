Make things inside foreignObject reflow in response to style changes that cause reflow.  b=328829

diff -r 032fc5f14c9b layout/reftests/bugs/328829-1-ref.xhtml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/328829-1-ref.xhtml	Tue Jan 30 21:01:18 2007 -0800
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html lang="en" xml:lang="en"
+      xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:svg="http://www.w3.org/2000/svg">
+<head>
+	<title>Testcase, bug 328829</title>
+	<style type="text/css">
+	html, body, svg { margin: 0; padding: 0; border: none; }
+	body > svg { display:block; } /* don't leave room for descenders! */
+	</style>
+</head>
+<body onload="run()">
+
+<svg:svg width="100%" height="100%">
+	<svg:g style="font-size: 24px">
+		<svg:foreignObject width="100%" height="100%">
+			<span>hello</span> <span>world</span>
+		</svg:foreignObject>
+	</svg:g>
+</svg:svg>
+
+</body>
+</html>
diff -r 032fc5f14c9b layout/reftests/bugs/328829-1.xhtml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/328829-1.xhtml	Tue Jan 30 20:59:37 2007 -0800
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html lang="en" xml:lang="en"
+      xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:svg="http://www.w3.org/2000/svg">
+<head>
+	<title>Testcase, bug 328829</title>
+	<style type="text/css">
+	html, body, svg { margin: 0; padding: 0; border: none; }
+	body > svg { display:block; } /* don't leave room for descenders! */
+	</style>
+	<script type="application/javascript">
+
+	function run() {
+		setTimeout("document.getElementById('fonted').style.fontSize = '24px'", 0);
+	}
+
+	</script>
+</head>
+<body onload="run()">
+
+<svg:svg width="100%" height="100%">
+	<svg:g id="fonted" style="font-size: 12px">
+		<svg:foreignObject width="100%" height="100%">
+			<span>hello</span> <span>world</span>
+		</svg:foreignObject>
+	</svg:g>
+</svg:svg>
+
+</body>
+</html>
diff -r 032fc5f14c9b layout/reftests/bugs/328829-2-ref.xhtml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/328829-2-ref.xhtml	Tue Jan 30 21:01:00 2007 -0800
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html lang="en" xml:lang="en"
+      xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:svg="http://www.w3.org/2000/svg">
+<head>
+	<title>Testcase, bug 328829</title>
+	<style type="text/css">
+	html, body, svg { margin: 0; padding: 0; border: none; }
+	body > svg { display:block; } /* don't leave room for descenders! */
+	</style>
+</head>
+<body onload="run()" style="font-size: 24px">
+
+<svg:svg width="100%" height="100%">
+	<svg:g>
+		<svg:foreignObject width="100%" height="100%">
+			<span>hello</span> <span>world</span>
+		</svg:foreignObject>
+	</svg:g>
+</svg:svg>
+
+</body>
+</html>
diff -r 032fc5f14c9b layout/reftests/bugs/328829-2.xhtml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/328829-2.xhtml	Tue Jan 30 20:59:47 2007 -0800
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html lang="en" xml:lang="en"
+      xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:svg="http://www.w3.org/2000/svg">
+<head>
+	<title>Testcase, bug 328829</title>
+	<style type="text/css">
+	html, body, svg { margin: 0; padding: 0; border: none; }
+	body > svg { display:block; } /* don't leave room for descenders! */
+	</style>
+	<script type="application/javascript">
+
+	function run() {
+		setTimeout("document.getElementById('fonted').style.fontSize = '24px'", 0);
+	}
+
+	</script>
+</head>
+<body onload="run()" id="fonted" style="font-size: 12px">
+
+<svg:svg width="100%" height="100%">
+	<svg:g>
+		<svg:foreignObject width="100%" height="100%">
+			<span>hello</span> <span>world</span>
+		</svg:foreignObject>
+	</svg:g>
+</svg:svg>
+
+</body>
+</html>
diff -r 032fc5f14c9b layout/reftests/reftest.list
--- a/layout/reftests/reftest.list	Sun Jan 28 09:21:05 2007 -0800
+++ b/layout/reftests/reftest.list	Tue Jan 30 21:01:48 2007 -0800
@@ -34,6 +34,8 @@
 == bugs/18217-zorder-4.html bugs/18217-zorder-ref-inline.html
 == bugs/18217-zorder-5.html bugs/18217-zorder-ref-inline.html
 == bugs/142233-1.html bugs/142233-1-ref.html
+== bugs/328829-1.html bugs/328829-1-ref.html
+== bugs/328829-2.html bugs/328829-2-ref.html
 == bugs/339289-1.html bugs/339289-1-ref.html
 == bugs/347912-1.html bugs/347912-1-ref.html
 == bugs/351641-1a.html bugs/351641-1-ref.html
diff -r 032fc5f14c9b layout/svg/base/src/nsSVGForeignObjectFrame.cpp
--- a/layout/svg/base/src/nsSVGForeignObjectFrame.cpp	Sun Jan 28 09:21:05 2007 -0800
+++ b/layout/svg/base/src/nsSVGForeignObjectFrame.cpp	Sun Jan 28 09:21:25 2007 -0800
@@ -144,6 +144,31 @@ nsSVGForeignObjectFrame::DidSetStyleCont
   return NS_OK;
 }
 
+/* virtual */ void
+nsSVGForeignObjectFrame::MarkIntrinsicWidthsDirty()
+{
+  if (GetStateBits() & NS_FRAME_FIRST_REFLOW)
+    // If we haven't had an InitialUpdate yet, nothing to do.
+    return;
+
+  // Use the fact that we get a MarkIntrinsicWidthsDirty whenever
+  // there's a style change that requires reflow to actually cause that
+  // reflow, since the SVG outer frame doesn't know to reflow us.
+  nsIFrame* kid = GetFirstChild(nsnull);
+  if (!kid)
+    return;
+  // Since we don't know whether this is because of a style change on an
+  // ancestor or descendant, mark the kid dirty.  If it's a descendant,
+  // all we need is the NS_FRAME_IS_DIRTY_CHILDREN that our caller is
+  // going to set, though.
+  kid->AddStateBits(NS_FRAME_IS_DIRTY);
+  // This is really a style change, except we're already being called
+  // from MarkIntrinsicWidthsDirty, so say it's a resize to avoid doing
+  // the same work over again.
+  GetPresContext()->PresShell()->FrameNeedsReflow(kid,
+                                                  nsIPresShell::eResize);
+}
+
 NS_IMETHODIMP
 nsSVGForeignObjectFrame::Reflow(nsPresContext*           aPresContext,
                                 nsHTMLReflowMetrics&     aDesiredSize,
diff -r 032fc5f14c9b layout/svg/base/src/nsSVGForeignObjectFrame.h
--- a/layout/svg/base/src/nsSVGForeignObjectFrame.h	Sun Jan 28 09:21:05 2007 -0800
+++ b/layout/svg/base/src/nsSVGForeignObjectFrame.h	Sun Jan 28 09:21:25 2007 -0800
@@ -78,6 +78,7 @@ public:
   }
 
   NS_IMETHOD DidSetStyleContext();
+  virtual void MarkIntrinsicWidthsDirty();
 
   NS_IMETHOD Reflow(nsPresContext*           aPresContext,
                     nsHTMLReflowMetrics&     aDesiredSize,
diff -r 032fc5f14c9b layout/svg/base/src/nsSVGOuterSVGFrame.cpp
--- a/layout/svg/base/src/nsSVGOuterSVGFrame.cpp	Sun Jan 28 09:21:05 2007 -0800
+++ b/layout/svg/base/src/nsSVGOuterSVGFrame.cpp	Sun Jan 28 09:21:25 2007 -0800
@@ -228,10 +228,6 @@ nsSVGOuterSVGFrame::Reflow(nsPresContext
     // This means that something happened to one of our descendants
     // (excluding those inside svg:foreignObject, since
     // nsSVGForeignObjectFrame is a reflow root).
-
-    // XXXldb If this incremental reflow was the result of a style
-    // change to something that *contains* a foreignObject, then we're
-    // dropping the change completely on the floor!
     aStatus = NS_FRAME_COMPLETE;
     return NS_OK;
   }

From: L. David Baron <dbaron@dbaron.org>

Call BeginUpdate before going into the guts of updating a style attribute so that the resulting flush happens sooner.  (Bug 522595)  r=bzbarsky

diff --git a/layout/style/nsCSSStyleRule.cpp b/layout/style/nsCSSStyleRule.cpp
--- a/layout/style/nsCSSStyleRule.cpp
+++ b/layout/style/nsCSSStyleRule.cpp
@@ -894,16 +894,17 @@ public:
   virtual nsresult GetCSSDeclaration(nsCSSDeclaration **aDecl,
                                      PRBool aAllocate);
   virtual nsresult GetCSSParsingEnvironment(nsIURI** aSheetURI,
                                             nsIURI** aBaseURI,
                                             nsIPrincipal** aSheetPrincipal,
                                             nsICSSLoader** aCSSLoader,
                                             nsICSSParser** aCSSParser);
   virtual nsresult DeclarationChanged();
+  virtual nsIDocument* DocToUpdate();
 
   // Override |AddRef| and |Release| for being a member of
   // |DOMCSSStyleRuleImpl|.
   NS_IMETHOD_(nsrefcnt) AddRef(void);
   NS_IMETHOD_(nsrefcnt) Release(void);
 
   virtual nsINode *GetParentObject()
   {
@@ -1087,16 +1088,22 @@ DOMCSSDeclarationImpl::DeclarationChange
   }
 
   if (owningDoc) {
     owningDoc->StyleRuleChanged(sheet, oldRule, mRule);
   }
   return NS_OK;
 }
 
+nsIDocument*
+DOMCSSDeclarationImpl::DocToUpdate()
+{
+  return nsnull;
+}
+
 DOMCSSStyleRuleImpl::DOMCSSStyleRuleImpl(nsICSSStyleRule* aRule)
   : mDOMDeclaration(aRule)
 {
 }
 
 DOMCSSStyleRuleImpl::~DOMCSSStyleRuleImpl()
 {
 }
diff --git a/layout/style/nsDOMCSSAttrDeclaration.cpp b/layout/style/nsDOMCSSAttrDeclaration.cpp
--- a/layout/style/nsDOMCSSAttrDeclaration.cpp
+++ b/layout/style/nsDOMCSSAttrDeclaration.cpp
@@ -117,16 +117,24 @@ nsDOMCSSAttributeDeclaration::Declaratio
     
   return
 #ifdef MOZ_SMIL
     mIsSMILOverride ? mContent->SetSMILOverrideStyleRule(newRule, PR_TRUE) :
 #endif // MOZ_SMIL
     mContent->SetInlineStyleRule(newRule, PR_TRUE);
 }
 
+nsIDocument*
+nsDOMCSSAttributeDeclaration::DocToUpdate()
+{
+  // We need GetOwnerDoc() rather than GetCurrentDoc() because it might
+  // be the BeginUpdate call that inserts mContent into the document.
+  return mContent->GetOwnerDoc();
+}
+
 nsresult
 nsDOMCSSAttributeDeclaration::GetCSSDeclaration(nsCSSDeclaration **aDecl,
                                                 PRBool aAllocate)
 {
   nsresult result = NS_OK;
 
   *aDecl = nsnull;
   if (mContent) {
diff --git a/layout/style/nsDOMCSSAttrDeclaration.h b/layout/style/nsDOMCSSAttrDeclaration.h
--- a/layout/style/nsDOMCSSAttrDeclaration.h
+++ b/layout/style/nsDOMCSSAttrDeclaration.h
@@ -76,16 +76,17 @@ public:
 
   virtual nsINode *GetParentObject()
   {
     return mContent;
   }
 
 protected:
   virtual nsresult DeclarationChanged();
+  virtual nsIDocument* DocToUpdate();
   
   nsCOMPtr<nsIContent> mContent;
 
 #ifdef MOZ_SMIL
   /* If true, this indicates that this nsDOMCSSAttributeDeclaration
    * should interact with mContent's SMIL override style rule (rather
    * than the inline style rule).
    */
diff --git a/layout/style/nsDOMCSSDeclaration.cpp b/layout/style/nsDOMCSSDeclaration.cpp
--- a/layout/style/nsDOMCSSDeclaration.cpp
+++ b/layout/style/nsDOMCSSDeclaration.cpp
@@ -46,16 +46,17 @@
 #include "nsCSSDeclaration.h"
 #include "nsCSSProps.h"
 #include "nsCOMPtr.h"
 #include "nsIURL.h"
 #include "nsReadableUtils.h"
 #include "nsIPrincipal.h"
 
 #include "nsContentUtils.h"
+#include "mozAutoDocUpdate.h"
 
 
 nsDOMCSSDeclaration::~nsDOMCSSDeclaration()
 {
 }
 
 NS_INTERFACE_TABLE_HEAD(nsDOMCSSDeclaration)
   NS_OFFSET_AND_INTERFACE_TABLE_BEGIN(nsDOMCSSDeclaration)
@@ -258,16 +259,23 @@ nsDOMCSSDeclaration::ParsePropertyValue(
                                     getter_AddRefs(baseURI),
                                     getter_AddRefs(sheetPrincipal),
                                     getter_AddRefs(cssLoader),
                                     getter_AddRefs(cssParser));
   if (NS_FAILED(result)) {
     return result;
   }
 
+  // For nsDOMCSSAttributeDeclaration, DeclarationChanged will lead to
+  // Attribute setting code, which leads in turn to BeginUpdate.  We
+  // need to start the update now so that the old rule doesn't get used
+  // between when we mutate the declaration and when we set the new
+  // rule (see stack in bug 209575).
+  mozAutoDocConditionalContentUpdateBatch autoUpdate(DocToUpdate(), PR_TRUE);
+
   PRBool changed;
   result = cssParser->ParseProperty(aPropID, aPropValue, sheetURI, baseURI,
                                     sheetPrincipal, decl, &changed);
   if (NS_SUCCEEDED(result) && changed) {
     result = DeclarationChanged();
   }
 
   if (cssLoader) {
@@ -298,16 +306,23 @@ nsDOMCSSDeclaration::ParseDeclaration(co
                                     getter_AddRefs(sheetPrincipal),
                                     getter_AddRefs(cssLoader),
                                     getter_AddRefs(cssParser));
 
   if (NS_FAILED(result)) {
     return result;
   }
 
+  // For nsDOMCSSAttributeDeclaration, DeclarationChanged will lead to
+  // Attribute setting code, which leads in turn to BeginUpdate.  We
+  // need to start the update now so that the old rule doesn't get used
+  // between when we mutate the declaration and when we set the new
+  // rule (see stack in bug 209575).
+  mozAutoDocConditionalContentUpdateBatch autoUpdate(DocToUpdate(), PR_TRUE);
+
   PRBool changed;
   result = cssParser->ParseAndAppendDeclaration(aDecl, sheetURI, baseURI,
                                                 sheetPrincipal, decl,
                                                 aParseOnlyOneDecl,
                                                 &changed,
                                                 aClearOldDecl);
   
   if (NS_SUCCEEDED(result) && changed) {
@@ -325,16 +340,23 @@ nsresult
 nsDOMCSSDeclaration::RemoveProperty(const nsCSSProperty aPropID)
 {
   nsCSSDeclaration* decl;
   nsresult rv = GetCSSDeclaration(&decl, PR_FALSE);
   if (!decl) {
     return rv;
   }
 
+  // For nsDOMCSSAttributeDeclaration, DeclarationChanged will lead to
+  // Attribute setting code, which leads in turn to BeginUpdate.  We
+  // need to start the update now so that the old rule doesn't get used
+  // between when we mutate the declaration and when we set the new
+  // rule (see stack in bug 209575).
+  mozAutoDocConditionalContentUpdateBatch autoUpdate(DocToUpdate(), PR_TRUE);
+
   rv = decl->RemoveProperty(aPropID);
 
   if (NS_SUCCEEDED(rv)) {
     rv = DeclarationChanged();
   } else {
     // RemoveProperty used to throw in all sorts of situations -- e.g.
     // if the property was a shorthand one.  Do not propagate its return
     // value to callers.  (XXX or should we propagate it again now?)
diff --git a/layout/style/nsDOMCSSDeclaration.h b/layout/style/nsDOMCSSDeclaration.h
--- a/layout/style/nsDOMCSSDeclaration.h
+++ b/layout/style/nsDOMCSSDeclaration.h
@@ -45,16 +45,17 @@
 #include "nsCycleCollectionParticipant.h"
 #include "nsCOMPtr.h"
 
 class nsCSSDeclaration;
 class nsICSSParser;
 class nsICSSLoader;
 class nsIURI;
 class nsIPrincipal;
+class nsIDocument;
 
 class CSS2PropertiesTearoff : public nsIDOMNSCSS2Properties
 {
 public:
   NS_DECL_CYCLE_COLLECTING_ISUPPORTS
   NS_DECL_CYCLE_COLLECTION_CLASS(CSS2PropertiesTearoff)
 
   NS_DECL_NSIDOMCSS2PROPERTIES
@@ -96,16 +97,20 @@ public:
 
 protected:
   // Always fills in the out parameter, even on failure, and if the out
   // parameter is null the nsresult will be the correct thing to
   // propagate.
   virtual nsresult GetCSSDeclaration(nsCSSDeclaration **aDecl,
                                      PRBool aAllocate) = 0;
   virtual nsresult DeclarationChanged() = 0;
+  // Document that we must call BeginUpdate/EndUpdate on around the
+  // calls to DeclarationChanged and the style rule mutation that leads
+  // to it.
+  virtual nsIDocument* DocToUpdate() = 0;
   
   // This will only fail if it can't get a parser or a principal.
   // This means it can return NS_OK without aURI or aCSSLoader being
   // initialized.
   virtual nsresult GetCSSParsingEnvironment(nsIURI** aSheetURI,
                                             nsIURI** aBaseURI,
                                             nsIPrincipal** aSheetPrincipal,
                                             nsICSSLoader** aCSSLoader,

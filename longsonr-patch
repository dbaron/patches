From: Robert Longson <longsonr@gmail.com>

Bug 584322:  Fix confusion between premultiplied and non-premultiplied colors that was causing feDisplacementMap to offset the result incorrectly.  r=roc  a2.0=dbaron

diff --git a/content/svg/content/src/nsSVGFilters.cpp b/content/svg/content/src/nsSVGFilters.cpp
--- a/content/svg/content/src/nsSVGFilters.cpp
+++ b/content/svg/content/src/nsSVGFilters.cpp
@@ -1063,17 +1063,17 @@ public:
 
   NS_FORWARD_NSIDOMNODE(nsSVGFEColorMatrixElementBase::)
   NS_FORWARD_NSIDOMELEMENT(nsSVGFEColorMatrixElementBase::)
 
   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
 
   virtual nsXPCClassInfo* GetClassInfo();
 protected:
-  virtual PRBool OperatesOnPremultipledAlpha() { return PR_FALSE; }
+  virtual PRBool OperatesOnPremultipledAlpha(PRInt32) { return PR_FALSE; }
 
   virtual EnumAttributesInfo GetEnumInfo();
   virtual StringAttributesInfo GetStringInfo();
 
   enum { TYPE };
   nsSVGEnum mEnumAttributes[1];
   static nsSVGEnumMapping sTypeMap[];
   static EnumInfo sEnumInfo[1];
@@ -1690,17 +1690,17 @@ public:
   NS_FORWARD_NSIDOMNODE(nsSVGFEComponentTransferElementBase::)
   NS_FORWARD_NSIDOMELEMENT(nsSVGFEComponentTransferElementBase::)
 
   // nsIContent
   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
 
   virtual nsXPCClassInfo* GetClassInfo();
 protected:
-  virtual PRBool OperatesOnPremultipledAlpha() { return PR_FALSE; }
+  virtual PRBool OperatesOnPremultipledAlpha(PRInt32) { return PR_FALSE; }
 
   virtual StringAttributesInfo GetStringInfo();
 
   enum { RESULT, IN1 };
   nsSVGString mStringAttributes[2];
   static StringInfo sStringInfo[2];
 };
 
@@ -2710,17 +2710,17 @@ public:
   // nsIContent interface
   NS_IMETHOD_(PRBool) IsAttributeMapped(const nsIAtom* aAttribute) const;
 
   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
 
   virtual nsXPCClassInfo* GetClassInfo();
 protected:
   virtual PRBool OperatesOnSRGB(nsSVGFilterInstance*,
-                                PRUint32, Image*) { return PR_TRUE; }
+                                PRInt32, Image*) { return PR_TRUE; }
 
   virtual StringAttributesInfo GetStringInfo();
 
   enum { RESULT };
   nsSVGString mStringAttributes[1];
   static StringInfo sStringInfo[1];
 };
  
@@ -3893,17 +3893,17 @@ public:
 
   NS_FORWARD_NSIDOMNODE(nsSVGFEConvolveMatrixElementBase::)
   NS_FORWARD_NSIDOMELEMENT(nsSVGFEConvolveMatrixElementBase::)
 
   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
 
   virtual nsXPCClassInfo* GetClassInfo();
 protected:
-  virtual PRBool OperatesOnPremultipledAlpha() {
+  virtual PRBool OperatesOnPremultipledAlpha(PRInt32) {
     return !mBooleanAttributes[PRESERVEALPHA].GetAnimValue();
   }
 
   virtual NumberAttributesInfo GetNumberInfo();
   virtual IntegerAttributesInfo GetIntegerInfo();
   virtual BooleanAttributesInfo GetBooleanInfo();
   virtual EnumAttributesInfo GetEnumInfo();
   virtual StringAttributesInfo GetStringInfo();
@@ -5349,17 +5349,17 @@ public:
 private:
   // Invalidate users of the filter containing this element.
   void Invalidate();
 
   nsresult LoadSVGImage(PRBool aForce, PRBool aNotify);
 
 protected:
   virtual PRBool OperatesOnSRGB(nsSVGFilterInstance*,
-                                PRUint32, Image*) { return PR_TRUE; }
+                                PRInt32, Image*) { return PR_TRUE; }
 
   virtual nsSVGPreserveAspectRatio *GetPreserveAspectRatio();
   virtual StringAttributesInfo GetStringInfo();
 
   enum { RESULT, HREF };
   nsSVGString mStringAttributes[2];
   static StringInfo sStringInfo[2];
 
@@ -5684,23 +5684,26 @@ public:
   NS_FORWARD_NSIDOMNODE(nsSVGFEDisplacementMapElementBase::)
   NS_FORWARD_NSIDOMELEMENT(nsSVGFEDisplacementMapElementBase::)
 
   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
 
   virtual nsXPCClassInfo* GetClassInfo();
 protected:
   virtual PRBool OperatesOnSRGB(nsSVGFilterInstance* aInstance,
-                                PRUint32 aInput, Image* aImage) {
-    if (aInput == 0 && aImage)
+                                PRInt32 aInput, Image* aImage) {
+    if (aInput == 0)
       return aImage->mColorModel.mColorSpace == ColorModel::SRGB;
 
     return nsSVGFEDisplacementMapElementBase::OperatesOnSRGB(aInstance,
                                                              aInput, aImage);
   }
+  virtual PRBool OperatesOnPremultipledAlpha(PRInt32 aInput) {
+    return !(aInput == 1);
+  }
 
   virtual NumberAttributesInfo GetNumberInfo();
   virtual EnumAttributesInfo GetEnumInfo();
   virtual StringAttributesInfo GetStringInfo();
 
   enum { SCALE };
   nsSVGNumber2 mNumberAttributes[1];
   static NumberInfo sNumberInfo[1];
diff --git a/content/svg/content/src/nsSVGFilters.h b/content/svg/content/src/nsSVGFilters.h
--- a/content/svg/content/src/nsSVGFilters.h
+++ b/content/svg/content/src/nsSVGFilters.h
@@ -114,31 +114,31 @@ protected:
                                const Image *aTarget,
                                const nsIntRect& aDataRect,
                                nsSVGNumber2 *aUnitX, nsSVGNumber2 *aUnitY);
 
   void FinishScalingFilter(ScaleInfo *aScaleInfo);
 
 public:
   ColorModel
-  GetInputColorModel(nsSVGFilterInstance* aInstance, PRUint32 aInputIndex,
+  GetInputColorModel(nsSVGFilterInstance* aInstance, PRInt32 aInputIndex,
                      Image* aImage) {
     return ColorModel(
           (OperatesOnSRGB(aInstance, aInputIndex, aImage) ?
              ColorModel::SRGB : ColorModel::LINEAR_RGB),
-          (OperatesOnPremultipledAlpha() ?
+          (OperatesOnPremultipledAlpha(aInputIndex) ?
              ColorModel::PREMULTIPLIED : ColorModel::UNPREMULTIPLIED));
   }
 
   ColorModel
   GetOutputColorModel(nsSVGFilterInstance* aInstance) {
     return ColorModel(
-          (OperatesOnSRGB(aInstance, 0, nsnull) ?
+          (OperatesOnSRGB(aInstance, -1, nsnull) ?
              ColorModel::SRGB : ColorModel::LINEAR_RGB),
-          (OperatesOnPremultipledAlpha() ?
+          (OperatesOnPremultipledAlpha(-1) ?
              ColorModel::PREMULTIPLIED : ColorModel::UNPREMULTIPLIED));
   }
 
   // See http://www.w3.org/TR/SVG/filters.html#FilterPrimitiveSubRegion
   virtual PRBool SubregionIsUnionOfRegions() { return PR_TRUE; }
 
   NS_DECLARE_STATIC_IID_ACCESSOR(NS_SVG_FE_CID)
   
@@ -194,23 +194,23 @@ public:
     // Try to avoid overflow errors dealing with this rect. It will
     // be intersected with some other reasonable-sized rect eventually.
     return nsIntRect(PR_INT32_MIN/2, PR_INT32_MIN/2, PR_INT32_MAX, PR_INT32_MAX);
   }
 
   operator nsISupports*() { return static_cast<nsIContent*>(this); }
   
 protected:
-  virtual PRBool OperatesOnPremultipledAlpha() { return PR_TRUE; }
+  virtual PRBool OperatesOnPremultipledAlpha(PRInt32) { return PR_TRUE; }
 
-  // Called either with aImage non-null, in which case this is
+  // Called either with aInputIndex >=0 in which case this is
   // testing whether the input 'aInputIndex' should be SRGB, or
-  // if aImage is null returns true if the output will be SRGB
+  // if aInputIndex is -1 returns true if the output will be SRGB
   virtual PRBool OperatesOnSRGB(nsSVGFilterInstance* aInstance,
-                                PRUint32 aInputIndex, Image* aImage) {
+                                PRInt32 aInputIndex, Image* aImage) {
     nsIFrame* frame = GetPrimaryFrame();
     if (!frame) return PR_FALSE;
 
     nsStyleContext* style = frame->GetStyleContext();
     return style->GetStyleSVG()->mColorInterpolationFilters ==
              NS_STYLE_COLOR_INTERPOLATION_SRGB;
   }
 
diff --git a/layout/reftests/svg/filters/feDisplacementMap-alpha-01.svg b/layout/reftests/svg/filters/feDisplacementMap-alpha-01.svg
new file mode 100644
--- /dev/null
+++ b/layout/reftests/svg/filters/feDisplacementMap-alpha-01.svg
@@ -0,0 +1,22 @@
+<!--
+     Any copyright is dedicated to the Public Domain.
+     http://creativecommons.org/licenses/publicdomain/
+-->
+<svg xmlns="http://www.w3.org/2000/svg">
+  <title>Testcase for feDisplacementMap processing in2 with premultiplied colour values</title>
+
+  <!-- From https://bugzilla.mozilla.org/show_bug.cgi?id=584322 -->
+  <defs>
+    <filter id="f1">
+     <feTurbulence baseFrequency="0.1" type="fractalNoise" result="result1"/>
+     <feDisplacementMap id="feDisplacementMap" in2="result1"
+                         xChannelSelector="G" yChannelSelector="G"
+                         scale="50" in="SourceGraphic"/>
+    </filter>
+  </defs>
+  <rect width="100%" height="100%" fill="lime"/>
+  <g transform="translate(100,100)">
+    <circle cx="0" cy="0" r="60" fill="red" filter="url('#f1')"/>
+    <circle cx="0" cy="0" r="78" fill="lime"/>
+  </g>
+</svg>
diff --git a/layout/reftests/svg/filters/reftest.list b/layout/reftests/svg/filters/reftest.list
--- a/layout/reftests/svg/filters/reftest.list
+++ b/layout/reftests/svg/filters/reftest.list
@@ -67,14 +67,16 @@ fails == filter-marked-line-01.svg pass.
 == filter-patterned-rect-01.svg pass.svg
 == filter-patterned-rect-02.svg pass.svg
 
 == feComponentTransfer-03.svg pass.svg
 == feComposite-arguments-01.svg pass.svg
 == feConvolveMatrix-bias-01.svg feConvolveMatrix-bias-01-ref.svg
 == feConvolveMatrix-order-01.svg feConvolveMatrix-order-01-ref.svg
 
+== feDisplacementMap-alpha-01.svg pass.svg
+
 == feMorphology-radius-negative-01.svg pass.svg
 == feMorphology-radius-negative-02.svg pass.svg
 == feMorphology-radius-zero-01.svg pass.svg
 == feMorphology-radius-zero-02.svg pass.svg
 
 == feTile-large-01.svg pass.svg

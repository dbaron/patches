From: L. David Baron <dbaron@dbaron.org>

Bug 1053986 - Rename nsIFrame::IsNormalDirection to IsXULNormalDirection.

Written purely with sed, over .h and .cpp files in layout/.

MozReview-Commit-ID: BjamzLIqkUW

diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -2920,17 +2920,17 @@ public:
   virtual nsBoxLayout* GetXULLayoutManager() { return nullptr; }
   nsresult GetXULClientRect(nsRect& aContentRect);
 
   // For nsSprocketLayout
   virtual Valignment GetXULVAlign() const = 0;
   virtual Halignment GetXULHAlign() const = 0;
 
   bool IsXULHorizontal() const { return (mState & NS_STATE_IS_HORIZONTAL) != 0; }
-  bool IsNormalDirection() const { return (mState & NS_STATE_IS_DIRECTION_NORMAL) != 0; }
+  bool IsXULNormalDirection() const { return (mState & NS_STATE_IS_DIRECTION_NORMAL) != 0; }
 
   nsresult Redraw(nsBoxLayoutState& aState);
   virtual nsresult RelayoutChildAtOrdinal(nsIFrame* aChild)=0;
 
 #ifdef DEBUG_LAYOUT
   virtual nsresult SetDebug(nsBoxLayoutState& aState, bool aDebug)=0;
   virtual nsresult GetDebug(bool& aDebug)=0;
 
diff --git a/layout/xul/ScrollBoxObject.cpp b/layout/xul/ScrollBoxObject.cpp
--- a/layout/xul/ScrollBoxObject.cpp
+++ b/layout/xul/ScrollBoxObject.cpp
@@ -113,17 +113,17 @@ void ScrollBoxObject::ScrollByIndex(int3
 
     // now get the scrolled boxes first child.
     nsIFrame* child = nsBox::GetChildXULBox(scrolledBox);
 
     bool horiz = scrolledBox->IsXULHorizontal();
     nsPoint cp = sf->GetScrollPosition();
     nscoord diff = 0;
     int32_t curIndex = 0;
-    bool isLTR = scrolledBox->IsNormalDirection();
+    bool isLTR = scrolledBox->IsXULNormalDirection();
 
     int32_t frameWidth = 0;
     if (!isLTR && horiz) {
       GetWidth(&frameWidth);
       nsCOMPtr<nsIPresShell> shell = GetPresShell(false);
       if (!shell) {
         aRv.Throw(NS_ERROR_UNEXPECTED);
         return;
diff --git a/layout/xul/nsSplitterFrame.cpp b/layout/xul/nsSplitterFrame.cpp
--- a/layout/xul/nsSplitterFrame.cpp
+++ b/layout/xul/nsSplitterFrame.cpp
@@ -711,17 +711,17 @@ nsSplitterFrameInner::MouseDown(nsIDOMEv
             }
         } 
     }
     
     childBox = nsBox::GetNextXULBox(childBox);
     count++;
   }
 
-  if (!mParentBox->IsNormalDirection()) {
+  if (!mParentBox->IsXULNormalDirection()) {
     // The before array is really the after array, and the order needs to be reversed.
     // First reverse both arrays.
     Reverse(mChildInfosBefore, mChildInfosBeforeCount);
     Reverse(mChildInfosAfter, mChildInfosAfterCount);
 
     // Now swap the two arrays.
     Swap(mChildInfosBeforeCount, mChildInfosAfterCount);
     Swap(mChildInfosBefore, mChildInfosAfter);

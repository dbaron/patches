From: L. David Baron <dbaron@dbaron.org>

Convert use of DOMWindowUtils in style system mochitests to SpecialPowers.  (Bug 653461)

diff --git a/layout/style/test/test_media_queries.html b/layout/style/test/test_media_queries.html
--- a/layout/style/test/test_media_queries.html
+++ b/layout/style/test/test_media_queries.html
@@ -22,20 +22,17 @@ https://bugzilla.mozilla.org/show_bug.cg
 
 // Note that many other tests are in test_acid3_test46.html .
 
 SimpleTest.waitForExplicitFinish();
 
 var iframe;
 
 function getZoomRatio() {
-  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-  var utils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
-                    .getInterface(Components.interfaces.nsIDOMWindowUtils);
-  return utils.screenPixelsPerCSSPixel;
+  return SpecialPowers.DOMWindowUtils.screenPixelsPerCSSPixel;
 }
 
 function run() {
   iframe = document.getElementById("subdoc");
   var subdoc = iframe.contentDocument;
   var subwin = iframe.contentWindow;
   var style = subdoc.getElementById("style");
   var iframe_style = iframe.style;
diff --git a/layout/style/test/test_moz_device_pixel_ratio.html b/layout/style/test/test_moz_device_pixel_ratio.html
--- a/layout/style/test/test_moz_device_pixel_ratio.html
+++ b/layout/style/test/test_moz_device_pixel_ratio.html
@@ -44,20 +44,17 @@ function run() {
     return previous;
   }
 
   function isVisible(divName) {
     return window.getComputedStyle(document.getElementById(divName), null).visibility == "visible";
   }
 
   function getZoomRatio() {
-    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-    var utils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
-                      .getInterface(Components.interfaces.nsIDOMWindowUtils);
-    return utils.screenPixelsPerCSSPixel;
+    return SpecialPowers.DOMWindowUtils.screenPixelsPerCSSPixel;
   }
 
   var screenPixelsPerCSSPixel = getZoomRatio();
   var baseRatio = 1.0 * screenPixelsPerCSSPixel;
   var doubleRatio = 2.0 * screenPixelsPerCSSPixel;
   var halfRatio = 0.5 * screenPixelsPerCSSPixel;
   var styleElem = document.getElementsByTagName("style")[1];
   styleElem.textContent = 
diff --git a/layout/style/test/test_pointer-events.html b/layout/style/test/test_pointer-events.html
--- a/layout/style/test/test_pointer-events.html
+++ b/layout/style/test/test_pointer-events.html
@@ -65,22 +65,18 @@ function catches_pointer_events(element_
 function synthesizeMouseEvent(type,                // string
                               x,                   // float
                               y,                   // float
                               button,              // long
                               clickCount,          // long
                               modifiers,           // long
                               ignoreWindowBounds)  // boolean
 {
-  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
-
-  var utils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor).
-                     getInterface(Components.interfaces.nsIDOMWindowUtils);
-
-  utils.sendMouseEvent(type, x, y, button, clickCount, modifiers, ignoreWindowBounds);
+  SpecialPowers.DOMWindowUtils.sendMouseEvent(type, x, y, button, clickCount,
+                                              modifiers, ignoreWindowBounds);
 }
 
 function run_test()
 {
     ok(catches_pointer_events("one"), "one: div should default to catching pointer events");
     ok(catches_pointer_events("two"), "two: div should catch pointer events with explicit visiblePainted");
     ok(!catches_pointer_events("three"), "three: div should not catch pointer events with explicit none");
     ok(!catches_pointer_events("four"), "four: div should not catch pointer events with inherited none");
diff --git a/layout/style/test/test_transitions_per_property.html b/layout/style/test/test_transitions_per_property.html
--- a/layout/style/test/test_transitions_per_property.html
+++ b/layout/style/test/test_transitions_per_property.html
@@ -273,20 +273,18 @@ for (prop in supported_properties) {
       div.style.removeProperty(prereq);
     }
   }
 }
 div.style.removeProperty("-moz-transition");
 
 function get_distance(prop, v1, v2)
 {
-  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-  var utils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
-                      .getInterface(Components.interfaces.nsIDOMWindowUtils);
-  return utils.computeAnimationDistance(div, prop, v1, v2);
+  return SpecialPowers.DOMWindowUtils
+           .computeAnimationDistance(div, prop, v1, v2);
 }
 
 function check_distance(prop, start, quarter, end)
 {
   var sq = get_distance(prop, start, quarter);
   var se = get_distance(prop, start, end);
   var qe = get_distance(prop, quarter, end);
 
diff --git a/layout/style/test/test_visited_image_loading.html b/layout/style/test/test_visited_image_loading.html
--- a/layout/style/test/test_visited_image_loading.html
+++ b/layout/style/test/test_visited_image_loading.html
@@ -28,20 +28,18 @@ function run()
 {
   var frame = document.getElementById("display");
   subdoc = frame.contentDocument;
   subwin = frame.contentWindow;
   setTimeout(check_link_styled, 50);
 }
 
 function visitedDependentComputedStyle(win, elem, property) {
-  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-  var utils = win.QueryInterface(Components.interfaces.nsIInterfaceRequestor).
-                getInterface(Components.interfaces.nsIDOMWindowUtils);
-  return utils.getVisitedDependentComputedStyle(elem, "", property);
+  return SpecialPowers.DOMWindowUtils
+           .getVisitedDependentComputedStyle(elem, "", property);
 }
 
 function check_link_styled()
 {
   var vislink = subdoc.getElementById("visited");
   var bgcolor =
     visitedDependentComputedStyle(subwin, vislink, "background-color");
   if (bgcolor == "rgb(128, 0, 128)") {
diff --git a/layout/style/test/test_visited_image_loading_empty.html b/layout/style/test/test_visited_image_loading_empty.html
--- a/layout/style/test/test_visited_image_loading_empty.html
+++ b/layout/style/test/test_visited_image_loading_empty.html
@@ -28,20 +28,18 @@ function run()
 {
   var frame = document.getElementById("display");
   subdoc = frame.contentDocument;
   subwin = frame.contentWindow;
   setTimeout(check_link_styled, 50);
 }
 
 function visitedDependentComputedStyle(win, elem, property) {
-  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-  var utils = win.QueryInterface(Components.interfaces.nsIInterfaceRequestor).
-                getInterface(Components.interfaces.nsIDOMWindowUtils);
-  return utils.getVisitedDependentComputedStyle(elem, "", property);
+  return SpecialPowers.DOMWindowUtils
+           .getVisitedDependentComputedStyle(elem, "", property);
 }
 
 function check_link_styled()
 {
   var vislink = subdoc.getElementById("visited");
   var bgcolor =
     visitedDependentComputedStyle(subwin, vislink, "background-color");
   if (bgcolor == "rgb(128, 0, 128)") {

From: L. David Baron <dbaron@dbaron.org>

Bug 1055865 patch 5 - Use normal inline handling for setting the size of a non-floating nsFirstLetterFrame.  r=jfkthame

This is the actual fix for the bug.  This changes the vertical sizing of
inline ::first-letter frames to work like inlines (and size based on
font metrics), so that the line-height calculation that happens later
will produces the same results as inlines would produce.

In the case we're concerned with of having a text frame child that's
0x0, this changes the inline ::first-letter from from being 0x0 to
having a height that is determined from the font metrics.

diff --git a/layout/generic/nsFirstLetterFrame.cpp b/layout/generic/nsFirstLetterFrame.cpp
--- a/layout/generic/nsFirstLetterFrame.cpp
+++ b/layout/generic/nsFirstLetterFrame.cpp
@@ -233,25 +233,25 @@ nsFirstLetterFrame::Reflow(nsPresContext
     nsLineLayout* ll = aReflowState.mLineLayout;
     bool          pushedFrame;
 
     ll->SetInFirstLetter(
       mStyleContext->GetPseudo() == nsCSSPseudoElements::firstLetter);
     ll->BeginSpan(this, &aReflowState, bp.IStart(wm),
                   availSize.ISize(wm), &mBaseline);
     ll->ReflowFrame(kid, aReflowStatus, &kidMetrics, pushedFrame);
-    ll->EndSpan(this);
+    NS_ASSERTION(lineWM.IsVertical() == wm.IsVertical(),
+                 "we're assuming we can mix sizes between lineWM and wm "
+                 "since we shouldn't have orthogonal writing modes within "
+                 "a line.");
+    aMetrics.ISize(lineWM) = ll->EndSpan(this) + bp.IStartEnd(wm);
     ll->SetInFirstLetter(false);
 
-    LogicalSize convertedSize = kidMetrics.Size(lineWM).ConvertTo(wm, lineWM);
-    convertedSize.ISize(wm) += bp.IStartEnd(wm);
-    convertedSize.BSize(wm) += bp.BStartEnd(wm);
-    aMetrics.SetSize(wm, convertedSize);
-    aMetrics.SetBlockStartAscent(kidMetrics.BlockStartAscent() +
-                                 bp.BStart(wm));
+    nsLayoutUtils::SetBSizeFromFontMetrics(this, aMetrics, aReflowState,
+                                           bp, lineWM, wm);
   }
 
   // Ensure that the overflow rect contains the child textframe's overflow rect.
   // Note that if this is floating, the overline/underline drawable area is in
   // the overflow rect of the child textframe.
   aMetrics.UnionOverflowAreasWithDesiredBounds();
   ConsiderChildOverflow(aMetrics.mOverflowAreas, kid);
 
diff --git a/layout/reftests/first-letter/429968-1-ref.html b/layout/reftests/first-letter/429968-1-ref.html
--- a/layout/reftests/first-letter/429968-1-ref.html
+++ b/layout/reftests/first-letter/429968-1-ref.html
@@ -1,10 +1,14 @@
 <!DOCTYPE html>
 <html>
 <head>
 <style>
 body { white-space:pre; color:black; }
+/* FIXME (Bug 1058203): avoid line-height:normal since it seems to have
+   different meaning on ::first-letter or span */
+span.first-letter { text-decoration:underline;
+                    font-size:200%; line-height: 1.2; }
 </style>
 </head>
 <body>
-AB</body>
+<span class="first-letter"></span>AB</body>
 </html>
diff --git a/layout/reftests/first-letter/429968-1a.html b/layout/reftests/first-letter/429968-1a.html
--- a/layout/reftests/first-letter/429968-1a.html
+++ b/layout/reftests/first-letter/429968-1a.html
@@ -1,11 +1,14 @@
 <!DOCTYPE HTML>
 <html>
 <head>
 <style>
 body { white-space:pre; color:black; }
-#inner::first-letter { color:red; text-decoration:underline; font-size:200%; }
+/* FIXME (Bug 1058203): avoid line-height:normal since it seems to have
+   different meaning on ::first-letter or span */
+#inner::first-letter { color:red; text-decoration:underline;
+                       font-size:200%; line-height: 1.2; }
 </style>
 </head>
 <body><div id="inner"><span>
 </span>AB</div></body>
 </html>
diff --git a/layout/reftests/first-letter/429968-1b.html b/layout/reftests/first-letter/429968-1b.html
--- a/layout/reftests/first-letter/429968-1b.html
+++ b/layout/reftests/first-letter/429968-1b.html
@@ -1,14 +1,17 @@
 <!DOCTYPE HTML>
 <html>
 <head>
 <style>
 body { white-space:pre; color:blue; }
-#inner::first-letter { color:red; text-decoration:underline; font-size:200%; }
+/* FIXME (Bug 1058203): avoid line-height:normal since it seems to have
+   different meaning on ::first-letter or span */
+#inner::first-letter { color:red; text-decoration:underline;
+                       font-size:200%; line-height: 1.2; }
 </style>
 </head>
 <body><div id="inner"><span>
 </span>AB</div></body>
 <script>
 document.body.offsetTop;
 document.body.style.color = "black";
 </script>
diff --git a/layout/reftests/first-letter/reftest.list b/layout/reftests/first-letter/reftest.list
--- a/layout/reftests/first-letter/reftest.list
+++ b/layout/reftests/first-letter/reftest.list
@@ -60,9 +60,9 @@ fails-if(!cocoaWidget) == 329069-5.html 
 == 484400-1.html 484400-1-ref.html
 == 594303-1.html 594303-1-ref.html
 fails-if(winWidget||cocoaWidget) == 617869-1.html 617869-1-ref.html
 == 723509-1.html 723509-1-ref.html
 == 922550-1.html 922550-1-ref.html
 == 958249.html 958249-ref.html
 == font-text-styles.html font-text-styles-ref.html
 fails-if(gtk2Widget) random-if(winWidget&&!d2d) == font-text-styles-floater.html font-text-styles-floater-ref.html # bug 992846
-fails == inline-height-empty.html inline-height-empty-ref.html
+== inline-height-empty.html inline-height-empty-ref.html

Fix slight errors when widths can't be round-tripped through floats.  (Bug 467141)

diff --git a/layout/tables/FixedTableLayoutStrategy.cpp b/layout/tables/FixedTableLayoutStrategy.cpp
--- a/layout/tables/FixedTableLayoutStrategy.cpp
+++ b/layout/tables/FixedTableLayoutStrategy.cpp
@@ -164,16 +164,28 @@ FixedTableLayoutStrategy::GetPrefWidth(n
     return result;
 }
 
 /* virtual */ void
 FixedTableLayoutStrategy::MarkIntrinsicWidthsDirty()
 {
     mMinWidth = NS_INTRINSIC_WIDTH_UNKNOWN;
     mLastCalcWidth = nscoord_MIN;
+}
+
+static inline nscoord
+AllocateUnassigned(nscoord aUnassignedSpace, float aShare)
+{
+    if (aShare == 1.0f) {
+        // This happens when the numbers we're dividing to get aShare
+        // are equal.  We want to return unassignedSpace exactly, even
+        // if it can't be precisely round-tripped through float.
+        return aUnassignedSpace;
+    }
+    return NSToCoordRound(float(aUnassignedSpace) * aShare);
 }
 
 /* virtual */ void
 FixedTableLayoutStrategy::ComputeColumnWidths(const nsHTMLReflowState& aReflowState)
 {
     nscoord tableWidth = aReflowState.ComputedWidth();
 
     if (mLastCalcWidth == tableWidth)
@@ -355,18 +367,18 @@ FixedTableLayoutStrategy::ComputeColumnW
                 nsTableColFrame *colFrame = mTableFrame->GetColFrame(col);
                 if (!colFrame) {
                     NS_ERROR("column frames out of sync with cell map");
                     continue;
                 }
                 if (colFrame->GetPrefPercent() == 0.0f) {
                     NS_ASSERTION(colFrame->GetFinalWidth() <= specUndist,
                                  "widths don't add up");
-                    nscoord toAdd = NSToCoordRound(float(unassignedSpace) *
-                       (float(colFrame->GetFinalWidth()) / float(specUndist)));
+                    nscoord toAdd = AllocateUnassigned(unassignedSpace,
+                       float(colFrame->GetFinalWidth()) / float(specUndist));
                     specUndist -= colFrame->GetFinalWidth();
                     colFrame->SetFinalWidth(colFrame->GetFinalWidth() + toAdd);
                     unassignedSpace -= toAdd;
                     if (specUndist <= 0) {
                         NS_ASSERTION(specUndist == 0,
                                      "math should be exact");
                         break;
                     }
@@ -384,18 +396,18 @@ FixedTableLayoutStrategy::ComputeColumnW
                 }
                 if (pctUndist < colFrame->GetPrefPercent()) {
                     // This can happen with floating-point math.
                     NS_ASSERTION(colFrame->GetPrefPercent() - pctUndist
                                    < 0.0001,
                                  "widths don't add up");
                     pctUndist = colFrame->GetPrefPercent();
                 }
-                nscoord toAdd = NSToCoordRound(float(unassignedSpace) *
-                    (colFrame->GetPrefPercent() / pctUndist));
+                nscoord toAdd = AllocateUnassigned(unassignedSpace,
+                    colFrame->GetPrefPercent() / pctUndist);
                 colFrame->SetFinalWidth(colFrame->GetFinalWidth() + toAdd);
                 unassignedSpace -= toAdd;
                 pctUndist -= colFrame->GetPrefPercent();
                 if (pctUndist <= 0.0f) {
                     break;
                 }
             }
             NS_ASSERTION(unassignedSpace == 0, "failed to redistribute");
@@ -404,22 +416,23 @@ FixedTableLayoutStrategy::ComputeColumnW
             PRInt32 colsLeft = colCount;
             for (PRInt32 col = 0; col < colCount; ++col) {
                 nsTableColFrame *colFrame = mTableFrame->GetColFrame(col);
                 if (!colFrame) {
                     NS_ERROR("column frames out of sync with cell map");
                     continue;
                 }
                 NS_ASSERTION(colFrame->GetFinalWidth() == 0, "yikes");
-                nscoord toAdd = NSToCoordRound(float(unassignedSpace) /
-                                               float(colsLeft));
+                nscoord toAdd = AllocateUnassigned(unassignedSpace,
+                                                   1.0f / float(colsLeft));
                 colFrame->SetFinalWidth(toAdd);
                 unassignedSpace -= toAdd;
                 --colsLeft;
             }
+            NS_ASSERTION(unassignedSpace == 0, "failed to redistribute");
         }
     }
     for (PRInt32 col = 0; col < colCount; ++col) {
         nsTableColFrame *colFrame = mTableFrame->GetColFrame(col);
         if (!colFrame) {
             NS_ERROR("column frames out of sync with cell map");
             continue;
         }

From: L. David Baron <dbaron@dbaron.org>

Make effect of form controls on font size inflation text threshold not depend on user changes to their value.  (Bug 747857)

diff --git a/layout/generic/nsFontInflationData.cpp b/layout/generic/nsFontInflationData.cpp
--- a/layout/generic/nsFontInflationData.cpp
+++ b/layout/generic/nsFontInflationData.cpp
@@ -294,16 +294,22 @@ void
 nsFontInflationData::ScanText()
 {
   mTextDirty = false;
   mTextAmount = 0;
   ScanTextIn(mBFCFrame);
   mInflationEnabled = mTextAmount >= mTextThreshold;
 }
 
+static PRUint32
+CharCountOfLargestOption(nsIFrame *aListControlFrame)
+{
+  // FIXME: WRITE ME
+}
+
 void
 nsFontInflationData::ScanTextIn(nsIFrame *aFrame)
 {
   // NOTE: This function has a similar structure to FindEdgeInflatableFrameIn!
 
   // FIXME: Should probably only scan the text that's actually going to
   // be inflated!
 
@@ -312,29 +318,47 @@ nsFontInflationData::ScanTextIn(nsIFrame
     nsFrameList::Enumerator kids(lists.CurrentList());
     for (; !kids.AtEnd(); kids.Next()) {
       nsIFrame *kid = kids.get();
       if (kid->GetStateBits() & NS_FRAME_FONT_INFLATION_FLOW_ROOT) {
         // Goes in a different set of inflation data.
         continue;
       }
 
-      if (kid->GetType() == nsGkAtoms::textFrame) {
+      nsIAtom *fType = kid->GetType();
+      if (fType == nsGkAtoms::textFrame) {
         nsIContent *content = kid->GetContent();
         if (content && kid == content->GetPrimaryFrame()) {
           PRUint32 len = nsTextFrameUtils::
             ComputeApproximateLengthWithWhitespaceCompression(
               content, kid->GetStyleText());
           if (len != 0) {
             nscoord fontSize = kid->GetStyleFont()->mFont.size;
             if (fontSize > 0) {
               mTextAmount += fontSize * len;
             }
           }
         }
+      } else if (fType == nsGkAtoms::textInputFrame) {
+        // We don't want changes to the amount of text in a text input
+        // to change what we count towards inflation.
+        nscoord fontSize = kid->GetStyleFont()->mFont.size;
+        PRInt32 charCount = static_cast<nsTextControlFrame*>kid->GetCols();
+        mTextAmount += charCount * fontSize;
+      } else if (fType == nsGkAtoms::comboboxControlFrame) {
+        // Don't just recurse down to the list control inside, since we
+        // need to exclude the display frame.
+        nscoord fontSize = kid->GetStyleFont()->mFont.size;
+        PRInt32 charCount = CharCountOfLargestOption(
+          static_cast<nsComboboxControlFrame*>kid->GetDropDown());
+        mTextAmount += charCount * fontSize;
+      } else if (fType == nsGkAtoms::listControlFrame) {
+        nscoord fontSize = kid->GetStyleFont()->mFont.size;
+        PRInt32 charCount = CharCountOfLargestOption(kid);
+        mTextAmount += charCount * fontSize;
       } else {
         // recursive step
         ScanTextIn(kid);
       }
 
       if (mTextAmount >= mTextThreshold) {
         return;
       }

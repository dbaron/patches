Remove unused copy constructors.

diff --git a/layout/style/nsCSSStruct.cpp b/layout/style/nsCSSStruct.cpp
--- a/layout/style/nsCSSStruct.cpp
+++ b/layout/style/nsCSSStruct.cpp
@@ -68,18 +68,6 @@ nsCSSFont::nsCSSFont(void)
   MOZ_COUNT_CTOR(nsCSSFont);
 }
 
-nsCSSFont::nsCSSFont(const nsCSSFont& aCopy)
-  : mFamily(aCopy.mFamily),
-    mStyle(aCopy.mStyle),
-    mVariant(aCopy.mVariant),
-    mWeight(aCopy.mWeight),
-    mSize(aCopy.mSize),
-    mSizeAdjust(aCopy.mSizeAdjust),
-    mStretch(aCopy.mStretch)
-{
-  MOZ_COUNT_CTOR(nsCSSFont);
-}
-
 nsCSSFont::~nsCSSFont(void)
 {
   MOZ_COUNT_DTOR(nsCSSFont);
@@ -132,21 +120,6 @@ nsCSSColor::nsCSSColor(void)
   MOZ_COUNT_CTOR(nsCSSColor);
 }
 
-nsCSSColor::nsCSSColor(const nsCSSColor& aCopy)
-  : mColor(aCopy.mColor),
-    mBackColor(aCopy.mBackColor),
-    mBackImage(aCopy.mBackImage),
-    mBackRepeat(aCopy.mBackRepeat),
-    mBackAttachment(aCopy.mBackAttachment),
-    mBackPosition(aCopy.mBackPosition),
-    mBackClip(aCopy.mBackClip),
-    mBackOrigin(aCopy.mBackOrigin),
-    mBackInlinePolicy(aCopy.mBackInlinePolicy)
-
-{
-  MOZ_COUNT_CTOR(nsCSSColor);
-}
-
 nsCSSColor::~nsCSSColor(void)
 {
   MOZ_COUNT_DTOR(nsCSSColor);
@@ -158,23 +131,6 @@ nsCSSText::nsCSSText(void)
   : mTextShadow(nsnull)
 {
   MOZ_COUNT_CTOR(nsCSSText);
-}
-
-nsCSSText::nsCSSText(const nsCSSText& aCopy)
-  : mWordSpacing(aCopy.mWordSpacing),
-    mLetterSpacing(aCopy.mLetterSpacing),
-    mVerticalAlign(aCopy.mVerticalAlign),
-    mTextTransform(aCopy.mTextTransform),
-    mTextAlign(aCopy.mTextAlign),
-    mTextIndent(aCopy.mTextIndent),
-    mDecoration(aCopy.mDecoration),
-    mTextShadow(nsnull),
-    mUnicodeBidi(aCopy.mUnicodeBidi),
-    mLineHeight(aCopy.mLineHeight),
-    mWhiteSpace(aCopy.mWhiteSpace)
-{
-  MOZ_COUNT_CTOR(nsCSSText);
-  CSS_IF_COPY(mTextShadow, nsCSSValueList);
 }
 
 nsCSSText::~nsCSSText(void)
@@ -263,27 +219,6 @@ nsCSSDisplay::nsCSSDisplay(void)
   MOZ_COUNT_CTOR(nsCSSDisplay);
 }
 
-nsCSSDisplay::nsCSSDisplay(const nsCSSDisplay& aCopy)
-  : mDirection(aCopy.mDirection),
-    mDisplay(aCopy.mDisplay),
-    mBinding(aCopy.mBinding),
-    mAppearance(aCopy.mAppearance),
-    mPosition(aCopy.mPosition),
-    mFloat(aCopy.mFloat),
-    mClear(aCopy.mClear),
-    mClip(aCopy.mClip),
-    mOverflowX(aCopy.mOverflowX),
-    mOverflowY(aCopy.mOverflowY),
-    mVisibility(aCopy.mVisibility),
-    mOpacity(aCopy.mOpacity),
-    // temp fix for bug 24000
-    mBreakBefore(aCopy.mBreakBefore),
-    mBreakAfter(aCopy.mBreakAfter)
-    // end temp
-{
-  MOZ_COUNT_CTOR(nsCSSDisplay);
-}
-
 nsCSSDisplay::~nsCSSDisplay(void)
 {
   MOZ_COUNT_DTOR(nsCSSDisplay);
@@ -296,54 +231,6 @@ nsCSSMargin::nsCSSMargin(void)
   MOZ_COUNT_CTOR(nsCSSMargin);
 }
 
-nsCSSMargin::nsCSSMargin(const nsCSSMargin& aCopy)
-  : mMargin(aCopy.mMargin),
-    mMarginStart(aCopy.mMarginStart),
-    mMarginEnd(aCopy.mMarginEnd),
-    mMarginLeftLTRSource(aCopy.mMarginLeftLTRSource),
-    mMarginLeftRTLSource(aCopy.mMarginLeftRTLSource),
-    mMarginRightLTRSource(aCopy.mMarginRightLTRSource),
-    mMarginRightRTLSource(aCopy.mMarginRightRTLSource),
-    mPadding(aCopy.mPadding), 
-    mPaddingStart(aCopy.mPaddingStart),
-    mPaddingEnd(aCopy.mPaddingEnd),
-    mPaddingLeftLTRSource(aCopy.mPaddingLeftLTRSource),
-    mPaddingLeftRTLSource(aCopy.mPaddingLeftRTLSource),
-    mPaddingRightLTRSource(aCopy.mPaddingRightLTRSource),
-    mPaddingRightRTLSource(aCopy.mPaddingRightRTLSource),
-    mBorderWidth(aCopy.mBorderWidth),
-    mBorderStartWidth(aCopy.mBorderStartWidth),
-    mBorderEndWidth(aCopy.mBorderEndWidth),
-    mBorderLeftWidthLTRSource(aCopy.mBorderLeftWidthLTRSource),
-    mBorderLeftWidthRTLSource(aCopy.mBorderLeftWidthRTLSource),
-    mBorderRightWidthLTRSource(aCopy.mBorderRightWidthLTRSource),
-    mBorderRightWidthRTLSource(aCopy.mBorderRightWidthRTLSource),
-    mBorderColor(aCopy.mBorderColor),
-    mBorderStartColor(aCopy.mBorderStartColor),
-    mBorderEndColor(aCopy.mBorderEndColor),
-    mBorderLeftColorLTRSource(aCopy.mBorderLeftColorLTRSource),
-    mBorderLeftColorRTLSource(aCopy.mBorderLeftColorRTLSource),
-    mBorderRightColorLTRSource(aCopy.mBorderRightColorLTRSource),
-    mBorderRightColorRTLSource(aCopy.mBorderRightColorRTLSource),
-    mBorderColors(aCopy.mBorderColors),
-    mBorderStyle(aCopy.mBorderStyle),
-    mBorderStartStyle(aCopy.mBorderStartStyle),
-    mBorderEndStyle(aCopy.mBorderEndStyle),
-    mBorderLeftStyleLTRSource(aCopy.mBorderLeftStyleLTRSource),
-    mBorderLeftStyleRTLSource(aCopy.mBorderLeftStyleRTLSource),
-    mBorderRightStyleLTRSource(aCopy.mBorderRightStyleLTRSource),
-    mBorderRightStyleRTLSource(aCopy.mBorderRightStyleRTLSource),
-    mBorderRadius(aCopy.mBorderRadius),
-    mOutlineWidth(aCopy.mOutlineWidth),
-    mOutlineColor(aCopy.mOutlineColor),
-    mOutlineStyle(aCopy.mOutlineStyle),
-    mOutlineOffset(aCopy.mOutlineOffset),
-    mOutlineRadius(aCopy.mOutlineRadius),
-    mFloatEdge(aCopy.mFloatEdge)
-{
-  MOZ_COUNT_CTOR(nsCSSMargin);
-}
-
 nsCSSMargin::~nsCSSMargin(void)
 {
   MOZ_COUNT_DTOR(nsCSSMargin);
@@ -356,20 +243,6 @@ nsCSSPosition::nsCSSPosition(void)
   MOZ_COUNT_CTOR(nsCSSPosition);
 }
 
-nsCSSPosition::nsCSSPosition(const nsCSSPosition& aCopy)
-  : mWidth(aCopy.mWidth),
-    mMinWidth(aCopy.mMinWidth),
-    mMaxWidth(aCopy.mMaxWidth),
-    mHeight(aCopy.mHeight),
-    mMinHeight(aCopy.mMinHeight),
-    mMaxHeight(aCopy.mMaxHeight),
-    mBoxSizing(aCopy.mBoxSizing),
-    mOffset(aCopy.mOffset),
-    mZIndex(aCopy.mZIndex)
-{
-  MOZ_COUNT_CTOR(nsCSSPosition);
-}
-
 nsCSSPosition::~nsCSSPosition(void)
 {
   MOZ_COUNT_DTOR(nsCSSPosition);
@@ -382,15 +255,6 @@ nsCSSList::nsCSSList(void)
   MOZ_COUNT_CTOR(nsCSSList);
 }
 
-nsCSSList::nsCSSList(const nsCSSList& aCopy)
-  : mType(aCopy.mType),
-    mImage(aCopy.mImage),
-    mPosition(aCopy.mPosition),
-    mImageRegion(aCopy.mImageRegion)
-{
-  MOZ_COUNT_CTOR(nsCSSList);
-}
-
 nsCSSList::~nsCSSList(void)
 {
   MOZ_COUNT_DTOR(nsCSSList);
@@ -403,16 +267,6 @@ nsCSSTable::nsCSSTable(void)
   MOZ_COUNT_CTOR(nsCSSTable);
 }
 
-nsCSSTable::nsCSSTable(const nsCSSTable& aCopy)
-  : mBorderCollapse(aCopy.mBorderCollapse),
-    mBorderSpacing(aCopy.mBorderSpacing),
-    mCaptionSide(aCopy.mCaptionSide),
-    mEmptyCells(aCopy.mEmptyCells),
-    mLayout(aCopy.mLayout)
-{
-  MOZ_COUNT_CTOR(nsCSSTable);
-}
-
 nsCSSTable::~nsCSSTable(void)
 {
   MOZ_COUNT_DTOR(nsCSSTable);
@@ -425,18 +279,6 @@ nsCSSBreaks::nsCSSBreaks(void)
   MOZ_COUNT_CTOR(nsCSSBreaks);
 }
 
-nsCSSBreaks::nsCSSBreaks(const nsCSSBreaks& aCopy)
-  : mOrphans(aCopy.mOrphans),
-    mWidows(aCopy.mWidows),
-    mPage(aCopy.mPage),
-    // temp fix for bug 24000
-    //mPageBreakAfter(aCopy.mPageBreakAfter),
-    //mPageBreakBefore(aCopy.mPageBreakBefore),
-    mPageBreakInside(aCopy.mPageBreakInside)
-{
-  MOZ_COUNT_CTOR(nsCSSBreaks);
-}
-
 nsCSSBreaks::~nsCSSBreaks(void)
 {
   MOZ_COUNT_DTOR(nsCSSBreaks);
@@ -445,13 +287,6 @@ nsCSSBreaks::~nsCSSBreaks(void)
 // --- nsCSSPage -----------------
 
 nsCSSPage::nsCSSPage(void)
-{
-  MOZ_COUNT_CTOR(nsCSSPage);
-}
-
-nsCSSPage::nsCSSPage(const nsCSSPage& aCopy)
-  : mMarks(aCopy.mMarks),
-    mSize(aCopy.mSize)
 {
   MOZ_COUNT_CTOR(nsCSSPage);
 }
@@ -546,20 +381,6 @@ nsCSSContent::nsCSSContent(void)
   MOZ_COUNT_CTOR(nsCSSContent);
 }
 
-nsCSSContent::nsCSSContent(const nsCSSContent& aCopy)
-  : mContent(nsnull),
-    mCounterIncrement(nsnull),
-    mCounterReset(nsnull),
-    mMarkerOffset(aCopy.mMarkerOffset),
-    mQuotes(nsnull)
-{
-  MOZ_COUNT_CTOR(nsCSSContent);
-  CSS_IF_COPY(mContent, nsCSSValueList);
-  CSS_IF_COPY(mCounterIncrement, nsCSSCounterData);
-  CSS_IF_COPY(mCounterReset, nsCSSCounterData);
-  CSS_IF_COPY(mQuotes, nsCSSQuotes);
-}
-
 nsCSSContent::~nsCSSContent(void)
 {
   MOZ_COUNT_DTOR(nsCSSContent);
@@ -577,19 +398,6 @@ nsCSSUserInterface::nsCSSUserInterface(v
   MOZ_COUNT_CTOR(nsCSSUserInterface);
 }
 
-nsCSSUserInterface::nsCSSUserInterface(const nsCSSUserInterface& aCopy)
-  : mUserInput(aCopy.mUserInput),
-    mUserModify(aCopy.mUserModify),
-    mUserSelect(aCopy.mUserSelect),
-    mUserFocus(aCopy.mUserFocus),
-    mCursor(nsnull),
-    mForceBrokenImageIcon(aCopy.mForceBrokenImageIcon),
-    mIMEMode(aCopy.mIMEMode)
-{
-  MOZ_COUNT_CTOR(nsCSSUserInterface);
-  CSS_IF_COPY(mCursor, nsCSSValueList);
-}
-
 nsCSSUserInterface::~nsCSSUserInterface(void)
 {
   MOZ_COUNT_DTOR(nsCSSUserInterface);
@@ -603,28 +411,6 @@ nsCSSAural::nsCSSAural(void)
   MOZ_COUNT_CTOR(nsCSSAural);
 }
 
-nsCSSAural::nsCSSAural(const nsCSSAural& aCopy)
-  : mAzimuth(aCopy.mAzimuth),
-    mElevation(aCopy.mElevation),
-    mCueAfter(aCopy.mCueAfter),
-    mCueBefore(aCopy.mCueBefore),
-    mPauseAfter(aCopy.mPauseAfter),
-    mPauseBefore(aCopy.mPauseBefore),
-    mPitch(aCopy.mPitch),
-    mPitchRange(aCopy.mPitchRange),
-    mRichness(aCopy.mRichness),
-    mSpeak(aCopy.mSpeak),
-    mSpeakHeader(aCopy.mSpeakHeader),
-    mSpeakNumeral(aCopy.mSpeakNumeral),
-    mSpeakPunctuation(aCopy.mSpeakPunctuation),
-    mSpeechRate(aCopy.mSpeechRate),
-    mStress(aCopy.mStress),
-    mVoiceFamily(aCopy.mVoiceFamily),
-    mVolume(aCopy.mVolume)
-{
-  MOZ_COUNT_CTOR(nsCSSAural);
-}
-
 nsCSSAural::~nsCSSAural(void)
 {
   MOZ_COUNT_DTOR(nsCSSAural);
@@ -637,14 +423,6 @@ nsCSSXUL::nsCSSXUL(void)
   MOZ_COUNT_CTOR(nsCSSXUL);
 }
 
-nsCSSXUL::nsCSSXUL(const nsCSSXUL& aCopy)
-  : mBoxAlign(aCopy.mBoxAlign), mBoxDirection(aCopy.mBoxDirection),
-    mBoxFlex(aCopy.mBoxFlex), mBoxOrient(aCopy.mBoxOrient),
-    mBoxPack(aCopy.mBoxPack), mBoxOrdinal(aCopy.mBoxOrdinal)
-{
-  MOZ_COUNT_CTOR(nsCSSXUL);
-}
-
 nsCSSXUL::~nsCSSXUL(void)
 {
   MOZ_COUNT_DTOR(nsCSSXUL);
@@ -653,13 +431,6 @@ nsCSSXUL::~nsCSSXUL(void)
 // --- nsCSSColumn -----------------
 
 nsCSSColumn::nsCSSColumn(void)
-{
-  MOZ_COUNT_CTOR(nsCSSColumn);
-}
-
-nsCSSColumn::nsCSSColumn(const nsCSSColumn& aCopy)
-  : mColumnCount(aCopy.mColumnCount), mColumnWidth(aCopy.mColumnWidth),
-    mColumnGap(aCopy.mColumnGap)
 {
   MOZ_COUNT_CTOR(nsCSSColumn);
 }
@@ -677,39 +448,6 @@ nsCSSSVG::nsCSSSVG(void) : mStrokeDashar
   MOZ_COUNT_CTOR(nsCSSSVG);
 }
 
-nsCSSSVG::nsCSSSVG(const nsCSSSVG& aCopy)
-    : mClipPath(aCopy.mClipPath),
-      mClipRule(aCopy.mClipRule),
-      mDominantBaseline(aCopy.mDominantBaseline),
-      mFill(aCopy.mFill),
-      mFillOpacity(aCopy.mFillOpacity),
-      mFillRule(aCopy.mFillRule),
-      mFilter(aCopy.mFilter),
-      mFloodColor(aCopy.mFloodColor),
-      mFloodOpacity(aCopy.mFloodOpacity),
-      mMarkerEnd(aCopy.mMarkerEnd),
-      mMarkerMid(aCopy.mMarkerMid),
-      mMarkerStart(aCopy.mMarkerStart),
-      mMask(aCopy.mMask),
-      mPointerEvents(aCopy.mPointerEvents),
-      mShapeRendering(aCopy.mShapeRendering),
-      mStopColor(aCopy.mStopColor),
-      mStopOpacity(aCopy.mStopOpacity),
-      mStroke(aCopy.mStroke),
-      mStrokeDasharray(nsnull),
-      mStrokeDashoffset(aCopy.mStrokeDashoffset),
-      mStrokeLinecap(aCopy.mStrokeLinecap),
-      mStrokeLinejoin(aCopy.mStrokeLinejoin),
-      mStrokeMiterlimit(aCopy.mStrokeMiterlimit),
-      mStrokeOpacity(aCopy.mStrokeOpacity),
-      mStrokeWidth(aCopy.mStrokeWidth),
-      mTextAnchor(aCopy.mTextAnchor),
-      mTextRendering(aCopy.mTextRendering)
-{
-  MOZ_COUNT_CTOR(nsCSSSVG);
-  CSS_IF_COPY(mStrokeDasharray, nsCSSValueList);
-}
-
 nsCSSSVG::~nsCSSSVG(void)
 {
   MOZ_COUNT_DTOR(nsCSSSVG);
diff --git a/layout/style/nsCSSStruct.h b/layout/style/nsCSSStruct.h
--- a/layout/style/nsCSSStruct.h
+++ b/layout/style/nsCSSStruct.h
@@ -199,7 +199,6 @@ typedef nsCSSStruct nsRuleDataStruct;
 
 struct nsCSSFont : public nsCSSStruct {
   nsCSSFont(void);
-  nsCSSFont(const nsCSSFont& aCopy);
   ~nsCSSFont(void);
 
   nsCSSValue mSystemFont;
@@ -210,15 +209,20 @@ struct nsCSSFont : public nsCSSStruct {
   nsCSSValue mSize;
   nsCSSValue mSizeAdjust; // NEW
   nsCSSValue mStretch; // NEW
+
+private:
+  nsCSSFont(const nsCSSFont& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataFont : public nsCSSFont {
   PRBool mFamilyFromHTML; // Is the family from an HTML FONT element
+  nsRuleDataFont() {}
+private:
+  nsRuleDataFont(const nsRuleDataFont& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSColor : public nsCSSStruct  {
   nsCSSColor(void);
-  nsCSSColor(const nsCSSColor& aCopy);
   ~nsCSSColor(void);
 
   nsCSSValue      mColor;
@@ -230,14 +234,18 @@ struct nsCSSColor : public nsCSSStruct  
   nsCSSValue      mBackClip;
   nsCSSValue      mBackOrigin;
   nsCSSValue      mBackInlinePolicy;
+private:
+  nsCSSColor(const nsCSSColor& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataColor : public nsCSSColor {
+  nsRuleDataColor() {}
+private:
+  nsRuleDataColor(const nsRuleDataColor& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSText : public nsCSSStruct  {
   nsCSSText(void);
-  nsCSSText(const nsCSSText& aCopy);
   ~nsCSSText(void);
 
   nsCSSValue mWordSpacing;
@@ -251,14 +259,18 @@ struct nsCSSText : public nsCSSStruct  {
   nsCSSValue mUnicodeBidi;  // NEW
   nsCSSValue mLineHeight;
   nsCSSValue mWhiteSpace;
+private:
+  nsCSSText(const nsCSSText& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataText : public nsCSSText {
+  nsRuleDataText() {}
+private:
+  nsRuleDataText(const nsRuleDataText& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSDisplay : public nsCSSStruct  {
   nsCSSDisplay(void);
-  nsCSSDisplay(const nsCSSDisplay& aCopy);
   ~nsCSSDisplay(void);
 
   nsCSSValue mDirection;
@@ -278,15 +290,19 @@ struct nsCSSDisplay : public nsCSSStruct
   nsCSSValue mBreakBefore;
   nsCSSValue mBreakAfter;
   // end temp fix
+private:
+  nsCSSDisplay(const nsCSSDisplay& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataDisplay : public nsCSSDisplay {
   nsCSSValue mLang;
+  nsRuleDataDisplay() {}
+private:
+  nsRuleDataDisplay(const nsRuleDataDisplay& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSMargin : public nsCSSStruct  {
   nsCSSMargin(void);
-  nsCSSMargin(const nsCSSMargin& aCopy);
   ~nsCSSMargin(void);
 
   nsCSSRect   mMargin;
@@ -332,14 +348,18 @@ struct nsCSSMargin : public nsCSSStruct 
   nsCSSValue  mOutlineOffset;
   nsCSSRect   mOutlineRadius; // (extension)
   nsCSSValue  mFloatEdge; // NEW
+private:
+  nsCSSMargin(const nsCSSMargin& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataMargin : public nsCSSMargin {
+  nsRuleDataMargin() {}
+private:
+  nsRuleDataMargin(const nsRuleDataMargin& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSPosition : public nsCSSStruct  {
   nsCSSPosition(void);
-  nsCSSPosition(const nsCSSPosition& aCopy);
   ~nsCSSPosition(void);
 
   nsCSSValue  mWidth;
@@ -351,28 +371,36 @@ struct nsCSSPosition : public nsCSSStruc
   nsCSSValue  mBoxSizing; // NEW
   nsCSSRect   mOffset;
   nsCSSValue  mZIndex;
+private:
+  nsCSSPosition(const nsCSSPosition& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataPosition : public nsCSSPosition {
+  nsRuleDataPosition() {}
+private:
+  nsRuleDataPosition(const nsRuleDataPosition& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSList : public nsCSSStruct  {
   nsCSSList(void);
-  nsCSSList(const nsCSSList& aCopy);
   ~nsCSSList(void);
 
   nsCSSValue mType;
   nsCSSValue mImage;
   nsCSSValue mPosition;
   nsCSSRect  mImageRegion;
+private:
+  nsCSSList(const nsCSSList& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataList : public nsCSSList {
+  nsRuleDataList() {}
+private:
+  nsRuleDataList(const nsRuleDataList& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSTable : public nsCSSStruct  { // NEW
   nsCSSTable(void);
-  nsCSSTable(const nsCSSTable& aCopy);
   ~nsCSSTable(void);
 
   nsCSSValue mBorderCollapse;
@@ -385,14 +413,18 @@ struct nsCSSTable : public nsCSSStruct  
   nsCSSValue mRules; // Not mappable via CSS, only using HTML4 table attrs.
   nsCSSValue mSpan; // Not mappable via CSS, only using HTML4 table attrs.
   nsCSSValue mCols; // Not mappable via CSS, only using HTML4 table attrs.
+private:
+  nsCSSTable(const nsCSSTable& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataTable : public nsCSSTable {
+  nsRuleDataTable() {}
+private:
+  nsRuleDataTable(const nsRuleDataTable& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSBreaks : public nsCSSStruct  { // NEW
   nsCSSBreaks(void);
-  nsCSSBreaks(const nsCSSBreaks& aCopy);
   ~nsCSSBreaks(void);
 
   nsCSSValue mOrphans;
@@ -402,26 +434,34 @@ struct nsCSSBreaks : public nsCSSStruct 
   //nsCSSValue mPageBreakAfter;
   //nsCSSValue mPageBreakBefore;
   nsCSSValue mPageBreakInside;
+private:
+  nsCSSBreaks(const nsCSSBreaks& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataBreaks : public nsCSSBreaks {
+  nsRuleDataBreaks() {}
+private:
+  nsRuleDataBreaks(const nsRuleDataBreaks& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSPage : public nsCSSStruct  { // NEW
   nsCSSPage(void);
-  nsCSSPage(const nsCSSPage& aCopy);
   ~nsCSSPage(void);
 
   nsCSSValue mMarks;
   nsCSSValuePair mSize;
+private:
+  nsCSSPage(const nsCSSPage& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataPage : public nsCSSPage {
+  nsRuleDataPage() {}
+private:
+  nsRuleDataPage(const nsRuleDataPage& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSContent : public nsCSSStruct  {
   nsCSSContent(void);
-  nsCSSContent(const nsCSSContent& aCopy);
   ~nsCSSContent(void);
 
   nsCSSValueList*   mContent;
@@ -429,14 +469,18 @@ struct nsCSSContent : public nsCSSStruct
   nsCSSCounterData* mCounterReset;
   nsCSSValue        mMarkerOffset;
   nsCSSQuotes*      mQuotes;
+private:
+  nsCSSContent(const nsCSSContent& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataContent : public nsCSSContent {
+  nsRuleDataContent() {}
+private:
+  nsRuleDataContent(const nsRuleDataContent& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSUserInterface : public nsCSSStruct  { // NEW
   nsCSSUserInterface(void);
-  nsCSSUserInterface(const nsCSSUserInterface& aCopy);
   ~nsCSSUserInterface(void);
 
   nsCSSValue      mUserInput;
@@ -447,14 +491,18 @@ struct nsCSSUserInterface : public nsCSS
   nsCSSValueList* mCursor;
   nsCSSValue      mForceBrokenImageIcon;
   nsCSSValue      mIMEMode;
+private:
+  nsCSSUserInterface(const nsCSSUserInterface& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataUserInterface : public nsCSSUserInterface {
+  nsRuleDataUserInterface() {}
+private:
+  nsRuleDataUserInterface(const nsRuleDataUserInterface& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSAural : public nsCSSStruct  { // NEW
   nsCSSAural(void);
-  nsCSSAural(const nsCSSAural& aCopy);
   ~nsCSSAural(void);
 
   nsCSSValue mAzimuth;
@@ -475,14 +523,18 @@ struct nsCSSAural : public nsCSSStruct  
   nsCSSValue mStress;
   nsCSSValue mVoiceFamily;
   nsCSSValue mVolume;
+private:
+  nsCSSAural(const nsCSSAural& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataAural : public nsCSSAural {
+  nsRuleDataAural() {}
+private:
+  nsRuleDataAural(const nsRuleDataAural& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSXUL : public nsCSSStruct  {
   nsCSSXUL(void);
-  nsCSSXUL(const nsCSSXUL& aCopy);
   ~nsCSSXUL(void);
 
   nsCSSValue  mBoxAlign;
@@ -491,28 +543,36 @@ struct nsCSSXUL : public nsCSSStruct  {
   nsCSSValue  mBoxOrient;
   nsCSSValue  mBoxPack;
   nsCSSValue  mBoxOrdinal;
+private:
+  nsCSSXUL(const nsCSSXUL& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataXUL : public nsCSSXUL {
+  nsRuleDataXUL() {}
+private:
+  nsRuleDataXUL(const nsRuleDataXUL& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSColumn : public nsCSSStruct  {
   nsCSSColumn(void);
-  nsCSSColumn(const nsCSSColumn& aCopy);
   ~nsCSSColumn(void);
 
   nsCSSValue  mColumnCount;
   nsCSSValue  mColumnWidth;
   nsCSSValue  mColumnGap;
+private:
+  nsCSSColumn(const nsCSSColumn& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataColumn : public nsCSSColumn {
+  nsRuleDataColumn() {}
+private:
+  nsRuleDataColumn(const nsRuleDataColumn& aOther); // NOT IMPLEMENTED
 };
 
 #ifdef MOZ_SVG
 struct nsCSSSVG : public nsCSSStruct {
   nsCSSSVG(void);
-  nsCSSSVG(const nsCSSSVG& aCopy);
   ~nsCSSSVG(void);
 
   nsCSSValue mClipPath;
@@ -544,9 +604,14 @@ struct nsCSSSVG : public nsCSSStruct {
   nsCSSValue mStrokeWidth;
   nsCSSValue mTextAnchor;
   nsCSSValue mTextRendering;
+private:
+  nsCSSSVG(const nsCSSSVG& aOther); // NOT IMPLEMENTED
 };
 
 struct nsRuleDataSVG : public nsCSSSVG {
+  nsRuleDataSVG() {}
+private:
+  nsRuleDataSVG(const nsRuleDataSVG& aOther); // NOT IMPLEMENTED
 };
 #endif
 

From: L. David Baron <dbaron@dbaron.org>

Add method to nsStyleSet to call EnsureUniqueInner on all CSS sheets.  (Bug 536379)

diff --git a/layout/style/nsStyleSet.cpp b/layout/style/nsStyleSet.cpp
--- a/layout/style/nsStyleSet.cpp
+++ b/layout/style/nsStyleSet.cpp
@@ -1156,8 +1156,30 @@ nsStyleSet::MediumFeaturesChanged(nsPres
   if (mBindingManager) {
     PRBool thisChanged = PR_FALSE;
     mBindingManager->MediumFeaturesChanged(aPresContext, &thisChanged);
     stylesChanged = stylesChanged || thisChanged;
   }
 
   return stylesChanged;
 }
+
+nsCSSStyleSheet::EnsureUniqueInnerResult
+nsStyleSet::EnsureUniqueInnerOnCSSSheets()
+{
+  nsCSSStyleSheet::EnsureUniqueInnerResult res =
+    nsCSSStyleSheet::eUniqueInner_AlreadyUnique;
+  for (PRUint32 i = 0; i < NS_ARRAY_LENGTH(gCSSSheetTypes); ++i) {
+    nsCOMArray<nsIStyleSheet> &sheets = mSheets[gCSSSheetTypes[i]];
+    for (PRUint32 j = 0, j_end = sheets.Count(); j < j_end; ++j) {
+      nsCSSStyleSheet *sheet = static_cast<nsCSSStyleSheet*>(sheets[j]);
+      nsCSSStyleSheet::EnsureUniqueInnerResult sheetRes =
+        sheet->EnsureUniqueInner();
+      if (sheetRes == nsCSSStyleSheet::eUniqueInner_CloneFailed) {
+        return sheetRes;
+      }
+      if (sheetRes == nsCSSStyleSheet::eUniqueInner_ClonedInner) {
+        res = sheetRes;
+      }
+    }
+  }
+  return res;
+}
diff --git a/layout/style/nsStyleSet.h b/layout/style/nsStyleSet.h
--- a/layout/style/nsStyleSet.h
+++ b/layout/style/nsStyleSet.h
@@ -43,17 +43,17 @@
  * the internal API that the style system exposes for creating (and
  * potentially re-creating) style contexts
  */
 
 #ifndef nsStyleSet_h_
 #define nsStyleSet_h_
 
 #include "nsIStyleRuleProcessor.h"
-#include "nsICSSStyleSheet.h"
+#include "nsCSSStyleSheet.h"
 #include "nsBindingManager.h"
 #include "nsRuleNode.h"
 #include "nsTArray.h"
 #include "nsCOMArray.h"
 #include "nsAutoPtr.h"
 #include "nsIStyleRule.h"
 #include "nsCSSPseudoElements.h"
 #include "nsCSSAnonBoxes.h"
@@ -272,17 +272,19 @@ class nsStyleSet
   void RuleNodeUnused() {
     ++mUnusedRuleNodeCount;
   }
 
   // Notify the style set that a rulenode that wasn't in use now is
   void RuleNodeInUse() {
     --mUnusedRuleNodeCount;
   }
-  
+
+  nsCSSStyleSheet::EnsureUniqueInnerResult EnsureUniqueInnerOnCSSSheets();
+
  private:
   // Not to be implemented
   nsStyleSet(const nsStyleSet& aCopy);
   nsStyleSet& operator=(const nsStyleSet& aCopy);
 
   // Returns false on out-of-memory.
   PRBool BuildDefaultStyleData(nsPresContext* aPresContext);
 

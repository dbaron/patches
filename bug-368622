Allow display:inline-block to be used on :before and :after.  b=368622  r+sr=bzbarsky

diff -r 8d89c578bf87 layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp	Thu Feb 01 22:07:07 2007 -0800
+++ b/layout/base/nsCSSFrameConstructor.cpp	Thu Feb 01 22:08:43 2007 -0800
@@ -2203,9 +2203,14 @@ nsCSSFrameConstructor::CreateGeneratedCo
     nsIFrame*     containerFrame;
     nsFrameItems  childFrames;
 
-    if (NS_STYLE_DISPLAY_BLOCK ==
-        pseudoStyleContext->GetStyleDisplay()->mDisplay) {
-      containerFrame = NS_NewBlockFrame(mPresShell, pseudoStyleContext);
+    const PRUint8 disp = pseudoStyleContext->GetStyleDisplay()->mDisplay;
+    if (disp == NS_STYLE_DISPLAY_BLOCK ||
+        disp == NS_STYLE_DISPLAY_INLINE_BLOCK) {
+      PRUint32 flags = 0;
+      if (disp == NS_STYLE_DISPLAY_INLINE_BLOCK) {
+        flags = NS_BLOCK_SPACE_MGR | NS_BLOCK_MARGIN_ROOT;
+      }
+      containerFrame = NS_NewBlockFrame(mPresShell, pseudoStyleContext, flags);
     } else {
       containerFrame = NS_NewInlineFrame(mPresShell, pseudoStyleContext);
     }        
diff -r 8d89c578bf87 layout/reftests/bugs/368622-1-ref.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/368622-1-ref.html	Thu Feb 01 22:07:38 2007 -0800
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<title>::before { display: inline-block; }</title>
+<style>
+ul li {
+  list-style-type: none;
+}
+ul li span {
+  display: inline-block;
+  width: 3em;
+}
+ul {
+  margin-left: 3em;
+  padding-left: 0;
+}
+</style>
+<ul>
+<li><span>1</span>Foo
+<li><span>2</span>Bar
+</ul>
diff -r 8d89c578bf87 layout/reftests/bugs/368622-1.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/368622-1.html	Thu Feb 01 22:07:38 2007 -0800
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<title>::before { display: inline-block; }</title>
+<style>
+ul li {
+  list-style-type: none;
+  counter-increment: item;
+}
+ul li::before {
+  content: counter(item);
+  display: inline-block;
+  width: 3em;
+}
+ul {
+  margin-left: 3em;
+  padding-left: 0;
+}
+</style>
+<ul>
+<li>Foo
+<li>Bar
+</ul>
diff -r 8d89c578bf87 layout/reftests/reftest.list
--- a/layout/reftests/reftest.list	Thu Feb 01 22:07:07 2007 -0800
+++ b/layout/reftests/reftest.list	Thu Feb 01 22:07:38 2007 -0800
@@ -115,6 +115,7 @@ f== bugs/368020-3.html bugs/368020-3-ref
 f== bugs/368020-3.html bugs/368020-3-ref.html # bug 368085
 f== bugs/368020-4.html bugs/368020-4-ref.html # bug 368085
 == bugs/368020-5.html bugs/368020-5-ref.html
+== bugs/368622-1.html bugs/368622-1-ref.html
 
 # object/
 == object/no-attrs.html object/no-attrs-ref.html
diff -r 8d89c578bf87 layout/style/nsRuleNode.cpp
--- a/layout/style/nsRuleNode.cpp	Thu Feb 01 22:07:07 2007 -0800
+++ b/layout/style/nsRuleNode.cpp	Thu Feb 01 22:07:38 2007 -0800
@@ -2848,7 +2848,8 @@ nsRuleNode::ComputeDisplayData(nsStyleSt
 
     PRUint8 displayValue = display->mDisplay;
     if (displayValue != NS_STYLE_DISPLAY_NONE &&
-        displayValue != NS_STYLE_DISPLAY_INLINE) {
+        displayValue != NS_STYLE_DISPLAY_INLINE &&
+        displayValue != NS_STYLE_DISPLAY_INLINE_BLOCK) {
       inherited = PR_TRUE;
       // XXX IsBlockInside?  (except for the marker bit)
       if (parentDisplay->IsBlockLevel() ||

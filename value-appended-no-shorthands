nsCSSDeclaration::ValueAppended is never called on shorthands, so it doesn't need code to handle them.  (Bug 481594)

diff --git a/layout/style/nsCSSDeclaration.cpp b/layout/style/nsCSSDeclaration.cpp
--- a/layout/style/nsCSSDeclaration.cpp
+++ b/layout/style/nsCSSDeclaration.cpp
@@ -89,26 +89,21 @@ nsCSSDeclaration::~nsCSSDeclaration(void
   }
 
   MOZ_COUNT_DTOR(nsCSSDeclaration);
 }
 
 nsresult
 nsCSSDeclaration::ValueAppended(nsCSSProperty aProperty)
 {
+  NS_ABORT_IF_FALSE(!nsCSSProps::IsShorthand(aProperty),
+                    "shorthands forbidden");
   // order IS important for CSS, so remove and add to the end
-  if (nsCSSProps::IsShorthand(aProperty)) {
-    CSSPROPS_FOR_SHORTHAND_SUBPROPERTIES(p, aProperty) {
-      mOrder.RemoveElement(*p);
-      mOrder.AppendElement(*p);
-    }
-  } else {
-    mOrder.RemoveElement(aProperty);
-    mOrder.AppendElement(aProperty);
-  }
+  mOrder.RemoveElement(aProperty);
+  mOrder.AppendElement(aProperty);
   return NS_OK;
 }
 
 nsresult
 nsCSSDeclaration::RemoveProperty(nsCSSProperty aProperty)
 {
   nsCSSExpandedDataBlock data;
   data.Expand(&mData, &mImportantData);
diff --git a/layout/style/nsCSSDeclaration.h b/layout/style/nsCSSDeclaration.h
--- a/layout/style/nsCSSDeclaration.h
+++ b/layout/style/nsCSSDeclaration.h
@@ -64,17 +64,17 @@ public:
    */
   nsCSSDeclaration();
 
   nsCSSDeclaration(const nsCSSDeclaration& aCopy);
 
   /**
    * |ValueAppended| must be called to maintain this declaration's
    * |mOrder| whenever a property is parsed into an expanded data block
-   * for this declaration.
+   * for this declaration.  aProperty must not be a shorthand.
    */
   nsresult ValueAppended(nsCSSProperty aProperty);
 
   nsresult AppendComment(const nsAString& aComment);
   nsresult RemoveProperty(nsCSSProperty aProperty);
 
   nsresult GetValue(nsCSSProperty aProperty, nsAString& aValue) const;
 

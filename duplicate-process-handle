Duplicate the process handle too to improve stack walking.

diff --git a/xpcom/base/nsStackFrameWin.cpp b/xpcom/base/nsStackFrameWin.cpp
--- a/xpcom/base/nsStackFrameWin.cpp
+++ b/xpcom/base/nsStackFrameWin.cpp
@@ -447,8 +447,7 @@ NS_StackWalk(NS_WalkStackCallback aCallb
 NS_StackWalk(NS_WalkStackCallback aCallback, PRUint32 aSkipFrames,
              void *aClosure)
 {
-    HANDLE myProcess = ::GetCurrentProcess();
-    HANDLE myThread, walkerThread;
+    HANDLE myProcess, myThread, walkerThread;
     DWORD walkerReturn;
     struct WalkStackData data;
 
@@ -456,12 +455,21 @@ NS_StackWalk(NS_WalkStackCallback aCallb
         return NS_ERROR_FAILURE;
 
     // Have to duplicate handle to get a real handle.
+    if (!::DuplicateHandle(::GetCurrentProcess(),
+                           ::GetCurrentProcess(),
+                           ::GetCurrentProcess(),
+                           &myProcess,
+                           THREAD_ALL_ACCESS, FALSE, 0)) {
+        PrintError("DuplicateHandle (process)");
+        return NS_ERROR_FAILURE;
+    }
     if (!::DuplicateHandle(::GetCurrentProcess(),
                            ::GetCurrentThread(),
                            ::GetCurrentProcess(),
                            &myThread,
                            THREAD_ALL_ACCESS, FALSE, 0)) {
-        PrintError("DuplicateHandle");
+        PrintError("DuplicateHandle (thread)");
+        ::CloseHandle(myProcess);
         return NS_ERROR_FAILURE;
     }
 
@@ -482,6 +490,7 @@ NS_StackWalk(NS_WalkStackCallback aCallb
         PrintError("ThreadCreate");
     }
     ::CloseHandle(myThread);
+    ::CloseHandle(myProcess);
     return NS_OK;
 }
 

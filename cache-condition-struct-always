From: L. David Baron <dbaron@dbaron.org>

Bug 1216431 patch 3 - Cache structs that are stored with conditions on the rule node all the time, rather than only when freshly computed.

This is another case similar to the problem fixed in bug 1209603 patch 9.

diff --git a/layout/style/nsRuleNode.h b/layout/style/nsRuleNode.h
--- a/layout/style/nsRuleNode.h
+++ b/layout/style/nsRuleNode.h
@@ -164,17 +164,25 @@ struct nsConditionalResetStyleData
     if (!(mConditionalBits & GetBitForSID(aSID))) {
       return mEntries[aSID];
     }
     Entry* e = static_cast<Entry*>(mEntries[aSID]);
     MOZ_ASSERT(e, "if mConditionalBits bit is set, we must have at least one "
                   "conditional style struct");
     do {
       if (e->mConditions.Matches(aStyleContext)) {
-        return e->mStyleStruct;
+        void* data = e->mStyleStruct;
+
+        // For reset structs with conditions, we cache the data on the
+        // style context.
+        // Tell the style context that it doesn't own the data
+        aStyleContext->AddStyleBit(GetBitForSID(aSID));
+        aStyleContext->SetStyle(aSID, data);
+
+        return data;
       }
       e = e->mNext;
     } while (e);
     return nullptr;
   }
 
   void SetStyleData(nsStyleStructID aSID, void* aStyleStruct) {
     MOZ_ASSERT(!(mConditionalBits & GetBitForSID(aSID)),

Make 'top' and 'bottom' captions follow the CSS2.1 behavior and put the old behavior into 'top-outside' and 'bottom-outside'.  b=386704

diff --git a/content/html/content/src/nsHTMLTableCaptionElement.cpp b/content/html/content/src/nsHTMLTableCaptionElement.cpp
--- a/content/html/content/src/nsHTMLTableCaptionElement.cpp
+++ b/content/html/content/src/nsHTMLTableCaptionElement.cpp
@@ -108,10 +108,10 @@ NS_IMPL_STRING_ATTR(nsHTMLTableCaptionEl
 
 
 static const nsAttrValue::EnumTable kCaptionAlignTable[] = {
-  { "left",  NS_SIDE_LEFT },
-  { "right", NS_SIDE_RIGHT },
-  { "top",   NS_SIDE_TOP},
-  { "bottom",NS_SIDE_BOTTOM},
+  { "left",   NS_STYLE_CAPTION_SIDE_LEFT },
+  { "right",  NS_STYLE_CAPTION_SIDE_RIGHT },
+  { "top",    NS_STYLE_CAPTION_SIDE_TOP },
+  { "bottom", NS_STYLE_CAPTION_SIDE_BOTTOM },
   { 0 }
 };
 
diff --git a/layout/base/nsStyleConsts.h b/layout/base/nsStyleConsts.h
--- a/layout/base/nsStyleConsts.h
+++ b/layout/base/nsStyleConsts.h
@@ -626,7 +626,12 @@
 #define NS_STYLE_TABLE_EMPTY_CELLS_SHOW            1
 #define NS_STYLE_TABLE_EMPTY_CELLS_SHOW_BACKGROUND 2
 
-// CAPTION_SIDE uses NS_SIDE_*
+#define NS_STYLE_CAPTION_SIDE_TOP               0
+#define NS_STYLE_CAPTION_SIDE_RIGHT             1
+#define NS_STYLE_CAPTION_SIDE_BOTTOM            2
+#define NS_STYLE_CAPTION_SIDE_LEFT              3
+#define NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE       4
+#define NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE    5
 
 // constants for cell "scope" attribute
 #define NS_STYLE_CELL_SCOPE_ROW                 0
diff --git a/layout/style/nsCSSKeywordList.h b/layout/style/nsCSSKeywordList.h
--- a/layout/style/nsCSSKeywordList.h
+++ b/layout/style/nsCSSKeywordList.h
@@ -209,6 +209,7 @@ CSS_KEY(border-box, border_box)
 CSS_KEY(border-box, border_box)
 CSS_KEY(both, both)
 CSS_KEY(bottom, bottom)
+CSS_KEY(bottom-outside, bottom_outside)
 CSS_KEY(bounding-box, bounding_box)
 CSS_KEY(button, button)
 CSS_KEY(buttonface, buttonface)
@@ -439,6 +440,7 @@ CSS_KEY(threedshadow, threedshadow)
 CSS_KEY(threedshadow, threedshadow)
 CSS_KEY(toggle, toggle)
 CSS_KEY(top, top)
+CSS_KEY(top-outside, top_outside)
 CSS_KEY(transparent, transparent)
 CSS_KEY(tri-state, tri_state)
 CSS_KEY(ultra-condensed, ultra_condensed)
diff --git a/layout/style/nsCSSProps.cpp b/layout/style/nsCSSProps.cpp
--- a/layout/style/nsCSSProps.cpp
+++ b/layout/style/nsCSSProps.cpp
@@ -382,11 +382,13 @@ const PRInt32 nsCSSProps::kBoxSizingKTab
 };
 
 const PRInt32 nsCSSProps::kCaptionSideKTable[] = {
-  eCSSKeyword_top,    NS_SIDE_TOP,
-  eCSSKeyword_right,  NS_SIDE_RIGHT,
-  eCSSKeyword_bottom, NS_SIDE_BOTTOM,
-  eCSSKeyword_left,   NS_SIDE_LEFT,
-  eCSSKeyword_UNKNOWN,-1
+  eCSSKeyword_top,                  NS_STYLE_CAPTION_SIDE_TOP,
+  eCSSKeyword_right,                NS_STYLE_CAPTION_SIDE_RIGHT,
+  eCSSKeyword_bottom,               NS_STYLE_CAPTION_SIDE_BOTTOM,
+  eCSSKeyword_left,                 NS_STYLE_CAPTION_SIDE_LEFT,
+  eCSSKeyword_top_outside,          NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE,
+  eCSSKeyword_bottom_outside,       NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE,
+  eCSSKeyword_UNKNOWN,              -1
 };
 
 const PRInt32 nsCSSProps::kClearKTable[] = {
diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -4186,7 +4186,7 @@ nsRuleNode::ComputeTableBorderData(void*
     table->mCaptionSide = parentTable->mCaptionSide;
   }
   else if (eCSSUnit_Initial == tableData.mCaptionSide.GetUnit()) {
-    table->mCaptionSide = NS_SIDE_TOP;
+    table->mCaptionSide = NS_STYLE_CAPTION_SIDE_TOP;
   }
 
   // empty-cells: enum, inherit
diff --git a/layout/style/nsStyleStruct.cpp b/layout/style/nsStyleStruct.cpp
--- a/layout/style/nsStyleStruct.cpp
+++ b/layout/style/nsStyleStruct.cpp
@@ -1001,7 +1001,7 @@ nsStyleTableBorder::nsStyleTableBorder(n
   mEmptyCells = (compatMode == eCompatibility_NavQuirks)
                   ? NS_STYLE_TABLE_EMPTY_CELLS_SHOW_BACKGROUND     
                   : NS_STYLE_TABLE_EMPTY_CELLS_SHOW;
-  mCaptionSide = NS_SIDE_TOP;
+  mCaptionSide = NS_STYLE_CAPTION_SIDE_TOP;
   mBorderSpacingX.SetCoordValue(0);
   mBorderSpacingY.SetCoordValue(0);
 }
diff --git a/layout/style/test/property_database.js b/layout/style/test/property_database.js
--- a/layout/style/test/property_database.js
+++ b/layout/style/test/property_database.js
@@ -750,7 +750,7 @@ var gCSSProperties = {
 		inherited: true,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "top" ],
-		other_values: [ "right", "left", "bottom" ],
+		other_values: [ "right", "left", "bottom", "top-outside", "bottom-outside" ],
 		invalid_values: []
 	},
 	"clear": {
diff --git a/layout/tables/nsTableOuterFrame.cpp b/layout/tables/nsTableOuterFrame.cpp
--- a/layout/tables/nsTableOuterFrame.cpp
+++ b/layout/tables/nsTableOuterFrame.cpp
@@ -93,7 +93,8 @@ inline PRBool IsSideCaption(nsIFrame* aC
 inline PRBool IsSideCaption(nsIFrame* aCaptionFrame)
 {
   PRUint8 captionSide = aCaptionFrame->GetStyleTableBorder()->mCaptionSide;
-  return captionSide == NS_SIDE_LEFT || captionSide == NS_SIDE_RIGHT;
+  return captionSide == NS_STYLE_CAPTION_SIDE_LEFT ||
+         captionSide == NS_STYLE_CAPTION_SIDE_RIGHT;
 }
 
 /* virtual */ nsSize
@@ -347,9 +348,7 @@ nsTableOuterFrame::RemoveFrame(nsIAtom* 
   // The inner frame can't be removed so this should be the caption
   NS_PRECONDITION(nsGkAtoms::captionList == aListName, "can't remove inner frame");
 
-  PRUint8 captionSide = GetCaptionSide();
-
-  if (NS_SIDE_LEFT == captionSide || NS_SIDE_RIGHT == captionSide) {
+  if (HasSideCaption()) {
     // The old caption width had an effect on the inner table width so
     // we're going to need to reflow it. Mark it dirty
     mInnerTableFrame->AddStateBits(NS_FRAME_IS_DIRTY);
@@ -552,7 +551,8 @@ nsTableOuterFrame::InvalidateDamage(PRUi
     damage.x = 0;
     damage.width  = aOuterSize.width;
     switch(aCaptionSide) {
-    case NS_SIDE_BOTTOM:
+    case NS_STYLE_CAPTION_SIDE_BOTTOM:
+    case NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE:
       if (aCaptionChanged) {
         damage.y = innerRect.y;
         damage.height = aOuterSize.height - damage.y;
@@ -562,7 +562,7 @@ nsTableOuterFrame::InvalidateDamage(PRUi
         damage.height = captionRect.y;
       }
       break;
-    case NS_SIDE_LEFT:
+    case NS_STYLE_CAPTION_SIDE_LEFT:
       if (aCaptionChanged) {
         damage.width = innerRect.x;
         damage.y = 0;
@@ -575,7 +575,7 @@ nsTableOuterFrame::InvalidateDamage(PRUi
         damage.height = innerRect.YMost();
       }
       break;
-    case NS_SIDE_RIGHT:
+    case NS_STYLE_CAPTION_SIDE_RIGHT:
      if (aCaptionChanged) {
         damage.x = innerRect.XMost();
         damage.width -= damage.x;
@@ -588,7 +588,10 @@ nsTableOuterFrame::InvalidateDamage(PRUi
         damage.height = innerRect.YMost();
       }
       break;
-    default: // NS_SIDE_TOP
+    default:
+      NS_ASSERTION(aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+                   aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE,
+                   "unexpected caption side");
       if (aCaptionChanged) {
         damage.y = 0;
         damage.height = innerRect.y;
@@ -619,12 +622,9 @@ nsTableOuterFrame::GetMinWidth(nsIRender
     nscoord capWidth =
       nsLayoutUtils::IntrinsicForContainer(aRenderingContext, mCaptionFrame,
                                            nsLayoutUtils::MIN_WIDTH);
-    switch(GetCaptionSide()) {
-    case NS_SIDE_LEFT:
-    case NS_SIDE_RIGHT:
+    if (HasSideCaption()) {
       width += capWidth;
-      break;
-    default:
+    } else {
       if (capWidth > width) {
         width = capWidth;
       }
@@ -644,8 +644,8 @@ nsTableOuterFrame::GetPrefWidth(nsIRende
   if (mCaptionFrame) {
     PRUint8 captionSide = GetCaptionSide();
     switch(captionSide) {
-    case NS_SIDE_LEFT:
-    case NS_SIDE_RIGHT:
+    case NS_STYLE_CAPTION_SIDE_LEFT:
+    case NS_STYLE_CAPTION_SIDE_RIGHT:
       {
         nscoord capMin =
           nsLayoutUtils::IntrinsicForContainer(aRenderingContext, mCaptionFrame,
@@ -653,16 +653,26 @@ nsTableOuterFrame::GetPrefWidth(nsIRende
         maxWidth += capMin;
       }
       break;
-    case NS_SIDE_TOP:
-    case NS_SIDE_BOTTOM:
-    default:  // no caption 
+    default:
       {
-        // XXXldb Use min width?
+        nsLayoutUtils::IntrinsicWidthType iwt;
+        if (captionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+            captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM) {
+          // Don't let the caption's pref width expand the table's pref
+          // width.
+          iwt = nsLayoutUtils::MIN_WIDTH;
+        } else {
+          NS_ASSERTION(captionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE ||
+                       captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE,
+                       "unexpected caption side");
+          iwt = nsLayoutUtils::PREF_WIDTH;
+        }
         nscoord capPref =
           nsLayoutUtils::IntrinsicForContainer(aRenderingContext, mCaptionFrame,
-                                               nsLayoutUtils::PREF_WIDTH);
+                                               iwt);
         maxWidth = PR_MAX(maxWidth, capPref);
       }
+      break;
     }
   }
   return maxWidth;
@@ -674,7 +684,13 @@ nsTableOuterFrame::ComputeAutoSize(nsIRe
                                    nsSize aMargin, nsSize aBorder,
                                    nsSize aPadding, PRBool aShrinkWrap)
 {
-  if (!aShrinkWrap)
+  // For top and bottom (not *-outside) captions, we always shrink-wrap
+  // around the table and the caption so the caption doesn't end up
+  // wider than the table unless it has to be.
+  PRUint8 captionSide = GetCaptionSide();
+  if (!aShrinkWrap &&
+      captionSide != NS_STYLE_CAPTION_SIDE_TOP &&
+      captionSide != NS_STYLE_CAPTION_SIDE_BOTTOM)
     return nsHTMLContainerFrame::ComputeAutoSize(aRenderingContext, aCBSize,
                aAvailableWidth, aMargin, aBorder, aPadding, aShrinkWrap);
 
@@ -703,6 +719,20 @@ nsTableOuterFrame::ComputeAutoSize(nsIRe
   if (mCaptionFrame) {
     nsCSSOffsetState capOffsets(mCaptionFrame, aRenderingContext,
                                 aCBSize.width);
+    nscoord availWidth;
+    if (captionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+        captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM) {
+      nscoord capMin = 
+        nsLayoutUtils::IntrinsicForContainer(aRenderingContext, mCaptionFrame,
+                                             nsLayoutUtils::MIN_WIDTH);
+      // Use the larger of the width we need for the table (actual) or
+      // the caption (min width), but no larger than the real available
+      // width.
+      availWidth = PR_MIN(PR_MAX(width, capMin), aAvailableWidth);
+    } else {
+      // XXX Do something better for side captions?
+      availWidth = aAvailableWidth;
+    }
     nsSize capSize = mCaptionFrame->ComputeSize(aRenderingContext, aCBSize,
                        aAvailableWidth,
                        nsSize(capOffsets.mComputedMargin.LeftRight(),
@@ -714,10 +744,9 @@ nsTableOuterFrame::ComputeAutoSize(nsIRe
                        nsSize(capOffsets.mComputedPadding.LeftRight(),
                               capOffsets.mComputedPadding.TopBottom()),
                        aShrinkWrap);
-    PRUint8 captionSide = GetCaptionSide();
     nscoord capWidth = capSize.width + capOffsets.mComputedMargin.LeftRight() +
                        capOffsets.mComputedBorderPadding.LeftRight();
-    if (captionSide == NS_SIDE_LEFT || captionSide == NS_SIDE_RIGHT) {
+    if (HasSideCaption()) {
       width += capWidth;
     } else {
       if (capWidth > width)
@@ -767,11 +796,11 @@ nsTableOuterFrame::SetDesiredSize(PRUint
     captionWidth = captionRect.width;
   }
   switch(aCaptionSide) {
-    case NS_SIDE_LEFT:
+    case NS_STYLE_CAPTION_SIDE_LEFT:
       aWidth = PR_MAX(aInnerMargin.left, aCaptionMargin.left + captionWidth + aCaptionMargin.right) +
                innerWidth + aInnerMargin.right;
       break;
-    case NS_SIDE_RIGHT:
+    case NS_STYLE_CAPTION_SIDE_RIGHT:
       aWidth = PR_MAX(aInnerMargin.right, aCaptionMargin.left + captionWidth + aCaptionMargin.right) +
                innerWidth + aInnerMargin.left;
       break;
@@ -837,7 +866,7 @@ nsTableOuterFrame::BalanceLeftRightCapti
 
   
   if (innerPercent <= 0.0) {
-    if (NS_SIDE_LEFT == aCaptionSide) 
+    if (NS_STYLE_CAPTION_SIDE_LEFT == aCaptionSide) 
       aCaptionWidth= (nscoord) ((capPercent / (1.0 - capPercent)) * (aCaptionMargin.left + aCaptionMargin.right + 
                                                           aInnerWidth + aInnerMargin.right));
     else
@@ -866,7 +895,8 @@ nsTableOuterFrame::GetCaptionOrigin(PRUi
   if (!mCaptionFrame) return NS_OK;
 
   switch(aCaptionSide) {
-  case NS_SIDE_BOTTOM: {
+  case NS_STYLE_CAPTION_SIDE_BOTTOM:
+  case NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE: {
     if (NS_AUTOMARGIN == aCaptionMargin.left) {
       aCaptionMargin.left = CalcAutoMargin(aCaptionMargin.left, aCaptionMargin.right,
                                            aContainBlockSize.width, aCaptionSize.width);
@@ -886,7 +916,7 @@ nsTableOuterFrame::GetCaptionOrigin(PRUi
     }
     aOrigin.y = aInnerMargin.top + aInnerSize.height + collapseMargin;
   } break;
-  case NS_SIDE_LEFT: {
+  case NS_STYLE_CAPTION_SIDE_LEFT: {
     if (NS_AUTOMARGIN == aCaptionMargin.left) {
       if (NS_AUTOMARGIN != aInnerMargin.left) {
         aCaptionMargin.left = CalcAutoMargin(aCaptionMargin.left, aCaptionMargin.right,
@@ -910,7 +940,7 @@ nsTableOuterFrame::GetCaptionOrigin(PRUi
         break;
     }
   } break;
-  case NS_SIDE_RIGHT: {
+  case NS_STYLE_CAPTION_SIDE_RIGHT: {
     if (NS_AUTOMARGIN == aCaptionMargin.left) {
       if (NS_AUTOMARGIN != aInnerMargin.right) {
         aCaptionMargin.left = CalcAutoMargin(aCaptionMargin.left, aCaptionMargin.right,
@@ -935,6 +965,9 @@ nsTableOuterFrame::GetCaptionOrigin(PRUi
     }
   } break;
   default: { // top
+    NS_ASSERTION(aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+                 aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE,
+                 "unexpected caption side");
     if (NS_AUTOMARGIN == aCaptionMargin.left) {
       aCaptionMargin.left = CalcAutoMargin(aCaptionMargin.left, aCaptionMargin.right,
                                            aContainBlockSize.width, aCaptionSize.width);
@@ -980,7 +1013,8 @@ nsTableOuterFrame::GetInnerOrigin(PRUint
     minCapWidth += aCaptionMargin.right;
 
   switch(aCaptionSide) {
-  case NS_SIDE_BOTTOM: {
+  case NS_STYLE_CAPTION_SIDE_BOTTOM:
+  case NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE: {
     if (NS_AUTOMARGIN == aInnerMargin.left) {
       aInnerMargin.left = CalcAutoMargin(aInnerMargin.left, aInnerMargin.right,
                                          aContainBlockSize.width, aInnerSize.width);
@@ -1000,7 +1034,7 @@ nsTableOuterFrame::GetInnerOrigin(PRUint
     }
     aOrigin.y = aInnerMargin.top;
   } break;
-  case NS_SIDE_LEFT: {
+  case NS_STYLE_CAPTION_SIDE_LEFT: {
     
     if (NS_AUTOMARGIN == aInnerMargin.left) {
       aInnerMargin.left = CalcAutoMargin(aInnerMargin.left, aInnerMargin.right,
@@ -1029,7 +1063,7 @@ nsTableOuterFrame::GetInnerOrigin(PRUint
         break;
     }
   } break;
-  case NS_SIDE_RIGHT: {
+  case NS_STYLE_CAPTION_SIDE_RIGHT: {
     if (NS_AUTOMARGIN == aInnerMargin.right) {
       aInnerMargin.right = CalcAutoMargin(aInnerMargin.left, aInnerMargin.right,
                                           aContainBlockSize.width, aInnerSize.width);
@@ -1057,6 +1091,9 @@ nsTableOuterFrame::GetInnerOrigin(PRUint
     }
   } break;
   default: { // top
+    NS_ASSERTION(aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+                 aCaptionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE,
+                 "unexpected caption side");
     if (NS_AUTOMARGIN == aInnerMargin.left) {
       aInnerMargin.left = CalcAutoMargin(aInnerMargin.left, aInnerMargin.right,
                                          aContainBlockSize.width, aInnerSize.width);
@@ -1137,12 +1174,17 @@ nsTableOuterFrame::OuterReflowChild(nsPr
   // see if we need to reset top of page due to a caption
   if (mCaptionFrame) {
     PRUint8 captionSide = GetCaptionSide();
-    if (((NS_SIDE_BOTTOM == captionSide) && (mCaptionFrame == aChildFrame)) || 
-        ((NS_SIDE_TOP == captionSide) && (mInnerTableFrame == aChildFrame))) {
+    if (((captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM ||
+          captionSide == NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE) &&
+         mCaptionFrame == aChildFrame) || 
+        ((captionSide == NS_STYLE_CAPTION_SIDE_TOP ||
+          captionSide == NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE) &&
+         mInnerTableFrame == aChildFrame)) {
       childRS.mFlags.mIsTopOfPage = PR_FALSE;
     }
-    if ((mCaptionFrame == aChildFrame) && (NS_SIDE_LEFT  != captionSide) 
-                                       && (NS_SIDE_RIGHT != captionSide)) {
+    if (mCaptionFrame == aChildFrame &&
+        captionSide != NS_STYLE_CAPTION_SIDE_LEFT &&
+        captionSide != NS_STYLE_CAPTION_SIDE_RIGHT) {
       aAvailWidth = aOuterRS.availableWidth;
     }
   }
@@ -1201,7 +1243,8 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
 
   PRBool reflowAllKids = aOuterRS.ShouldReflowAllKids();
 
-  if (captionSide == NS_SIDE_LEFT || captionSide == NS_SIDE_RIGHT)
+  if (captionSide == NS_STYLE_CAPTION_SIDE_LEFT ||
+      captionSide == NS_STYLE_CAPTION_SIDE_RIGHT)
     reflowAllKids = PR_TRUE;
 
   if (!(GetStateBits() & NS_FRAME_FIRST_REFLOW)) {
@@ -1240,7 +1283,8 @@ NS_METHOD nsTableOuterFrame::Reflow(nsPr
   }
 
   nscoord innerAvailWidth = aOuterRS.ComputedWidth();
-  if (captionSide == NS_SIDE_LEFT || captionSide == NS_SIDE_RIGHT)
+  if (captionSide == NS_STYLE_CAPTION_SIDE_LEFT ||
+      captionSide == NS_STYLE_CAPTION_SIDE_RIGHT)
     // If side is left/right then we know we have a caption and we
     // reflowed it.
     innerAvailWidth -= captionMet.width + captionMargin.LeftRight();
diff --git a/layout/tables/nsTableOuterFrame.h b/layout/tables/nsTableOuterFrame.h
--- a/layout/tables/nsTableOuterFrame.h
+++ b/layout/tables/nsTableOuterFrame.h
@@ -218,7 +218,13 @@ protected:
   NS_IMETHOD VerifyTree() const;
 #endif
 
-  PRUint8 GetCaptionSide();
+  PRUint8 GetCaptionSide(); // NS_STYLE_CAPTION_SIDE_* or NO_SIDE
+
+  PRBool HasSideCaption() {
+    PRUint8 captionSide = GetCaptionSide();
+    return captionSide == NS_STYLE_CAPTION_SIDE_LEFT ||
+           captionSide == NS_STYLE_CAPTION_SIDE_RIGHT;
+  }
   
   PRUint8 GetCaptionVerticalAlign();
 

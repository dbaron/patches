From: L. David Baron <dbaron@dbaron.org>

Bug 1011468:  Add necessary flushes to MediaQueryList implementation.

Bug 753777 added a flush of layout in the parent in
nsGlobalWindow::MatchMedia, but that flush isn't sufficient when layout
changes happen between the call to matchMedia and the call to the
matches getter.

TODO: write test

diff --git a/layout/style/MediaQueryList.cpp b/layout/style/MediaQueryList.cpp
--- a/layout/style/MediaQueryList.cpp
+++ b/layout/style/MediaQueryList.cpp
@@ -66,16 +66,20 @@ void
 MediaQueryList::GetMedia(nsAString &aMedia)
 {
   mMediaList->GetText(aMedia);
 }
 
 bool
 MediaQueryList::Matches()
 {
+  // Ensure that our parent's layout is up-to-date so that our size will
+  // be up-to-date.
+  FlushParent(Flush_Layout);
+
   if (!mMatchesValid) {
     MOZ_ASSERT(!HasListeners(),
                "when listeners present, must keep mMatches current");
     RecomputeMatches();
   }
 
   return mMatches;
 }
@@ -132,30 +136,37 @@ MediaQueryList::RemoveAllListeners()
   mCallbacks.Clear();
   if (hadListeners) {
     // See NS_ADDREF_THIS() in AddListener.
     NS_RELEASE_THIS();
   }
 }
 
 void
-MediaQueryList::RecomputeMatches()
+MediaQueryList::FlushParent(mozFlushType aFlushType)
 {
   if (!mDocument) {
     return;
   }
 
   if (mDocument->GetParentDocument()) {
-    // Flush frames on the parent so our prescontext will get
-    // recreated as needed.
-    mDocument->GetParentDocument()->FlushPendingNotifications(Flush_Frames);
-    // That might have killed our document, so recheck that.
-    if (!mDocument) {
-      return;
-    }
+    mDocument->GetParentDocument()->FlushPendingNotifications(aFlushType);
+    // Note that mDocument may now be null.
+  }
+}
+
+void
+MediaQueryList::RecomputeMatches()
+{
+  // Flush frames on the parent so our prescontext will get recreated as
+  // needed.
+  FlushParent(Flush_Frames);
+
+  if (!mDocument) {
+    return;
   }
 
   nsIPresShell* shell = mDocument->GetShell();
   if (!shell) {
     // XXXbz What's the right behavior here?  Spec doesn't say.
     return;
   }
 
diff --git a/layout/style/MediaQueryList.h b/layout/style/MediaQueryList.h
--- a/layout/style/MediaQueryList.h
+++ b/layout/style/MediaQueryList.h
@@ -13,16 +13,17 @@
 #include "nsCycleCollectionParticipant.h"
 #include "nsAutoPtr.h"
 #include "nsCOMPtr.h"
 #include "nsTArray.h"
 #include "prclist.h"
 #include "mozilla/Attributes.h"
 #include "nsWrapperCache.h"
 #include "mozilla/dom/MediaQueryListBinding.h"
+#include "mozFlushType.h"
 
 class nsIDocument;
 class nsMediaList;
 
 namespace mozilla {
 namespace dom {
 
 class MediaQueryList MOZ_FINAL : public nsISupports,
@@ -63,16 +64,17 @@ public:
   // WebIDL methods
   void GetMedia(nsAString& aMedia);
   bool Matches();
   void AddListener(mozilla::dom::MediaQueryListListener& aListener);
   void RemoveListener(mozilla::dom::MediaQueryListListener& aListener);
 
 private:
   void RecomputeMatches();
+  void FlushParent(mozFlushType aFlushType);
 
   // We only need a pointer to the document to support lazy
   // reevaluation following dynamic changes.  However, this lazy
   // reevaluation is perhaps somewhat important, since some usage
   // patterns may involve the creation of large numbers of
   // MediaQueryList objects which almost immediately become garbage
   // (after a single call to the .matches getter).
   //

From: L. David Baron <dbaron@dbaron.org>

Add code for generating fast tables for one-byte unicode decoders into source tree so we don't have to generate them at runtime.  (Bug 530330)

diff --git a/intl/uconv/tools/Makefile.in b/intl/uconv/tools/Makefile.in
--- a/intl/uconv/tools/Makefile.in
+++ b/intl/uconv/tools/Makefile.in
@@ -55,8 +55,18 @@ INCLUDES	+= \
 
 # needed for mac linux
 ifeq ($(OS_ARCH),Linux)
 ifneq ($(OS_RELEASE),1.2)
 OS_LIBS		+= /usr/lib/libdl.so
 endif
 endif
 
+futfiles:
+	make -C fasttable clean ; \
+	find $(topsrcdir)/intl/uconv/ -name '*.cpp' -exec grep -l 'return CreateOneByteDecoder' {} \; | while read CPPFILE; \
+	do \
+		UTFILE=$$(dirname $$CPPFILE)/$$(grep '^#include ".*\.ut"$$' $$CPPFILE | cut -d\" -f2) ; \
+		echo Processing $$UTFILE ; \
+		make -C fasttable UTFILE=$$UTFILE ; \
+		$(RUN_TEST_PROGRAM) fasttable/genfasttable$(BIN_SUFFIX) ; \
+		make -C fasttable clean ; \
+	done
diff --git a/intl/uconv/tools/fasttable/Makefile.in b/intl/uconv/tools/fasttable/Makefile.in
new file mode 100644
--- /dev/null
+++ b/intl/uconv/tools/fasttable/Makefile.in
@@ -0,0 +1,67 @@
+#
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either of the GNU General Public License Version 2 or later (the "GPL"),
+# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+DEPTH		= ../../../..
+topsrcdir	= @top_srcdir@
+srcdir		= @srcdir@
+VPATH		= @srcdir@
+
+include $(DEPTH)/config/autoconf.mk
+
+MOZILLA_INTERNAL_API = 1
+
+CSRCS		= \
+		genfasttable.cpp \
+		$(NULL)
+
+SIMPLE_PROGRAMS	= $(CSRCS:.cpp=$(BIN_SUFFIX))
+
+DEFINES		= \
+		-DUT_FILE=\"$(UTFILE)\" \
+		$(NULL)
+
+include $(topsrcdir)/config/rules.mk
+
+LOCAL_INCLUDES	= \
+		-I$(srcdir)/../../util \
+		$(NULL)
+
+LIBS		= \
+		$(LIBS_DIR) \
+		../../util/$(LIB_PREFIX)ucvutil_s.$(LIB_SUFFIX) \
+		$(MOZ_COMPONENT_LIBS) \
+		$(NULL)
diff --git a/intl/uconv/tools/fasttable/genfasttable.cpp b/intl/uconv/tools/fasttable/genfasttable.cpp
new file mode 100644
--- /dev/null
+++ b/intl/uconv/tools/fasttable/genfasttable.cpp
@@ -0,0 +1,83 @@
+/* vim: set shiftwidth=2 tabstop=8 autoindent cindent expandtab: */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is genfasttables.cpp
+ *
+ * The Initial Developer of the Original Code is the Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2009
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   L. David Baron <dbaron@dbaron.org>, Mozilla Corporation (original author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include "nsUnicodeDecodeHelper.h"
+#include "nsUCSupport.h"
+#include <stdio.h>
+
+// Must be a divisor of ONE_BYTE_TABLE_SIZE
+#define ITEMS_PER_LINE 8
+
+static const PRUint16 g_utMappingTable[] = {
+#include UT_FILE
+};
+
+int main()
+{
+  PRUnichar fastTable[ONE_BYTE_TABLE_SIZE];
+  nsresult rv = nsUnicodeDecodeHelper::CreateFastTable(
+                           g_utMappingTable, fastTable, ONE_BYTE_TABLE_SIZE);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // Turn the "ut" extension in UT_FILE into "fut" for "fast UT file".
+  char fut_file[] = UT_FILE "x";
+  strcpy(fut_file + strlen(fut_file) - 3, "fut");
+  FILE *out = fopen(fut_file, "w");
+
+  fprintf(out,
+    "/*\n"
+    " * This file was autogenerated from %s\n"
+    " * using intl/uconv/tools/fasttable/genfasttable.cpp\n"
+    " * and the 'futfiles' target in intl/uconv/tools/Makefile.in\n"
+    " */\n",
+    strstr(UT_FILE, "/intl/") + 1);
+  
+  for (PRUint32 i = 0; i < ONE_BYTE_TABLE_SIZE; i += ITEMS_PER_LINE) {
+    fprintf(out, "/* 0x%02X */ ", i);
+    for (PRUint32 j = 0; j < ITEMS_PER_LINE; ++j) {
+      PRUint32 idx = i + j;
+      fprintf(out, " 0x%04X", fastTable[idx]);
+      if (idx + 1 != ONE_BYTE_TABLE_SIZE) {
+        fputc(',', out);
+      }
+    }
+    fputc('\n', out);
+  }
+  fclose(out);
+
+  return 0;
+}
diff --git a/toolkit/toolkit-makefiles.sh b/toolkit/toolkit-makefiles.sh
--- a/toolkit/toolkit-makefiles.sh
+++ b/toolkit/toolkit-makefiles.sh
@@ -161,16 +161,18 @@ MAKEFILES_intl="
   intl/uconv/tests/Makefile
   intl/uconv/ucvja/Makefile
   intl/uconv/ucvlatin/Makefile
   intl/uconv/ucvcn/Makefile
   intl/uconv/ucvtw/Makefile
   intl/uconv/ucvtw2/Makefile
   intl/uconv/ucvko/Makefile
   intl/uconv/ucvibm/Makefile
+  intl/uconv/tools/Makefile
+  intl/uconv/tools/fasttable/Makefile
   intl/locale/Makefile
   intl/locale/public/Makefile
   intl/locale/idl/Makefile
   intl/locale/src/Makefile
   intl/locale/src/mac/Makefile
   intl/locale/src/unix/Makefile
   intl/locale/src/os2/Makefile
   intl/locale/src/windows/Makefile

Handle mouseover/mouseout when the mouse transitions between the video element and its videocontrols child (which covers its entire content area).  (Bug 470596)

diff --git a/toolkit/content/widgets/videocontrols.xml b/toolkit/content/widgets/videocontrols.xml
--- a/toolkit/content/widgets/videocontrols.xml
+++ b/toolkit/content/widgets/videocontrols.xml
@@ -118,18 +118,18 @@
 
                 onMouseInOut : function (event) {
                     if (!this.dynamicControls)
                         return;
 
                     var isMouseOver = (event.type == "mouseover");
 
                     // Ignore events caused by transitions between child nodes.
-                    if (this.isChildNode(event.target) &&
-                        this.isChildNode(event.relatedTarget))
+                    if (this.isControlsOrDescendant(event.target) &&
+                        this.isControlsOrDescendant(event.relatedTarget))
                         return;
 
                     // Don't show controls when they're disabled, but do allow a
                     // mouseout to hide controls that were disabled after being shown.
                     if (!this.video.controls && (isMouseOver || !this.controlsVisible))
                         return;
 
                     this.log("Fading controls " + (isMouseOver ? "in" : "out"));
@@ -197,23 +197,23 @@
                 toggleMute : function () {
                     this.video.muted = !this.video.muted;
 
                     // We'll handle style changes in the event listener for
                     // the "volumechange" event, same as if content script was
                     // controlling volume.
                 },
 
-                isChildNode : function (node) {
+                isControlsOrDescendant : function (node) {
                     while (node) {
-                        if (node == this.video)
-                            break;
+                        if (node == this)
+                            return true;
                         node = node.parentNode;
                     }
-                    return (node == this.video);
+                    return false;
                 },
 
                 log : function (msg) {
                     if (this.debug)
                         dump("videoctl: " + msg + "\n");
                 }
             }) ]]>
         </field>

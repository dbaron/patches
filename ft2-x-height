From: L. David Baron <dbaron@dbaron.org>

Prefer the x-height metric from the font over measuring the height of an 'x'.  (Bug 611780)

diff --git a/gfx/thebes/gfxFT2Utils.cpp b/gfx/thebes/gfxFT2Utils.cpp
--- a/gfx/thebes/gfxFT2Utils.cpp
+++ b/gfx/thebes/gfxFT2Utils.cpp
@@ -153,26 +153,29 @@ gfxFT2LockedFace::GetMetrics(gfxFont::Me
     // Prefering a measured x over sxHeight because sxHeight doesn't consider
     // hinting, but maybe the x extents are not quite right in some fancy
     // script fonts.  CSS 2.1 suggests possibly using the height of an "o",
     // which would have a more consistent glyph across fonts.
     if (GetCharExtents('x', &extents) && extents.y_bearing < 0.0) {
         aMetrics->xHeight = -extents.y_bearing;
         aMetrics->aveCharWidth = extents.x_advance;
     } else {
-        if (os2 && os2->sxHeight) {
-            aMetrics->xHeight = os2->sxHeight * yScale;
-        } else {
-            // CSS 2.1, section 4.3.2 Lengths: "In the cases where it is
-            // impossible or impractical to determine the x-height, a value of
-            // 0.5em should be used."
-            aMetrics->xHeight = 0.5 * emHeight;
-        }
+        // We override these computations below if the OS2 table has
+        // better data.
+
+        // CSS 2.1, section 4.3.2 Lengths: "In the cases where it is
+        // impossible or impractical to determine the x-height, a value of
+        // 0.5em should be used."
+        aMetrics->xHeight = 0.5 * emHeight;
+
         aMetrics->aveCharWidth = 0.0; // updated below
     }
+    if (os2 && os2->sxHeight) {
+        aMetrics->xHeight = os2->sxHeight * yScale;
+    }
     // aveCharWidth is used for the width of text input elements so be
     // liberal rather than conservative in the estimate.
     if (os2 && os2->xAvgCharWidth) {
         // Round to pixels as this is compared with maxAdvance to guess
         // whether this is a fixed width font.
         gfxFloat avgCharWidth =
             ScaleRoundDesignUnits(os2->xAvgCharWidth, ftMetrics.x_scale);
         aMetrics->aveCharWidth =

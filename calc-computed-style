From: L. David Baron <dbaron@dbaron.org>

Handle stored calc() expressions in computed style.  (Bug 363249)

diff --git a/layout/style/nsComputedDOMStyle.cpp b/layout/style/nsComputedDOMStyle.cpp
--- a/layout/style/nsComputedDOMStyle.cpp
+++ b/layout/style/nsComputedDOMStyle.cpp
@@ -3658,17 +3658,18 @@ nsComputedDOMStyle::SetValueToCoord(nsRO
       aValue->SetIdent(eCSSKeyword_auto);
       break;
 
     case eStyleUnit_Percent:
       {
         nscoord percentageBase;
         if (aPercentageBaseGetter &&
             (this->*aPercentageBaseGetter)(percentageBase)) {
-          nscoord val = nscoord(aCoord.GetPercentValue() * percentageBase);
+          nscoord val = NSCoordSaturatingMultiply(percentageBase,
+                                                  aCoord.GetPercentValue());
           aValue->SetAppUnits(NS_MAX(aMinAppUnits, NS_MIN(val, aMaxAppUnits)));
         } else {
           aValue->SetPercent(aCoord.GetPercentValue());
         }
       }
       break;
 
     case eStyleUnit_Factor:
@@ -3692,40 +3693,48 @@ nsComputedDOMStyle::SetValueToCoord(nsRO
                                                       aTable));
       break;
 
     case eStyleUnit_None:
       aValue->SetIdent(eCSSKeyword_none);
       break;
 
     default:
-      NS_ERROR("Can't handle this unit");
+      if (aCoord.IsCalcUnit()) {
+        nscoord percentageBase;
+        if (aPercentageBaseGetter &&
+            (this->*aPercentageBaseGetter)(percentageBase)) {
+          nscoord val =
+            nsRuleNode::ComputeCoordPercentCalc(aCoord, percentageBase);
+          aValue->SetAppUnits(NS_MAX(aMinAppUnits, NS_MIN(val, aMaxAppUnits)));
+        } else {
+          // FIXME: WRITE SERIALIZATION OF calc() EXPRESSIONS
+        }
+      } else {
+        NS_ERROR("Can't handle this unit");
+      }
       break;
   }
 }
 
 nscoord
 nsComputedDOMStyle::StyleCoordToNSCoord(const nsStyleCoord& aCoord,
                                         PercentageBaseGetter aPercentageBaseGetter,
                                         nscoord aDefaultValue)
 {
   NS_PRECONDITION(aPercentageBaseGetter, "Must have a percentage base getter");
-  switch (aCoord.GetUnit()) {
-    case eStyleUnit_Coord:
-      return aCoord.GetCoordValue();
-    case eStyleUnit_Percent:
-      {
-        nscoord percentageBase;
-        if ((this->*aPercentageBaseGetter)(percentageBase)) {
-          return nscoord(aCoord.GetPercentValue() * percentageBase);
-        }
-      }
-      // Fall through to returning aDefaultValue if we have no percentage base.
-    default:
-      break;
+  if (aCoord.GetUnit() == eStyleUnit_Coord) {
+    return aCoord.GetCoordValue();
+  }
+  if (aCoord.GetUnit() == eStyleUnit_Percent || aCoord.IsCalcUnit()) {
+    nscoord percentageBase;
+    if ((this->*aPercentageBaseGetter)(percentageBase)) {
+      return nsRuleNode::ComputeCoordPercentCalc(aCoord, percentageBase);
+    }
+    // Fall through to returning aDefaultValue if we have no percentage base.
   }
 
   return aDefaultValue;
 }
 
 PRBool
 nsComputedDOMStyle::GetCBContentWidth(nscoord& aWidth)
 {

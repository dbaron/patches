From: L. David Baron <dbaron@dbaron.org>

Bug 896138 patch 1:  Move RestyleTracker and OverflowChangedTracker out of nested namespace mozilla::css (which shouldn't exist) into namespace mozilla.  r=heycam

diff --git a/layout/base/RestyleTracker.cpp b/layout/base/RestyleTracker.cpp
--- a/layout/base/RestyleTracker.cpp
+++ b/layout/base/RestyleTracker.cpp
@@ -9,17 +9,16 @@
  */
 
 #include "RestyleTracker.h"
 #include "nsCSSFrameConstructor.h"
 #include "nsStyleChangeList.h"
 #include "GeckoProfiler.h"
 
 namespace mozilla {
-namespace css {
 
 inline nsIDocument*
 RestyleTracker::Document() const {
   return mFrameConstructor->mDocument;
 }
 
 #define RESTYLE_ARRAY_STACKSIZE 128
 
@@ -285,11 +284,10 @@ RestyleTracker::GetRestyleData(Element* 
   } else {
     mPendingRestyles.Remove(aElement);
     aElement->UnsetFlags(mRestyleBits);
   }
 
   return true;
 }
 
-} // namespace css
 } // namespace mozilla
 
diff --git a/layout/base/RestyleTracker.h b/layout/base/RestyleTracker.h
--- a/layout/base/RestyleTracker.h
+++ b/layout/base/RestyleTracker.h
@@ -3,29 +3,28 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /**
  * A class which manages pending restyles.  This handles keeping track
  * of what nodes restyles need to happen on and so forth.
  */
 
-#ifndef mozilla_css_RestyleTracker_h
-#define mozilla_css_RestyleTracker_h
+#ifndef mozilla_RestyleTracker_h
+#define mozilla_RestyleTracker_h
 
 #include "mozilla/dom/Element.h"
 #include "nsDataHashtable.h"
 #include "nsIFrame.h"
 #include "nsTPriorityQueue.h"
 #include "mozilla/SplayTree.h"
 
 class nsCSSFrameConstructor;
 
 namespace mozilla {
-namespace css {
 
 /** 
  * Helper class that collects a list of frames that need
  * UpdateOverflow() called on them, and coalesces them
  * to avoid walking up the same ancestor tree multiple times.
  */
 class OverflowChangedTracker
 {
@@ -354,12 +353,11 @@ inline bool RestyleTracker::AddPendingRe
     aElement->SetFlags(RootBit());
   }
 
   mHaveLaterSiblingRestyles =
     mHaveLaterSiblingRestyles || (aRestyleHint & eRestyle_LaterSiblings) != 0;
   return hadRestyleLaterSiblings;
 }
 
-} // namespace css
 } // namespace mozilla
 
-#endif /* mozilla_css_RestyleTracker_h */
+#endif /* mozilla_RestyleTracker_h */
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -54,18 +54,18 @@ class FlattenedChildIterator;
 }
 
 class nsCSSFrameConstructor : public nsFrameManager
 {
   friend class nsRefreshDriver;
 
 public:
   typedef mozilla::dom::Element Element;
-  typedef mozilla::css::RestyleTracker RestyleTracker;
-  typedef mozilla::css::OverflowChangedTracker OverflowChangedTracker;
+  typedef mozilla::RestyleTracker RestyleTracker;
+  typedef mozilla::OverflowChangedTracker OverflowChangedTracker;
 
   nsCSSFrameConstructor(nsIDocument *aDocument, nsIPresShell* aPresShell,
                         nsStyleSet* aStyleSet);
   ~nsCSSFrameConstructor(void) {
     NS_ASSERTION(mUpdateCount == 0, "Dying in the middle of our own update?");
   }
 
   struct RestyleData;
@@ -246,17 +246,17 @@ public:
   // ProcessRestyledFrames call in a view update batch and a script blocker.
   // This function does not call ProcessAttachedQueue() on the binding manager.
   // If the caller wants that to happen synchronously, it needs to handle that
   // itself.
   nsresult ProcessRestyledFrames(nsStyleChangeList& aRestyleArray);
 
 private:
 
-  friend class mozilla::css::RestyleTracker;
+  friend class mozilla::RestyleTracker;
 
   void RestyleForEmptyChange(Element* aContainer);
 
 public:
   // Restyling for a ContentInserted (notification after insertion) or
   // for a CharacterDataChanged.  |aContainer| must be non-null; when
   // the container is null, no work is needed.
   void RestyleForInsertOrChange(Element* aContainer, nsIContent* aChild);
diff --git a/layout/base/nsFrameManager.h b/layout/base/nsFrameManager.h
--- a/layout/base/nsFrameManager.h
+++ b/layout/base/nsFrameManager.h
@@ -20,19 +20,17 @@
 #define _nsFrameManager_h_
 
 #include "nsIFrame.h"
 #include "nsIStatefulFrame.h"
 #include "nsChangeHint.h"
 #include "nsFrameManagerBase.h"
 
 namespace mozilla {
-namespace css {
 class RestyleTracker;
-} // namespace css
 } // namespace mozilla
 
 struct TreeMatchContext;
 
 /**
  * Frame manager interface. The frame manager serves two purposes:
  * <li>provides a service for mapping from content to frame and from
  * out-of-flow frame to placeholder frame.
@@ -40,17 +38,17 @@ struct TreeMatchContext;
  * lock can be acquired, then the changes are processed immediately; otherwise,
  * they're queued and processed later.
  *
  * Do not add virtual methods to this class, or bryner will punish you.
  */
 
 class nsFrameManager : public nsFrameManagerBase
 {
-  typedef mozilla::css::RestyleTracker RestyleTracker;
+  typedef mozilla::RestyleTracker RestyleTracker;
   typedef nsIFrame::ChildListID ChildListID;
 
 public:
   nsFrameManager(nsIPresShell *aPresShell, nsStyleSet* aStyleSet) NS_HIDDEN {
     mPresShell = aPresShell;
     mStyleSet = aStyleSet;
     MOZ_ASSERT(mPresShell, "need a pres shell");
     MOZ_ASSERT(mStyleSet, "need a style set");

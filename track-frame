From: L. David Baron <dbaron@dbaron.org>

Track which frame we're doing shrink-wrap on.  (FIXME:  We should instead use this approach to track the current container and container width -- since otherwise this is insufficient since we won't be able to get the container width when we decide we want to use inflation during shrink-wrapping.)

diff --git a/layout/base/nsPresContext.h b/layout/base/nsPresContext.h
--- a/layout/base/nsPresContext.h
+++ b/layout/base/nsPresContext.h
@@ -1060,16 +1060,24 @@ protected:
 
   // Formerly mLangGroup; moving from charset-oriented langGroup to
   // maintaining actual language settings everywhere (see bug 524107).
   // This may in fact hold a langGroup such as x-western rather than
   // a specific language, however (e.g, if it is inferred from the
   // charset rather than explicitly specified as a lang attribute).
   nsIAtom*              mLanguage;      // [STRONG]
 
+public:
+  // The frame that is the root of the current shrink-wrapping
+  // computation.  We sometimes need to know this in order to know
+  // whether we should honor font inflation.
+  // A public member variable so that we can use it with mozilla::AutoToggle.
+  nsIFrame*             mShrinkWrapFrame; // [WEAK]
+protected:
+
   nsRefPtrHashtable<nsVoidPtrHashKey, nsImageLoader>
                         mImageLoaders[IMAGE_LOAD_TYPE_COUNT];
 
   nsWeakPtr             mContainer;
 
   PRCList               mDOMMediaQueryLists;
 
   PRInt32               mMinFontSize;   // Min font size, defaults to 0
diff --git a/layout/generic/nsFrame.cpp b/layout/generic/nsFrame.cpp
--- a/layout/generic/nsFrame.cpp
+++ b/layout/generic/nsFrame.cpp
@@ -3920,16 +3920,21 @@ nsFrame::ComputeAutoSize(nsRenderingCont
   }
   return result;
 }
 
 nscoord
 nsFrame::ShrinkWidthToFit(nsRenderingContext *aRenderingContext,
                           nscoord aWidthInCB)
 {
+  nsIFrame *shrinkWrapFrame =
+    nsLayoutUtils::IsContainerForFontSizeInflation(this) ? nsnull : this;
+  AutoToggle<nsIFrame*> t(GetPresContext()->mShrinkWrapFrame,
+                          nsnull, shrinkWrapFrame);
+
   nscoord result;
   nscoord minWidth = GetMinWidth(aRenderingContext);
   if (minWidth > aWidthInCB) {
     result = minWidth;
   } else {
     nscoord prefWidth = GetPrefWidth(aRenderingContext);
     if (prefWidth > aWidthInCB) {
       result = aWidthInCB;

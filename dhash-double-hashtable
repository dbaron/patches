Remove GetKey callbacks from nsDoubleHashtable users.  b=374906  r=bsmedberg

diff --git a/content/xslt/src/xslt/txKey.h b/content/xslt/src/xslt/txKey.h
--- a/content/xslt/src/xslt/txKey.h
+++ b/content/xslt/src/xslt/txKey.h
@@ -75,7 +75,6 @@ struct txKeyValueHashEntry : public PLDH
     }
 
     // @see nsDoubleHashtable.h
-    const void* GetKey();
     PRBool MatchEntry(const void* aKey) const;
     static PLDHashNumber HashKey(const void* aKey);
     
@@ -108,7 +107,6 @@ struct txIndexedKeyHashEntry : public PL
     }
 
     // @see nsDoubleHashtable.h
-    const void* GetKey();
     PRBool MatchEntry(const void* aKey) const;
     static PLDHashNumber HashKey(const void* aKey);
 
diff --git a/content/xslt/src/xslt/txKeyFunctionCall.cpp b/content/xslt/src/xslt/txKeyFunctionCall.cpp
--- a/content/xslt/src/xslt/txKeyFunctionCall.cpp
+++ b/content/xslt/src/xslt/txKeyFunctionCall.cpp
@@ -155,12 +155,6 @@ DHASH_WRAPPER(txKeyValueHash, txKeyValue
 DHASH_WRAPPER(txKeyValueHash, txKeyValueHashEntry, txKeyValueHashKey&)
 DHASH_WRAPPER(txIndexedKeyHash, txIndexedKeyHashEntry, txIndexedKeyHashKey&)
 
-const void*
-txKeyValueHashEntry::GetKey()
-{
-    return &mKey;
-}
-
 PRBool
 txKeyValueHashEntry::MatchEntry(const void* aKey) const
 {
@@ -182,12 +176,6 @@ txKeyValueHashEntry::HashKey(const void*
            NS_PTR_TO_INT32(key->mKeyName.mLocalName.get()) ^
            key->mRootIdentifier ^
            HashString(key->mKeyValue);
-}
-
-const void*
-txIndexedKeyHashEntry::GetKey()
-{
-    return &mKey;
 }
 
 PRBool
diff --git a/xpcom/ds/nsDoubleHashtable.h b/xpcom/ds/nsDoubleHashtable.h
--- a/xpcom/ds/nsDoubleHashtable.h
+++ b/xpcom/ds/nsDoubleHashtable.h
@@ -167,9 +167,6 @@
  * DESTRUCTOR
  * Called when the entry is destroyed (of course).
  *
- * const void* GetKey()
- * Must return a pointer to the key
- *
  * PRBool MatchEntry(const void* aKey) - return true or false depending on
  *        whether the key pointed to by aKey matches this entry
  *
@@ -408,9 +405,6 @@ public:
     mKey(*NS_STATIC_CAST(const nsAString*, aKey)) { }
   ~PLDHashStringEntry() { }
 
-  const void* GetKey() const {
-    return NS_STATIC_CAST(const nsAString*, &mKey);
-  }
   static PLDHashNumber HashKey(const void* key) {
     return HashString(*NS_STATIC_CAST(const nsAString*, key));
   }
@@ -431,9 +425,6 @@ public:
     mKey(*NS_STATIC_CAST(const nsACString*, aKey)) { }
   ~PLDHashCStringEntry() { }
 
-  const void* GetKey() const {
-    return NS_STATIC_CAST(const nsACString*, &mKey);
-  }
   static PLDHashNumber HashKey(const void* key) {
     return HashString(*NS_STATIC_CAST(const nsACString*, key));
   }
@@ -454,9 +445,6 @@ public:
     mKey(*(NS_STATIC_CAST(const PRInt32*, aKey))) { }
   ~PLDHashInt32Entry() { }
 
-  const void* GetKey() const {
-    return NS_STATIC_CAST(const PRInt32*, &mKey);
-  }
   static PLDHashNumber HashKey(const void* key) {
     return *NS_STATIC_CAST(const PRInt32*, key);
   }
@@ -478,9 +466,6 @@ public:
     mKey(*(const void**)aKey) { }
   ~PLDHashVoidEntry() { }
 
-  const void* GetKey() const {
-    return (const void**)&mKey;
-  }
   static PLDHashNumber HashKey(const void* key) {
     return PLDHashNumber(NS_PTR_TO_INT32(*(const void**)key)) >> 2;
   }

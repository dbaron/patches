From: L. David Baron <dbaron@dbaron.org>

Bug 743392 - Serialize background-color at the beginning of the last item.

diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -418,16 +418,23 @@ Declaration::GetValue(nsCSSProperty aPro
         GetListValue();
       const nsCSSValueList *origin =
         data->ValueFor(eCSSProperty_background_origin)->
         GetListValue();
       const nsCSSValuePairList *size =
         data->ValueFor(eCSSProperty_background_size)->
         GetPairListValue();
       for (;;) {
+        // Serialize background-color at the beginning of the last item.
+        if (!image->mNext) {
+          AppendValueToString(eCSSProperty_background_color, aValue,
+                              aSerialization);
+          aValue.Append(char16_t(' '));
+        }
+
         image->mValue.AppendToString(eCSSProperty_background_image, aValue,
                                      aSerialization);
         aValue.Append(char16_t(' '));
         repeat->mXValue.AppendToString(eCSSProperty_background_repeat, aValue,
                                        aSerialization);
         if (repeat->mYValue.GetUnit() != eCSSUnit_Null) {
           repeat->mYValue.AppendToString(eCSSProperty_background_repeat, aValue,
                                          aSerialization);
@@ -500,20 +507,16 @@ Declaration::GetValue(nsCSSProperty aPro
         if (!repeat || !attachment || !position || !clip || !origin || !size) {
           // Uneven length lists, so can't be serialized as shorthand.
           aValue.Truncate();
           return;
         }
         aValue.Append(char16_t(','));
         aValue.Append(char16_t(' '));
       }
-
-      aValue.Append(char16_t(' '));
-      AppendValueToString(eCSSProperty_background_color, aValue,
-                          aSerialization);
       break;
     }
     case eCSSProperty_font: {
       // systemFont might not be present; other values are guaranteed to be
       // available based on the shorthand check at the beginning of the
       // function, as long as the prop is enabled
       const nsCSSValue *systemFont =
         data->ValueFor(eCSSProperty__x_system_font);

From: L. David Baron <dbaron@dbaron.org>

Bug 847287 patch N - Add method to update animations on layer.

diff --git a/layout/style/AnimationCommon.cpp b/layout/style/AnimationCommon.cpp
--- a/layout/style/AnimationCommon.cpp
+++ b/layout/style/AnimationCommon.cpp
@@ -631,16 +631,33 @@ AnimationPlayerCollection::CanPerformOnC
   // No properties to animate
   if (!existsProperty) {
     return false;
   }
 
   return true;
 }
 
+void
+AnimationPlayerCollection::PostResendToLayer(nsCSSProperty aProperty)
+{
+  const auto& info = sLayerAnimationInfo;
+  for (size_t i = 0; i < ArrayLength(info); ++i) {
+    if (aProperty == info[i].mProperty) {
+      nsChangeHint changeHint = info[i].mChangeHint;
+      dom::Element* element = GetElementToRestyle();
+      if (element) {
+        mManager->mPresContext->RestyleManager()->
+          PostRestyleEvent(element, nsRestyleHint(0), changeHint);
+      }
+      break;
+    }
+  }
+}
+
 bool
 AnimationPlayerCollection::HasAnimationOfProperty(
   nsCSSProperty aProperty) const
 {
   for (size_t playerIdx = mPlayers.Length(); playerIdx-- != 0; ) {
     const Animation* anim = mPlayers[playerIdx]->GetSource();
     if (anim && anim->HasAnimationOfProperty(aProperty) &&
         !anim->IsFinishedTransition()) {
diff --git a/layout/style/AnimationCommon.h b/layout/style/AnimationCommon.h
--- a/layout/style/AnimationCommon.h
+++ b/layout/style/AnimationCommon.h
@@ -293,16 +293,19 @@ struct AnimationPlayerCollection : publi
   // active, or whether to send data to the layer.)
   //
   // If aFlags does not contain CanAnimate_AllowPartial, returns whether
   // the state of this element's animations at the current refresh driver
   // time can be fully represented by data sent to the compositor.
   // (This is useful for determining whether throttle the animation
   // (suppress main-thread style updates).)
   bool CanPerformOnCompositorThread(CanAnimateFlags aFlags) const;
+
+  void PostResendToLayer(nsCSSProperty aProperty);
+
   bool HasAnimationOfProperty(nsCSSProperty aProperty) const;
 
   bool IsForElement() const { // rather than for a pseudo-element
     return mElementProperty == nsGkAtoms::animationsProperty ||
            mElementProperty == nsGkAtoms::transitionsProperty;
   }
 
   bool IsForBeforePseudo() const {

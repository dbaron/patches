Fix some leaks of GTK widgets

diff --git a/widget/src/gtk2/nsLookAndFeel.cpp b/widget/src/gtk2/nsLookAndFeel.cpp
--- a/widget/src/gtk2/nsLookAndFeel.cpp
+++ b/widget/src/gtk2/nsLookAndFeel.cpp
@@ -65,6 +65,7 @@ PRUnichar nsLookAndFeel::sInvisibleChara
 //-------------------------------------------------------------------------
 nsLookAndFeel::nsLookAndFeel() : nsXPLookAndFeel()
 {
+    mStyle = nsnull;
     InitWidget();
 
     static PRBool sInitialized = PR_FALSE;
@@ -668,10 +669,12 @@ nsLookAndFeel::InitLookAndFeel()
 
     // invisible character styles
     GtkWidget *entry = gtk_entry_new();
+    gtk_widget_ref(entry);
+    gtk_object_sink(GTK_OBJECT(entry));
     guint value;
     g_object_get (entry, "invisible-char", &value, NULL);
     sInvisibleCharacter = PRUnichar(value);
-    gtk_widget_destroy(entry);
+    gtk_widget_unref(entry);
 }
 
 // virtual
@@ -687,6 +690,7 @@ nsLookAndFeel::LookAndFeelChanged()
     nsXPLookAndFeel::LookAndFeelChanged();
 
     g_object_unref(mStyle);
+    mStyle = nsnull;
  
     InitWidget();
     InitLookAndFeel();
diff --git a/widget/src/gtk2/nsLookAndFeel.h b/widget/src/gtk2/nsLookAndFeel.h
--- a/widget/src/gtk2/nsLookAndFeel.h
+++ b/widget/src/gtk2/nsLookAndFeel.h
@@ -74,12 +74,16 @@ protected:
 
     static void InitLookAndFeel();
     void InitWidget() {
+        NS_ASSERTION(!mStyle, "already initialized");
+        // GtkInvisibles come with a refcount that is not floating (so
+        // we don't want to gtk_widget_sink) and they crash if they are
+        // unref'd enough to actually be destroyed, unless we call
+        // gtk_widget_destroy rather than gtk_widget_unref.  (If we use
+        // an hbox here instead it breaks some of the colors.)
         GtkWidget *widget = gtk_invisible_new();
-        gtk_object_ref(GTK_OBJECT(widget));
-        gtk_object_sink(GTK_OBJECT(widget));
         gtk_widget_ensure_style(widget);
         mStyle = gtk_style_copy(gtk_widget_get_style(widget));
-        gtk_widget_unref(widget);
+        gtk_widget_destroy(widget);
     }
 };
 

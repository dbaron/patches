From: L. David Baron <dbaron@dbaron.org>

Make nsHtml5NamedCharacters store data as data rather than as code.  (Bug 501082)

diff --git a/parser/html/nsHtml5NamedCharacters.cpp b/parser/html/nsHtml5NamedCharacters.cpp
--- a/parser/html/nsHtml5NamedCharacters.cpp
+++ b/parser/html/nsHtml5NamedCharacters.cpp
@@ -1,12 +1,15 @@
 #define nsHtml5NamedCharacters_cpp__
 #include "prtypes.h"
 #include "jArray.h"
 #include "nscore.h"
+#include "nsDebug.h"
+#include "prlog.h"
+#include "nsMemory.h"
 
 #include "nsHtml5NamedCharacters.h"
 
 jArray<jArray<PRInt8,PRInt32>,PRInt32> nsHtml5NamedCharacters::NAMES;
 
 const PRUnichar nsHtml5NamedCharacters::VALUES[][2] = {
 
 #define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
@@ -344,50 +347,85 @@ const PRInt32* const nsHtml5NamedCharact
   HILO_ACCEL_117,
   HILO_ACCEL_118,
   HILO_ACCEL_119,
   HILO_ACCEL_120,
   HILO_ACCEL_121,
   HILO_ACCEL_122
 };
 
+/**
+ * To avoid having lots of pointers in the |charData| array, below,
+ * which would cause us to have to do lots of relocations at library
+ * load time, store all the string data for the names in one big array.
+ * Then use tricks with enums to help us build an array that contains
+ * the positions of each within the big arrays.
+ */
 
-#define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
-static PRInt8 const NAME_##N[] = { CHARS };
-#include "nsHtml5NamedCharactersInclude.h"
-#undef NAMED_CHARACTER_REFERENCE
+static const PRInt8 ALL_NAMES[] = {
+  #define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) CHARS ,
+  #include "nsHtml5NamedCharactersInclude.h"
+  #undef NAMED_CHARACTER_REFERENCE
+};
 
-#define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
-static PRUnichar const VALUE_##N[] = { VALUE };
-#include "nsHtml5NamedCharactersInclude.h"
-#undef NAMED_CHARACTER_REFERENCE
+enum NamePositions {
+  DUMMY_INITIAL_NAME_POSITION = 0,
 
-// XXX bug 501082: for some reason, msvc takes forever to optimize this function
-#ifdef _MSC_VER
-#pragma optimize("", off)
+  /* enums don't take up space, so generate _START and _END */
+  #define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
+    NAME_##N##_DUMMY, /* automatically one higher than previous */ \
+    NAME_##N##_START = NAME_##N##_DUMMY - 1, \
+    NAME_##N##_END = NAME_##N##_START + LEN,
+  #include "nsHtml5NamedCharactersInclude.h"
+  #undef NAMED_CHARACTER_REFERENCE
+
+  DUMMY_FINAL_NAME_VALUE
+};
+
+#define NAMED_CHARACTERS_COUNT 2138
+
+/* check that the start positions will fit in 16 bits */
+PR_STATIC_ASSERT(NS_ARRAY_LENGTH(ALL_NAMES) < 0x10000);
+
+struct NamedCharacterData {
+  PRUint16 nameStart, nameLen;
+#ifdef DEBUG
+  PRUint32 n;
 #endif
+};
+
+static const NamedCharacterData charData[NAMED_CHARACTERS_COUNT] = {
+  #ifdef DEBUG
+    #define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
+    { NAME_##N##_START, LEN, N },
+  #else
+    #define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
+    { NAME_##N##_START, LEN, },
+  #endif
+  #include "nsHtml5NamedCharactersInclude.h"
+  #undef NAMED_CHARACTER_REFERENCE
+};
 
 void
 nsHtml5NamedCharacters::initializeStatics()
 {
-  NAMES = jArray<jArray<PRInt8,PRInt32>,PRInt32>(2138);
+  NAMES = jArray<jArray<PRInt8,PRInt32>,PRInt32>(NAMED_CHARACTERS_COUNT);
 
-#define NAMED_CHARACTER_REFERENCE(N, CHARS, LEN, VALUE) \
-  NAMES[N] = jArray<PRInt8,PRInt32>((PRInt8*)NAME_##N, LEN);
-#include "nsHtml5NamedCharactersInclude.h"
-#undef NAMED_CHARACTER_REFERENCE
+  PRInt8 *allNames = const_cast<PRInt8*>(ALL_NAMES);
+  for (PRUint32 i = 0; i < NAMED_CHARACTERS_COUNT; ++i) {
+    const NamedCharacterData &data = charData[i];
+    NS_ABORT_IF_FALSE(data.n == i,
+                      "index error in nsHtml5NamedCharactersInclude.h");
+    NAMES[i] = jArray<PRInt8,PRInt32>(allNames + data.nameStart, data.nameLen);
+  }
 
   WINDOWS_1252 = new PRUnichar*[32];
   for (PRInt32 i = 0; i < 32; ++i) {
     WINDOWS_1252[i] = (PRUnichar*)&(WINDOWS_1252_DATA[i]);
   }
 }
 
-#ifdef _MSC_VER
-#pragma optimize("", on)
-#endif
-
 void
 nsHtml5NamedCharacters::releaseStatics()
 {
   NAMES.release();
   delete[] WINDOWS_1252;
 }

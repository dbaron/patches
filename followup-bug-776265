From: L. David Baron <dbaron@dbaron.org>

Issues to follow up on post bug 776265.

diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -1796,17 +1796,16 @@ nsHTMLReflowState::InitAbsoluteConstrain
       autoBSize = 0;
     }
 
     if (computedSize.BSize(cbwm) == NS_UNCONSTRAINEDSIZE) {
       // For non-replaced elements with block-size auto, the block-size
       // fills the remaining space.
       computedSize.BSize(cbwm) = autoBSize;
 
-      // XXX Do these need box-sizing adjustments?
       LogicalSize maxSize = ComputedMaxSize(cbwm);
       LogicalSize minSize = ComputedMinSize(cbwm);
       if (computedSize.BSize(cbwm) > maxSize.BSize(cbwm)) {
         computedSize.BSize(cbwm) = maxSize.BSize(cbwm);
       }
       if (computedSize.BSize(cbwm) < minSize.BSize(cbwm)) {
         computedSize.BSize(cbwm) = minSize.BSize(cbwm);
       }
@@ -2291,16 +2290,19 @@ nsHTMLReflowState::InitConstraints(nsPre
       }
       // calc() with percentages acts like 'auto' on internal table elements
       if (eStyleUnit_Auto == blockSizeUnit ||
           (blockSize.IsCalcUnit() && blockSize.CalcHasPercent())) {
         ComputedBSize() = NS_AUTOHEIGHT;
       } else {
         NS_ASSERTION(blockSizeUnit == blockSize.GetUnit(),
                      "unexpected block size unit change");
+        // Is passing mBoxSizing through for internal table elements
+        // really right?  Do they have their border and padding set
+        // correctly?  (Same for min/max-height, really.)
         ComputedBSize() = ComputeBSizeValue(cbSize.BSize(wm),
                                             mStylePosition->mBoxSizing,
                                             blockSize);
       }
 
       // Doesn't apply to table elements
       ComputedMinWidth() = ComputedMinHeight() = 0;
       ComputedMaxWidth() = ComputedMaxHeight() = NS_UNCONSTRAINEDSIZE;

Reftest should use onload.  b=369319

diff -r 226c7c78d970 layout/tools/reftest/reftest.js
--- a/layout/tools/reftest/reftest.js	Thu Feb 08 18:42:42 2007 -0800
+++ b/layout/tools/reftest/reftest.js	Fri Feb 09 16:49:01 2007 -0800
@@ -48,12 +48,14 @@ const NS_SCRIPTSECURITYMANAGER_CONTRACTI
 const NS_SCRIPTSECURITYMANAGER_CONTRACTID =
           "@mozilla.org/scriptsecuritymanager;1";
 
+const LOAD_FAILURE_TIMEOUT = 10000; // ms
+
 var gBrowser;
-var gProgressListener;
 var gCanvas;
 var gURLs;
 var gState;
 var gPart1Key;
+var gFailureTimeout;
 
 const EXPECTED_PASS = 0;
 const EXPECTED_FAIL = 1;
@@ -62,9 +64,8 @@ function OnRefTestLoad()
 function OnRefTestLoad()
 {
     gBrowser = document.getElementById("browser");
-    gProgressListener = new RefTestProgressListener;
-    gBrowser.webProgress.addProgressListener(gProgressListener,
-         CI.nsIWebProgress.NOTIFY_STATE_NETWORK);
+
+    gBrowser.addEventListener("load", OnDocumentLoad, true);
 
     gCanvas = document.createElementNS(XHTML_NS, "canvas");
     var windowElem = document.documentElement;
@@ -73,7 +74,7 @@ function OnRefTestLoad()
 
     try {
         ReadTopManifest(window.arguments[0]);
-        StartCurrentURI();
+        StartCurrentTest();
     } catch (ex) {
         gBrowser.loadURI('data:text/plain,' + ex);
     }
@@ -81,7 +82,7 @@ function OnRefTestLoad()
 
 function OnRefTestUnload()
 {
-    gBrowser.webProgress.removeProgressListener(gProgressListener);
+    gBrowser.removeEventListener("load", OnDocumentLoad, true);
 }
 
 function ReadTopManifest(aFileURL)
@@ -178,10 +179,20 @@ function ReadManifest(aURL)
     } while (more);
 }
 
-function StartCurrentURI()
-{
-    gState = 1;
-    gBrowser.loadURI(gURLs[0].url1.spec);
+function StartCurrentTest()
+{
+    if (gURLs.length == 0)
+        DoneTests();
+    else
+        StartCurrentURI(1);
+}
+
+function StartCurrentURI(aState)
+{
+    gFailureTimeout = setTimeout(LoadFailed, LOAD_FAILURE_TIMEOUT);
+
+    gState = aState;
+    gBrowser.loadURI(gURLs[0]["url" + aState].spec);
 }
 
 function DoneTests()
@@ -200,6 +211,12 @@ function IFrameToKey()
     return gCanvas.toDataURL();
 }
 
+function OnDocumentLoad()
+{
+    clearTimeout(gFailureTimeout);
+    setTimeout(DocumentLoaded, 0);
+}
+
 function DocumentLoaded()
 {
     var key = IFrameToKey();
@@ -207,8 +224,7 @@ function DocumentLoaded()
         case 1:
             gPart1Key = key;
 
-            gState = 2;
-            gBrowser.loadURI(gURLs[0].url2.spec);
+            StartCurrentURI(2);
             break;
         case 2:
             var equal = (key == gPart1Key);
@@ -243,67 +259,17 @@ function DocumentLoaded()
 
             gPart1Key = undefined;
             gURLs.shift();
-            if (gURLs.length == 0)
-                DoneTests();
-            else
-                StartCurrentURI();
+            StartCurrentTest();
             break;
         default:
             throw "Unexpected state."
     }
 }
 
-function RefTestProgressListener()
-{
-}
-
-RefTestProgressListener.prototype = {
-
-    QueryInterface : function(aIID)
-    {
-      if (aIID.equals(CI.nsIWebProgressListener) ||
-          aIID.equals(CI.nsISupportsWeakReference) ||
-          aIID.equals(CI.nsISupports))
-          return this;
-      throw CR.NS_NOINTERFACE;
-    },
-
-    // nsIWebProgressListener implementation
-    onStateChange : function(aWebProgress, aRequest, aStateFlags, aStatus)
-    {
-        if (!(aStateFlags & CI.nsIWebProgressListener.STATE_IS_NETWORK) ||
-            aWebProgress != gBrowser.webProgress)
-            return;
-
-        if (aStateFlags & CI.nsIWebProgressListener.STATE_START) {
-            this.mLoading = true;
-        } else if (aStateFlags & CI.nsIWebProgressListener.STATE_STOP) {
-            if (this.mLoading) {
-                this.mLoading = false;
-                // Let other things happen in the first 20ms, since this
-                // doesn't really seem to be when the page is done loading.
-                setTimeout(DocumentLoaded, 20);
-            }
-        }
-    },
-
-    onProgressChange : function(aWebProgress, aRequest,
-                                aCurSelfProgress, aMaxSelfProgress,
-                                aCurTotalProgress, aMaxTotalProgress)
-    {
-    },
-
-    onLocationChange : function(aWebProgress, aRequest, aLocation)
-    {
-    },
-
-    onStatusChange : function(aWebProgress, aRequest, aStatus, aMessage)
-    {
-    },
-
-    onSecurityChange : function(aWebProgress, aRequest, aState)
-    {
-    },
-
-    mLoading : false
-}
+function LoadFailed()
+{
+    dump("REFTEST UNEXPECTED FAIL (LOADING): " +
+         gURLs[0]["url" + gState].spec + "\n");
+    gURLs.shift();
+    StartCurrentTest();
+}

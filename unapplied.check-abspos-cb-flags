From: L. David Baron <dbaron@dbaron.org>

Followup from bug 1365449 - This should be faster, but it makes layout/reftests/pagination/dynamic-abspos-overflow-01-cols.ref.xhtml fail again.

MozReview-Commit-ID: 29la8xAgzGx

diff --git a/layout/generic/nsAbsoluteContainingBlock.cpp b/layout/generic/nsAbsoluteContainingBlock.cpp
--- a/layout/generic/nsAbsoluteContainingBlock.cpp
+++ b/layout/generic/nsAbsoluteContainingBlock.cpp
@@ -131,17 +131,20 @@ nsAbsoluteContainingBlock::Reflow(nsCont
     bool kidNeedsReflow = reflowAll || NS_SUBTREE_DIRTY(kidFrame) ||
       FrameDependsOnContainer(kidFrame,
                               !!(aFlags & AbsPosReflowFlags::eCBWidthChanged),
                               !!(aFlags & AbsPosReflowFlags::eCBHeightChanged));
     nscoord availBSize = aReflowInput.AvailableBSize();
     const nsRect& cb = isGrid ? nsGridContainerFrame::GridItemCB(kidFrame)
                               : aContainingBlock;
     WritingMode containerWM = aReflowInput.GetWritingMode();
-    if (!kidNeedsReflow && availBSize != NS_UNCONSTRAINEDSIZE) {
+    if (!kidNeedsReflow && availBSize != NS_UNCONSTRAINEDSIZE &&
+        (aFlags & (containerWM.IsVertical()
+                     ? AbsPosReflowFlags::eCBWidthChanged
+                     : AbsPosReflowFlags::eCBHeightChanged))) {
       // If we need to redo pagination on the kid, we need to reflow it.
       // This can happen either if the available height shrunk and the
       // kid (or its overflow that creates overflow containers) is now
       // too large to fit in the available height, or if the available
       // height has increased and the kid has a next-in-flow that we
       // might need to pull from.
       WritingMode kidWM = kidFrame->GetWritingMode();
       if (containerWM.GetBlockDir() != kidWM.GetBlockDir()) {

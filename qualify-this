From: Eli Friedman <sharparrow1@yahoo.com>

Consistently qualify access to dependent base classes to fix compilation errors on correct C++ compilers (such as clang).  (Bug 573210)  r=dbaron

diff -r 279ce7f9b1e3 xpcom/base/nsAutoRef.h
--- a/xpcom/base/nsAutoRef.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/base/nsAutoRef.h	Tue Jun 22 23:31:04 2010 -0700
@@ -301,7 +301,7 @@
     }
     ThisClass& operator=(RawRef aRefToCopy)
     {
-        own(aRefToCopy);
+        this->own(aRefToCopy);
         SafeAddRef();
         return *this;
     }
@@ -323,7 +323,7 @@
     void SafeAddRef()
     {
         if (this->HaveResource())
-            AddRef(this->get());
+            this->AddRef(this->get());
     }
 };
 
@@ -690,7 +690,7 @@
     void SafeRelease()
     {
         if (this->HaveResource())
-            Release(this->get());
+            this->Release(this->get());
     }
 };
 
diff -r 279ce7f9b1e3 xpcom/glue/nsBaseHashtable.h
--- a/xpcom/glue/nsBaseHashtable.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/glue/nsBaseHashtable.h	Tue Jun 22 23:31:04 2010 -0700
@@ -123,7 +123,7 @@
    */
   PRBool Get(KeyType aKey, UserDataType* pData NS_OUTPARAM) const
   {
-    EntryType* ent = GetEntry(aKey);
+    EntryType* ent = this->GetEntry(aKey);
 
     if (!ent)
       return PR_FALSE;
@@ -145,7 +145,7 @@
    */
   UserDataType Get(KeyType aKey) const
   {
-    EntryType* ent = GetEntry(aKey);
+    EntryType* ent = this->GetEntry(aKey);
     if (!ent)
       return NULL;
 
@@ -160,7 +160,7 @@
    */
   PRBool Put(KeyType aKey, UserDataType aData)
   {
-    EntryType* ent = PutEntry(aKey);
+    EntryType* ent = this->PutEntry(aKey);
 
     if (!ent)
       return PR_FALSE;
@@ -174,7 +174,7 @@
    * remove the data for the associated key
    * @param aKey the key to remove from the hashtable
    */
-  void Remove(KeyType aKey) { RemoveEntry(aKey); }
+  void Remove(KeyType aKey) { this->RemoveEntry(aKey); }
 
   /**
    * function type provided by the application for enumeration.
diff -r 279ce7f9b1e3 xpcom/glue/nsClassHashtable.h
--- a/xpcom/glue/nsClassHashtable.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/glue/nsClassHashtable.h	Tue Jun 22 23:31:04 2010 -0700
@@ -57,6 +57,7 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef T* UserDataType;
+  typedef nsBaseHashtable< KeyClass, nsAutoPtr<T>, T* > base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -80,6 +81,7 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef T* UserDataType;
+  typedef nsBaseHashtableMT< KeyClass, nsAutoPtr<T>, T* > base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -97,8 +99,7 @@
 PRBool
 nsClassHashtable<KeyClass,T>::Get(KeyType aKey, T** retVal) const
 {
-  typename nsBaseHashtable<KeyClass,nsAutoPtr<T>,T*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
@@ -125,8 +126,7 @@
 {
   PR_Lock(this->mLock);
 
-  typename nsBaseHashtableMT<KeyClass,nsAutoPtr<T>,T*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
diff -r 279ce7f9b1e3 xpcom/glue/nsInterfaceHashtable.h
--- a/xpcom/glue/nsInterfaceHashtable.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/glue/nsInterfaceHashtable.h	Tue Jun 22 23:31:04 2010 -0700
@@ -57,6 +57,8 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef Interface* UserDataType;
+  typedef nsBaseHashtable< KeyClass, nsCOMPtr<Interface> , Interface* >
+          base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -87,6 +89,8 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef Interface* UserDataType;
+  typedef nsBaseHashtableMT< KeyClass, nsCOMPtr<Interface> , Interface* >
+          base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -110,8 +114,7 @@
 nsInterfaceHashtable<KeyClass,Interface>::Get
   (KeyType aKey, UserDataType* pInterface) const
 {
-  typename nsBaseHashtable<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
@@ -138,8 +141,7 @@
 nsInterfaceHashtable<KeyClass,Interface>::GetWeak
   (KeyType aKey, PRBool* aFound) const
 {
-  typename nsBaseHashtable<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
@@ -166,8 +168,7 @@
 {
   PR_Lock(this->mLock);
 
-  typename nsBaseHashtableMT<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
diff -r 279ce7f9b1e3 xpcom/glue/nsRefPtrHashtable.h
--- a/xpcom/glue/nsRefPtrHashtable.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/glue/nsRefPtrHashtable.h	Tue Jun 22 23:31:04 2010 -0700
@@ -58,6 +58,7 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef RefPtr* UserDataType;
+  typedef nsBaseHashtable< KeyClass, nsRefPtr<RefPtr> , RefPtr* > base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -88,6 +89,7 @@
 public:
   typedef typename KeyClass::KeyType KeyType;
   typedef RefPtr* UserDataType;
+  typedef nsBaseHashtableMT< KeyClass, nsRefPtr<RefPtr> , RefPtr* > base_type;
 
   /**
    * @copydoc nsBaseHashtable::Get
@@ -111,8 +113,7 @@
 nsRefPtrHashtable<KeyClass,RefPtr>::Get
   (KeyType aKey, UserDataType* pRefPtr) const
 {
-  typename nsBaseHashtable<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
@@ -139,8 +140,7 @@
 nsRefPtrHashtable<KeyClass,RefPtr>::GetWeak
   (KeyType aKey, PRBool* aFound) const
 {
-  typename nsBaseHashtable<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
@@ -167,8 +167,7 @@
 {
   PR_Lock(this->mLock);
 
-  typename nsBaseHashtableMT<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+  typename base_type::EntryType* ent = this->GetEntry(aKey);
 
   if (ent)
   {
diff -r 279ce7f9b1e3 xpcom/glue/nsTPtrArray.h
--- a/xpcom/glue/nsTPtrArray.h	Fri Jun 18 11:44:09 2010 +0900
+++ b/xpcom/glue/nsTPtrArray.h	Tue Jun 22 23:31:04 2010 -0700
@@ -64,13 +64,13 @@
 
     // Initialize this array and pre-allocate some number of elements.
     explicit nsTPtrArray(size_type capacity) {
-      SetCapacity(capacity);
+      this->SetCapacity(capacity);
     }
     
     // The array's copy-constructor performs a 'deep' copy of the given array.
     // @param other  The array object to copy.
     nsTPtrArray(const self_type& other) {
-      AppendElements(other);
+      this->AppendElements(other);
     }
 
     //

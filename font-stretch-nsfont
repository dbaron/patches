Make font stretch a parameter to nsFont constructors.  (Bug 3512)

diff --git a/gfx/public/nsFont.h b/gfx/public/nsFont.h
--- a/gfx/public/nsFont.h
+++ b/gfx/public/nsFont.h
@@ -63,36 +63,35 @@ const PRUint8 kGenericFont_monospace    
 const PRUint8 kGenericFont_cursive      = 0x10;
 const PRUint8 kGenericFont_fantasy      = 0x20;
 
 // Font structure.
 struct NS_GFX nsFont {
   // The family name of the font
   nsString name;
 
-  // The style of font (normal, italic, oblique)
+  // The style of font (normal, italic, oblique; see gfxFontConstants.h)
   PRUint8 style;
 
   // Force this font to not be considered a 'generic' font, even if
   // the name is the same as a CSS generic font family.
   PRUint8 systemFont;
 
   // The variant of the font (normal, small-caps)
   PRUint8 variant;
 
   // True if the character set quirks (for treatment of "Symbol",
   // "Wingdings", etc.) should be applied.
   PRUint8 familyNameQuirks;
 
-  // The weight of the font (0-999)
+  // The weight of the font; see gfxFontConstants.h.
   PRUint16 weight;
 
   // The stretch of the font (the sum of various NS_FONT_STRETCH_*
-  // constants; see nsStyleConsts.h).
-  // FIXME: These constants belong someplace else (probably gfxFontStyle)
+  // constants; see gfxFontConstants.h).
   PRInt16 stretch;
 
   // The decorations on the font (underline, overline,
   // line-through). The decorations can be binary or'd together.
   PRUint8 decorations;
 
   // The logical size of the font, in nscoord units
   nscoord size;
@@ -100,23 +99,23 @@ struct NS_GFX nsFont {
   // The aspect-value (ie., the ratio actualsize:actualxheight) that any
   // actual physical font created from this font structure must have when
   // rendering or measuring a string. A value of 0 means no adjustment
   // needs to be done.
   float sizeAdjust;
 
   // Initialize the font struct with an ASCII name
   nsFont(const char* aName, PRUint8 aStyle, PRUint8 aVariant,
-         PRUint16 aWeight, PRUint8 aDecoration, nscoord aSize,
-         float aSizeAdjust=0.0f);
+         PRUint16 aWeight, PRInt16 aStretch, PRUint8 aDecoration,
+         nscoord aSize, float aSizeAdjust=0.0f);
 
   // Initialize the font struct with a (potentially) unicode name
   nsFont(const nsString& aName, PRUint8 aStyle, PRUint8 aVariant,
-         PRUint16 aWeight, PRUint8 aDecoration, nscoord aSize,
-         float aSizeAdjust=0.0f);
+         PRUint16 aWeight, PRInt16 aStretch, PRUint8 aDecoration,
+         nscoord aSize, float aSizeAdjust=0.0f);
 
   // Make a copy of the given font
   nsFont(const nsFont& aFont);
 
   nsFont();
   ~nsFont();
 
   PRBool operator==(const nsFont& aOther) const {
diff --git a/gfx/src/nsFont.cpp b/gfx/src/nsFont.cpp
--- a/gfx/src/nsFont.cpp
+++ b/gfx/src/nsFont.cpp
@@ -36,44 +36,44 @@
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsFont.h"
 #include "nsString.h"
 #include "nsUnicharUtils.h"
 #include "nsCRT.h"
 
 nsFont::nsFont(const char* aName, PRUint8 aStyle, PRUint8 aVariant,
-               PRUint16 aWeight, PRUint8 aDecoration, nscoord aSize,
-               float aSizeAdjust)
+               PRUint16 aWeight, PRInt16 aStretch, PRUint8 aDecoration,
+               nscoord aSize, float aSizeAdjust)
 {
   NS_ASSERTION(aName && IsASCII(nsDependentCString(aName)),
                "Must only pass ASCII names here");
   name.AssignASCII(aName);
   style = aStyle;
   systemFont = PR_FALSE;
   variant = aVariant;
   familyNameQuirks = PR_FALSE;
   weight = aWeight;
-  stretch = 0; // FIXME: make this a parameter!
+  stretch = aStretch;
   decorations = aDecoration;
   size = aSize;
   sizeAdjust = aSizeAdjust;
 }
 
 nsFont::nsFont(const nsString& aName, PRUint8 aStyle, PRUint8 aVariant,
-               PRUint16 aWeight, PRUint8 aDecoration, nscoord aSize,
-               float aSizeAdjust)
+               PRUint16 aWeight, PRInt16 aStretch, PRUint8 aDecoration,
+               nscoord aSize, float aSizeAdjust)
   : name(aName)
 {
   style = aStyle;
   systemFont = PR_FALSE;
   variant = aVariant;
   familyNameQuirks = PR_FALSE;
   weight = aWeight;
-  stretch = 0; // FIXME: make this a parameter!
+  stretch = aStretch;
   decorations = aDecoration;
   size = aSize;
   sizeAdjust = aSizeAdjust;
 }
 
 nsFont::nsFont(const nsFont& aOther)
   : name(aOther.name)
 {

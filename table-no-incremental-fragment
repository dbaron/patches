From: L. David Baron <dbaron@dbaron.org>

Bug 1308876 - Prevent tables from trying to do incremental reflow when fragmented, since they can't.

This doesn't fix either of the changes in:
layout/base/crashtests/470851-1.xhtml
though (the assertion configuration or the resulting number of page).

MozReview-Commit-ID: 6xHxUJCjUHh

diff --git a/layout/tables/nsTableFrame.cpp b/layout/tables/nsTableFrame.cpp
--- a/layout/tables/nsTableFrame.cpp
+++ b/layout/tables/nsTableFrame.cpp
@@ -1981,16 +1981,31 @@ nsTableFrame::Reflow(nsPresContext*     
     return;
   }
 
   // see if collapsing borders need to be calculated
   if (!GetPrevInFlow() && IsBorderCollapse() && NeedToCalcBCBorders()) {
     CalcBCBorders();
   }
 
+  // Tables currently (though we ought to fix this) only fragment in
+  // paginated contexts, not in multicolumn contexts.  (See bug 888257.)
+  // This is partly because they don't correctly handle incremental
+  // layout when paginated.
+  //
+  // Since we propagate NS_FRAME_IS_DIRTY from parent to child at the
+  // start of the parent's reflow (behavior that's new as of bug
+  // 1308876), we can do things that are effectively incremental reflow
+  // during paginated layout.  Since the table code doesn't handle this
+  // correctly, we need to set the flag that says to reflow everything
+  // within the table structure.
+  if (isPaginated) {
+    SetGeometryDirty();
+  }
+
   aDesiredSize.ISize(wm) = aReflowInput.AvailableISize();
 
   // Check for an overflow list, and append any row group frames being pushed
   MoveOverflowToChildList();
 
   bool haveDesiredBSize = false;
   SetHaveReflowedColGroups(false);
 

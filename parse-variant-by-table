From: L. David Baron <dbaron@dbaron.org>

Drive the ParseVariant calls in ParseSingleValueProperty from data rather than a big switch.

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -157,16 +157,27 @@ namespace css = mozilla::css;
 #define VARIANT_TIMING_FUNCTION (VARIANT_KEYWORD | VARIANT_CUBIC_BEZIER)
 #define VARIANT_UK   (VARIANT_URL | VARIANT_KEYWORD)
 #define VARIANT_UO   (VARIANT_URL | VARIANT_NONE)
 #define VARIANT_ANGLE_OR_ZERO (VARIANT_ANGLE | VARIANT_ZERO_ANGLE)
 #define VARIANT_TRANSFORM_LPCALC (VARIANT_LP | VARIANT_CALC)
 #define VARIANT_IMAGE (VARIANT_URL | VARIANT_NONE | VARIANT_GRADIENT | \
                        VARIANT_IMAGE_RECT | VARIANT_ELEMENT)
 
+// This lives here because it depends on the above macros.
+const PRUint32
+nsCSSProps::kParserVariantTable[eCSSProperty_COUNT_no_shorthands] = {
+#define CSS_PROP(name_, id_, method_, flags_, datastruct_, member_,            \
+                 parsevariant_, kwtable_, stylestruct_, stylestructoffset_,    \
+                 animtype_)                                                    \
+  parsevariant_,
+#include "nsCSSPropList.h"
+#undef CSS_PROP
+};
+
 //----------------------------------------------------------------------
 
 namespace {
 
 // Rule processing function
 typedef void (* RuleAppendFunc) (nsICSSRule* aRule, void* aData);
 static void AppendRuleToArray(nsICSSRule* aRule, void* aArray);
 static void AppendRuleToSheet(nsICSSRule* aRule, void* aParser);
@@ -5446,16 +5457,25 @@ CSSParserImpl::ParsePropertyByFunction(n
 #define BG_RIGHT   NS_STYLE_BG_POSITION_RIGHT
 #define BG_CTB    (BG_CENTER | BG_TOP | BG_BOTTOM)
 #define BG_CLR    (BG_CENTER | BG_LEFT | BG_RIGHT)
 
 PRBool
 CSSParserImpl::ParseSingleValueProperty(nsCSSValue& aValue,
                                         nsCSSProperty aPropID)
 {
+  if (aPropID == eCSSPropertyExtra_x_none_value) {
+    return ParseVariant(aValue, VARIANT_NONE | VARIANT_INHERIT, nsnull);
+  }
+
+  if (aPropID < 0 || aPropID > eCSSProperty_COUNT_no_shorthands) {
+    NS_ABORT_IF_FALSE(PR_FALSE, "not a single value property");
+    return PR_FALSE;
+  }
+
   if (nsCSSProps::PropHasFlags(aPropID, CSS_PROPERTY_VALUE_PARSER_FUNCTION)) {
     switch (aPropID) {
       case eCSSProperty_azimuth:
         return ParseAzimuth(aValue);
       case eCSSProperty_font_family:
       case eCSSProperty_voice_family:
         return ParseFamily(aValue);
       case eCSSProperty_font_weight:
@@ -5465,531 +5485,50 @@ CSSParserImpl::ParseSingleValueProperty(
       case eCSSProperty_text_decoration:
         return ParseTextDecoration(aValue);
       default:
         NS_ABORT_IF_FALSE(PR_FALSE, "should not reach here");
         return PR_FALSE;
     }
   }
 
-  switch (aPropID) {
-  case eCSSProperty_UNKNOWN:
-  case eCSSProperty_background:
-  case eCSSProperty_background_position:
-  case eCSSProperty_border:
-  case eCSSProperty_border_color:
-  case eCSSProperty_border_bottom_colors:
-  case eCSSProperty_border_image:
-  case eCSSProperty_border_left_colors:
-  case eCSSProperty_border_right_colors:
-  case eCSSProperty_border_end_color:
-  case eCSSProperty_border_left_color:
-  case eCSSProperty_border_right_color:
-  case eCSSProperty_border_start_color:
-  case eCSSProperty_border_end_style:
-  case eCSSProperty_border_left_style:
-  case eCSSProperty_border_right_style:
-  case eCSSProperty_border_start_style:
-  case eCSSProperty_border_end_width:
-  case eCSSProperty_border_left_width:
-  case eCSSProperty_border_right_width:
-  case eCSSProperty_border_start_width:
-  case eCSSProperty_border_top_colors:
-  case eCSSProperty_border_spacing:
-  case eCSSProperty_border_style:
-  case eCSSProperty_border_bottom:
-  case eCSSProperty_border_end:
-  case eCSSProperty_border_left:
-  case eCSSProperty_border_right:
-  case eCSSProperty_border_start:
-  case eCSSProperty_border_top:
-  case eCSSProperty_border_width:
-  case eCSSProperty_background_size:
-  case eCSSProperty_border_radius:
-  case eCSSProperty_border_top_left_radius:
-  case eCSSProperty_border_top_right_radius:
-  case eCSSProperty_border_bottom_right_radius:
-  case eCSSProperty_border_bottom_left_radius:
-  case eCSSProperty_box_shadow:
-  case eCSSProperty_clip:
-  case eCSSProperty__moz_column_rule:
-  case eCSSProperty_content:
-  case eCSSProperty_counter_increment:
-  case eCSSProperty_counter_reset:
-  case eCSSProperty_cue:
-  case eCSSProperty_cursor:
-  case eCSSProperty_font:
-  case eCSSProperty_image_region:
-  case eCSSProperty_list_style:
-  case eCSSProperty_margin:
-  case eCSSProperty_margin_end:
-  case eCSSProperty_margin_left:
-  case eCSSProperty_margin_right:
-  case eCSSProperty_margin_start:
-  case eCSSProperty_outline:
-  case eCSSProperty__moz_outline_radius:
-  case eCSSProperty__moz_outline_radius_topLeft:
-  case eCSSProperty__moz_outline_radius_topRight:
-  case eCSSProperty__moz_outline_radius_bottomRight:
-  case eCSSProperty__moz_outline_radius_bottomLeft:
-  case eCSSProperty_overflow:
-  case eCSSProperty_padding:
-  case eCSSProperty_padding_end:
-  case eCSSProperty_padding_left:
-  case eCSSProperty_padding_right:
-  case eCSSProperty_padding_start:
-  case eCSSProperty_pause:
-  case eCSSProperty_quotes:
-  case eCSSProperty_size:
-  case eCSSProperty_text_shadow:
-  case eCSSProperty__moz_transform:
-  case eCSSProperty__moz_transform_origin:
-  case eCSSProperty_transition:
-  case eCSSProperty_transition_property:
-  case eCSSProperty_transition_timing_function:
-  case eCSSProperty_transition_duration:
-  case eCSSProperty_transition_delay:
-  case eCSSProperty_COUNT:
-#ifdef MOZ_SVG
-  case eCSSProperty_fill:
-  case eCSSProperty_stroke:
-  case eCSSProperty_stroke_dasharray:
-  case eCSSProperty_marker:
+  PRUint32 variant = nsCSSProps::ParserVariant(aPropID);
+  if (variant == 0) {
+    NS_ABORT_IF_FALSE(PR_FALSE, "not a single value property");
+    return PR_FALSE;
+  }
+
+#ifdef MOZ_MATHML
+  // We only allow 'script-level' when unsafe rules are enabled, because
+  // otherwise it could interfere with rulenode optimizations if used in
+  // a non-MathML-enabled document.
+  if (aPropID == eCSSProperty_script_level && !mUnsafeRulesEnabled)
+    return PR_FALSE;
 #endif
-  case eCSSPropertyExtra_no_properties:
-  case eCSSPropertyExtra_all_properties:
-    NS_ERROR("not a single value property");
-    return PR_FALSE;
-
-  case eCSSProperty__x_system_font:
-  case eCSSProperty_margin_left_ltr_source:
-  case eCSSProperty_margin_left_rtl_source:
-  case eCSSProperty_margin_right_ltr_source:
-  case eCSSProperty_margin_right_rtl_source:
-  case eCSSProperty_padding_left_ltr_source:
-  case eCSSProperty_padding_left_rtl_source:
-  case eCSSProperty_padding_right_ltr_source:
-  case eCSSProperty_padding_right_rtl_source:
-  case eCSSProperty_border_left_color_ltr_source:
-  case eCSSProperty_border_left_color_rtl_source:
-  case eCSSProperty_border_right_color_ltr_source:
-  case eCSSProperty_border_right_color_rtl_source:
-  case eCSSProperty_border_left_style_ltr_source:
-  case eCSSProperty_border_left_style_rtl_source:
-  case eCSSProperty_border_right_style_ltr_source:
-  case eCSSProperty_border_right_style_rtl_source:
-  case eCSSProperty_border_left_width_ltr_source:
-  case eCSSProperty_border_left_width_rtl_source:
-  case eCSSProperty_border_right_width_ltr_source:
-  case eCSSProperty_border_right_width_rtl_source:
-#ifdef MOZ_MATHML
-  case eCSSProperty_script_size_multiplier:
-  case eCSSProperty_script_min_size:
-#endif
-    NS_ERROR("not currently parsed here");
-    return PR_FALSE;
-
-  case eCSSProperty_appearance:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kAppearanceKTable);
-  case eCSSProperty_background_attachment:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundAttachmentKTable);
-  case eCSSProperty_background_clip:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundOriginKTable);
-  case eCSSProperty_background_color:
-    return ParseVariant(aValue, VARIANT_HC, nsnull);
-  case eCSSProperty_background_image:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_IMAGE, nsnull);
-  case eCSSProperty__moz_background_inline_policy:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBackgroundInlinePolicyKTable);
-  case eCSSProperty_background_origin:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundOriginKTable);
-  case eCSSProperty_background_repeat:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundRepeatKTable);
-  case eCSSProperty_binding:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_border_collapse:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBorderCollapseKTable);
-  case eCSSProperty_border_bottom_color:
-  case eCSSProperty_border_end_color_value: // for internal use
-  case eCSSProperty_border_left_color_value: // for internal use
-  case eCSSProperty_border_right_color_value: // for internal use
-  case eCSSProperty_border_start_color_value: // for internal use
-  case eCSSProperty_border_top_color:
-  case eCSSProperty__moz_column_rule_color:
-    return ParseVariant(aValue, VARIANT_HCK,
-                        nsCSSProps::kBorderColorKTable);
-  case eCSSProperty_border_bottom_style:
-  case eCSSProperty_border_end_style_value: // for internal use
-  case eCSSProperty_border_left_style_value: // for internal use
-  case eCSSProperty_border_right_style_value: // for internal use
-  case eCSSProperty_border_start_style_value: // for internal use
-  case eCSSProperty_border_top_style:
-  case eCSSProperty__moz_column_rule_style:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBorderStyleKTable);
-  case eCSSProperty_border_bottom_width:
-  case eCSSProperty_border_end_width_value: // for internal use
-  case eCSSProperty_border_left_width_value: // for internal use
-  case eCSSProperty_border_right_width_value: // for internal use
-  case eCSSProperty_border_start_width_value: // for internal use
-  case eCSSProperty_border_top_width:
-  case eCSSProperty__moz_column_rule_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HKL | VARIANT_CALC,
-                                   nsCSSProps::kBorderWidthKTable);
-  case eCSSProperty__moz_column_count:
-    // Need to reject 0 in addition to negatives.  If we accept 0, we
-    // need to change NS_STYLE_COLUMN_COUNT_AUTO to something else.
-    return ParsePositiveNonZeroVariant(aValue, VARIANT_AHI, nsnull);
-  case eCSSProperty__moz_column_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_AHL | VARIANT_CALC, nsnull);
-  case eCSSProperty__moz_column_gap:
-    return ParseNonNegativeVariant(aValue, VARIANT_HL | VARIANT_NORMAL |
-                                   VARIANT_CALC, nsnull);
-  case eCSSProperty_bottom:
-  case eCSSProperty_top:
-  case eCSSProperty_left:
-  case eCSSProperty_right:
-    return ParseVariant(aValue, VARIANT_AHLP | VARIANT_CALC, nsnull);
-  case eCSSProperty_box_align:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBoxAlignKTable);
-  case eCSSProperty_box_direction:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBoxDirectionKTable);
-  case eCSSProperty_box_flex:
-    return ParseNonNegativeVariant(aValue, VARIANT_HN, nsnull);
-  case eCSSProperty_box_orient:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBoxOrientKTable);
-  case eCSSProperty_box_pack:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBoxPackKTable);
-  case eCSSProperty_box_ordinal_group:
-    return ParsePositiveNonZeroVariant(aValue, VARIANT_HI, nsnull);
-#ifdef MOZ_SVG
-  case eCSSProperty_clip_path:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_clip_rule:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kFillRuleKTable);
-  case eCSSProperty_color_interpolation:
-  case eCSSProperty_color_interpolation_filters:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kColorInterpolationKTable);
-  case eCSSProperty_dominant_baseline:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kDominantBaselineKTable);
-  case eCSSProperty_fill_opacity:
-    return ParseVariant(aValue, VARIANT_HN,
-                        nsnull);
-  case eCSSProperty_fill_rule:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kFillRuleKTable);
-  case eCSSProperty_filter:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_flood_color:
-    return ParseVariant(aValue, VARIANT_HC, nsnull);
-  case eCSSProperty_flood_opacity:
-    return ParseVariant(aValue, VARIANT_HN, nsnull);
-  case eCSSProperty_image_rendering:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kImageRenderingKTable);
-  case eCSSProperty_lighting_color:
-    return ParseVariant(aValue, VARIANT_HC, nsnull);
-  case eCSSProperty_marker_end:
-  case eCSSProperty_marker_mid:
-  case eCSSProperty_marker_start:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_mask:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_shape_rendering:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kShapeRenderingKTable);
-  case eCSSProperty_stop_color:
-    return ParseVariant(aValue, VARIANT_HC,
-                        nsnull);
-  case eCSSProperty_stop_opacity:
-    return ParseVariant(aValue, VARIANT_HN,
-                        nsnull);
-  case eCSSProperty_stroke_dashoffset:
-    return ParseVariant(aValue, VARIANT_HLPN,
-                        nsnull);
-  case eCSSProperty_stroke_linecap:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kStrokeLinecapKTable);
-  case eCSSProperty_stroke_linejoin:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kStrokeLinejoinKTable);
-  case eCSSProperty_stroke_miterlimit:
-    return ParseVariant(aValue, VARIANT_HN, nsnull) &&
-           // Enforce the restriction that the value is greater than 1.
-           (aValue.GetUnit() != eCSSUnit_Number || 
-            aValue.GetFloatValue() >= 1.0f);
-  case eCSSProperty_stroke_opacity:
-    return ParseVariant(aValue, VARIANT_HN,
-                        nsnull);
-  case eCSSProperty_stroke_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HLPN, nsnull);
-  case eCSSProperty_text_anchor:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kTextAnchorKTable);
-  case eCSSProperty_text_rendering:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kTextRenderingKTable);
-#endif
-  case eCSSProperty_box_sizing:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBoxSizingKTable);
-  case eCSSProperty_height:
-    return ParseNonNegativeVariant(aValue, VARIANT_AHLP | VARIANT_CALC,
-                                   nsnull);
-  case eCSSProperty_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_AHKLP | VARIANT_CALC,
-                                   nsCSSProps::kWidthKTable);
-  case eCSSProperty_force_broken_image_icon:
-    return ParseNonNegativeVariant(aValue, VARIANT_HI, nsnull);
-  case eCSSProperty_caption_side:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kCaptionSideKTable);
-  case eCSSProperty_clear:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kClearKTable);
-  case eCSSProperty_color:
-    return ParseVariant(aValue, VARIANT_HC, nsnull);
-  case eCSSProperty_color_correction:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kColorCorrectionKTable);
-  case eCSSProperty_cue_after:
-  case eCSSProperty_cue_before:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_direction:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kDirectionKTable);
-  case eCSSProperty_display:
-    return ParseVariant(aValue, VARIANT_HK, nsCSSProps::kDisplayKTable);
-  case eCSSProperty_elevation:
-    return ParseVariant(aValue, VARIANT_HK | VARIANT_ANGLE,
-                        nsCSSProps::kElevationKTable);
-  case eCSSProperty_empty_cells:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kEmptyCellsKTable);
-  case eCSSProperty_float:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kFloatKTable);
-  case eCSSProperty_float_edge:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kFloatEdgeKTable);
-  case eCSSProperty_font_feature_settings:
-  case eCSSProperty_font_language_override:
-    return ParseVariant(aValue, VARIANT_NORMAL | VARIANT_INHERIT |
-                                VARIANT_STRING, nsnull);
-  case eCSSProperty_font_size:
-    return ParseNonNegativeVariant(aValue,
-                                   VARIANT_HKLP | VARIANT_SYSFONT |
-                                     VARIANT_CALC,
-                                   nsCSSProps::kFontSizeKTable);
-  case eCSSProperty_font_size_adjust:
-    return ParseVariant(aValue, VARIANT_HON | VARIANT_SYSFONT,
-                        nsnull);
-  case eCSSProperty_font_stretch:
-    return ParseVariant(aValue, VARIANT_HK | VARIANT_SYSFONT,
-                        nsCSSProps::kFontStretchKTable);
-  case eCSSProperty_font_style:
-    return ParseVariant(aValue, VARIANT_HK | VARIANT_SYSFONT,
-                        nsCSSProps::kFontStyleKTable);
-  case eCSSProperty_font_variant:
-    return ParseVariant(aValue, VARIANT_HK | VARIANT_SYSFONT,
-                        nsCSSProps::kFontVariantKTable);
-  case eCSSProperty_ime_mode:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kIMEModeKTable);
-  case eCSSProperty__moz_tab_size:
-    return ParseNonNegativeVariant(aValue, VARIANT_HI, nsnull);
-  case eCSSProperty_letter_spacing:
-  case eCSSProperty_word_spacing:
-    return ParseVariant(aValue, VARIANT_HL | VARIANT_NORMAL | VARIANT_CALC,
-                        nsnull);
-  case eCSSProperty_line_height:
-    return ParseNonNegativeVariant(aValue, VARIANT_HLPN | VARIANT_KEYWORD | VARIANT_NORMAL | VARIANT_SYSFONT, nsCSSProps::kLineHeightKTable);
-  case eCSSProperty_list_style_image:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_list_style_position:
-    return ParseVariant(aValue, VARIANT_HK, nsCSSProps::kListStylePositionKTable);
-  case eCSSProperty_list_style_type:
-    return ParseVariant(aValue, VARIANT_HK, nsCSSProps::kListStyleKTable);
-  case eCSSProperty_margin_bottom:
-  case eCSSProperty_margin_end_value: // for internal use
-  case eCSSProperty_margin_left_value: // for internal use
-  case eCSSProperty_margin_right_value: // for internal use
-  case eCSSProperty_margin_start_value: // for internal use
-  case eCSSProperty_margin_top:
-    return ParseVariant(aValue, VARIANT_AHLP | VARIANT_CALC, nsnull);
-  case eCSSProperty_marker_offset:
-    return ParseVariant(aValue, VARIANT_AHL | VARIANT_CALC, nsnull);
-  case eCSSProperty_max_height:
-    return ParseNonNegativeVariant(aValue, VARIANT_HLPO | VARIANT_CALC,
-                                   nsnull);
-  case eCSSProperty_max_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HKLPO | VARIANT_CALC,
-                                   nsCSSProps::kWidthKTable);
-  case eCSSProperty_min_height:
-    return ParseNonNegativeVariant(aValue, VARIANT_HLP | VARIANT_CALC,
-                                   nsnull);
-  case eCSSProperty_min_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HKLP | VARIANT_CALC,
-                                   nsCSSProps::kWidthKTable);
-  case eCSSProperty_opacity:
-    return ParseVariant(aValue, VARIANT_HN, nsnull);
-  case eCSSProperty_orphans:
-  case eCSSProperty_widows:
-    return ParsePositiveNonZeroVariant(aValue, VARIANT_HI, nsnull);
-  case eCSSProperty_outline_color:
-    return ParseVariant(aValue, VARIANT_HCK,
-                        nsCSSProps::kOutlineColorKTable);
-  case eCSSProperty_outline_style:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kOutlineStyleKTable);
-  case eCSSProperty_outline_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HKL | VARIANT_CALC,
-                                   nsCSSProps::kBorderWidthKTable);
-  case eCSSProperty_outline_offset:
-    return ParseVariant(aValue, VARIANT_HL | VARIANT_CALC, nsnull);
-  case eCSSProperty_overflow_x:
-  case eCSSProperty_overflow_y:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kOverflowSubKTable);
-  case eCSSProperty_padding_bottom:
-  case eCSSProperty_padding_end_value: // for internal use
-  case eCSSProperty_padding_left_value: // for internal use
-  case eCSSProperty_padding_right_value: // for internal use
-  case eCSSProperty_padding_start_value: // for internal use
-  case eCSSProperty_padding_top:
-    return ParseNonNegativeVariant(aValue, VARIANT_HLP | VARIANT_CALC, nsnull);
-  case eCSSProperty_page:
-    return ParseVariant(aValue, VARIANT_AUTO | VARIANT_IDENTIFIER, nsnull);
-  case eCSSProperty_page_break_after:
-  case eCSSProperty_page_break_before:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kPageBreakKTable);
-  case eCSSProperty_page_break_inside:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kPageBreakInsideKTable);
-  case eCSSProperty_pause_after:
-  case eCSSProperty_pause_before:
-    return ParseVariant(aValue, VARIANT_HTP, nsnull);
-  case eCSSProperty_pitch:
-    return ParseVariant(aValue, VARIANT_HKF, nsCSSProps::kPitchKTable);
-  case eCSSProperty_pitch_range:
-    return ParseVariant(aValue, VARIANT_HN, nsnull);
-  case eCSSProperty_pointer_events:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kPointerEventsKTable);
-  case eCSSProperty_position:
-    return ParseVariant(aValue, VARIANT_HK, nsCSSProps::kPositionKTable);
-  case eCSSProperty_resize:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kResizeKTable);
-  case eCSSProperty_richness:
-    return ParseVariant(aValue, VARIANT_HN, nsnull);
-#ifdef MOZ_MATHML
-  // script-level can take Integer or Number values, but only Integer ("relative")
-  // values can be specified in a style sheet. Also we only allow this property
-  // when unsafe rules are enabled, because otherwise it could interfere
-  // with rulenode optimizations if used in a non-MathML-enabled document.
-  case eCSSProperty_script_level:
-    if (!mUnsafeRulesEnabled)
-      return PR_FALSE;
-    return ParseVariant(aValue, VARIANT_HI, nsnull);
-#endif
-  case eCSSProperty_speak:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kSpeakKTable);
-  case eCSSProperty_speak_header:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kSpeakHeaderKTable);
-  case eCSSProperty_speak_numeral:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kSpeakNumeralKTable);
-  case eCSSProperty_speak_punctuation:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kSpeakPunctuationKTable);
-  case eCSSProperty_speech_rate:
-    return ParseVariant(aValue, VARIANT_HN | VARIANT_KEYWORD,
-                        nsCSSProps::kSpeechRateKTable);
-  case eCSSProperty_stack_sizing:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kStackSizingKTable);
-  case eCSSProperty_stress:
-    return ParseVariant(aValue, VARIANT_HN, nsnull);
-  case eCSSProperty_table_layout:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kTableLayoutKTable);
-  case eCSSProperty_text_align:
-    // When we support aligning on a string, we can parse text-align
-    // as a string....
-    return ParseVariant(aValue, VARIANT_HK /* | VARIANT_STRING */,
-                        nsCSSProps::kTextAlignKTable);
-  case eCSSProperty_text_indent:
-    return ParseVariant(aValue, VARIANT_HLP | VARIANT_CALC, nsnull);
-  case eCSSProperty_text_transform:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kTextTransformKTable);
-  case eCSSProperty_unicode_bidi:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kUnicodeBidiKTable);
-  case eCSSProperty_user_focus:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kUserFocusKTable);
-  case eCSSProperty_user_input:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kUserInputKTable);
-  case eCSSProperty_user_modify:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kUserModifyKTable);
-  case eCSSProperty_user_select:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kUserSelectKTable);
-  case eCSSProperty_vertical_align:
-    return ParseVariant(aValue, VARIANT_HKLP | VARIANT_CALC,
-                        nsCSSProps::kVerticalAlignKTable);
-  case eCSSProperty_visibility:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kVisibilityKTable);
-  case eCSSProperty_volume:
-    return ParseVariant(aValue, VARIANT_HPN | VARIANT_KEYWORD,
-                        nsCSSProps::kVolumeKTable);
-  case eCSSProperty_white_space:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kWhitespaceKTable);
-  case eCSSProperty__moz_window_shadow:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kWindowShadowKTable);
-  case eCSSProperty_word_wrap:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kWordwrapKTable);
-  case eCSSProperty_z_index:
-    return ParseVariant(aValue, VARIANT_AHI, nsnull);
-  case eCSSPropertyExtra_x_none_value:
-    return ParseVariant(aValue, VARIANT_NONE | VARIANT_INHERIT, nsnull);
-  }
-  // explicitly do NOT have a default case to let the compiler
-  // help find missing properties
-  return PR_FALSE;
+
+  const PRInt32 *kwtable = nsCSSProps::kKeywordTableTable[aPropID];
+  switch (nsCSSProps::ValueRestrictions(aPropID)) {
+    default:
+      NS_ABORT_IF_FALSE(PR_FALSE, "should not be reached");
+    case 0:
+      return ParseVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_NONNEGATIVE:
+      return ParseNonNegativeVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_POSITIVE_NONZERO:
+      return ParsePositiveNonZeroVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_AT_LEAST_ONE:
+      NS_ABORT_IF_FALSE((variant &
+                         ~(VARIANT_ALL_NONNUMERIC | VARIANT_NUMBER)) == 0,
+                        "need to update code to handle additional variants");
+      if (!ParseVariant(aValue, variant, kwtable))
+        return PR_FALSE;
+      // Enforce the restriction that the value is greater than 1.
+      return aValue.GetUnit() != eCSSUnit_Number || 
+             aValue.GetFloatValue() >= 1.0f;
+  }
 }
 
 // nsFont::EnumerateFamilies callback for ParseFontDescriptorValue
 struct NS_STACK_CLASS ExtractFirstFamilyData {
   nsAutoString mFamilyName;
   PRBool mGood;
   ExtractFirstFamilyData() : mFamilyName(), mGood(PR_FALSE) {}
 };
diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -292,17 +292,17 @@
 
 CSS_PROP_DISPLAY(
     -moz-appearance,
     appearance,
     MozAppearance,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mAppearance,
-    0,
+    VARIANT_HK,
     kAppearanceKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     -moz-outline-radius,
     _moz_outline_radius,
     MozOutlineRadius,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -353,20 +353,21 @@ CSS_PROP_OUTLINE(
     0,
     nsnull,
     offsetof(nsStyleOutline, mOutlineRadius),
     eStyleAnimType_Corner_BottomLeft)
 CSS_PROP_TEXT(
     -moz-tab-size,
     _moz_tab_size,
     MozTabSize,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     Text,
     mTabSize,
-    0,
+    VARIANT_HI,
     nsnull,
     offsetof(nsStyleText, mTabSize),
     eStyleAnimType_None)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_FONT(
     -x-system-font,
     _x_system_font,
     MozSystemFont,
@@ -398,83 +399,83 @@ CSS_PROP_BACKGROUND(
     background-attachment,
     background_attachment,
     BackgroundAttachment,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackAttachment,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundAttachmentKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-clip,
     background_clip,
     BackgroundClip,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackClip,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundOriginKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-color,
     background_color,
     BackgroundColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Color,
     mBackColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleBackground, mBackgroundColor),
     eStyleAnimType_Color)
 CSS_PROP_BACKGROUND(
     background-image,
     background_image,
     BackgroundImage,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_START_IMAGE_LOADS,
     Color,
     mBackImage,
-    0,
+    VARIANT_IMAGE, // used only internally
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     -moz-background-inline-policy,
     _moz_background_inline_policy,
     MozBackgroundInlinePolicy,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Color,
     mBackInlinePolicy,
-    0,
+    VARIANT_HK,
     kBackgroundInlinePolicyKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-origin,
     background_origin,
     BackgroundOrigin,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackOrigin,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundOriginKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-position,
     background_position,
     BackgroundPosition,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -491,17 +492,17 @@ CSS_PROP_BACKGROUND(
     background-repeat,
     background_repeat,
     BackgroundRepeat,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackRepeat,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundRepeatKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-size,
     background_size,
     BackgroundSize,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -516,17 +517,17 @@ CSS_PROP_BACKGROUND(
     eStyleAnimType_Custom)
 CSS_PROP_DISPLAY(
     -moz-binding,
     binding,
     MozBinding,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mBinding,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_SHORTHAND(
     border,
     border,
     Border,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -539,17 +540,17 @@ CSS_PROP_BORDER(
     border-bottom-color,
     border_bottom_color,
     BorderBottomColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mBottom,
-    0,
+    VARIANT_HCK,
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-bottom-colors,
     border_bottom_colors,
     MozBorderBottomColors,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -564,40 +565,41 @@ CSS_PROP_BORDER(
 CSS_PROP_BORDER(
     border-bottom-style,
     border_bottom_style,
     BorderBottomStyle,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStyle.mBottom,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)  // on/off will need reflow
 CSS_PROP_BORDER(
     border-bottom-width,
     border_bottom_width,
     BorderBottomWidth,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mBottom,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_TABLEBORDER(
     border-collapse,
     border_collapse,
     BorderCollapse,
     CSS_PROPERTY_PARSE_VALUE,
     Table,
     mBorderCollapse,
-    0,
+    VARIANT_HK,
     kBorderCollapseKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     border-color,
     border_color,
     BorderColor,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -615,17 +617,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-end-color-value,
     border_end_color_value,
     MozBorderEndColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndColor,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-end-style,
     border_end_style,
     MozBorderEndStyle,
@@ -634,36 +636,37 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-end-style-value,
     border_end_style_value,
     MozBorderEndStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndStyle,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-end-width,
     border_end_width,
     MozBorderEndWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(
     border-end-width-value,
     border_end_width_value,
     MozBorderEndWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_BORDER(
     -moz-border-image,
     border_image,
     MozBorderImage,
@@ -693,17 +696,17 @@ CSS_PROP_BORDER(
     border_left_color_value,
     BorderLeftColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderColor.mLeft,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-color-ltr-source,
     border_left_color_ltr_source,
     BorderLeftColorLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -754,17 +757,17 @@ CSS_PROP_BORDER(
     border-left-style-value,
     border_left_style_value,
     BorderLeftStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderStyle.mLeft,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BORDER(
     border-left-style-ltr-source,
     border_left_style_ltr_source,
     BorderLeftStyleLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -796,21 +799,22 @@ CSS_PROP_SHORTHAND(
     BorderLeftWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(
     border-left-width-value,
     border_left_width_value,
     BorderLeftWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderWidth.mLeft,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-width-ltr-source,
     border_left_width_ltr_source,
     BorderLeftWidthLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -852,17 +856,17 @@ CSS_PROP_BORDER(
     border_right_color_value,
     BorderRightColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderColor.mRight,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-color-ltr-source,
     border_right_color_ltr_source,
     BorderRightColorLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -913,17 +917,17 @@ CSS_PROP_BORDER(
     border-right-style-value,
     border_right_style_value,
     BorderRightStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderStyle.mRight,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BORDER(
     border-right-style-ltr-source,
     border_right_style_ltr_source,
     BorderRightStyleLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -955,21 +959,22 @@ CSS_PROP_SHORTHAND(
     BorderRightWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(
     border-right-width-value,
     border_right_width_value,
     BorderRightWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderWidth.mRight,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-width-ltr-source,
     border_right_width_ltr_source,
     BorderRightWidthLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -1020,17 +1025,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-start-color-value,
     border_start_color_value,
     BorderStartColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartColor,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-start-style,
     border_start_style,
     MozBorderStartStyle,
@@ -1039,36 +1044,37 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-start-style-value,
     border_start_style_value,
     BorderStartStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartStyle,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-start-width,
     border_start_width,
     MozBorderStartWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_BORDER(
     border-start-width-value,
     border_start_width_value,
     BorderStartWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     border-style,
     border_style,
     BorderStyle,
@@ -1082,17 +1088,17 @@ CSS_PROP_BORDER(
     border-top-color,
     border_top_color,
     BorderTopColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mTop,
-    0,
+    VARIANT_HCK,
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-top-colors,
     border_top_colors,
     MozBorderTopColors,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -1107,29 +1113,30 @@ CSS_PROP_BORDER(
 CSS_PROP_BORDER(
     border-top-style,
     border_top_style,
     BorderTopStyle,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStyle.mTop,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)  // on/off will need reflow
 CSS_PROP_BORDER(
     border-top-width,
     border_top_width,
     BorderTopWidth,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mTop,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_SHORTHAND(
     border-width,
     border_width,
     BorderWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -1193,17 +1200,17 @@ CSS_PROP_BORDER(
 CSS_PROP_POSITION(
     bottom,
     bottom,
     Bottom,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mOffset.mBottom,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mOffset),
     eStyleAnimType_Sides_Bottom)
 CSS_PROP_BORDER(
     box-shadow,
     box_shadow,
     BoxShadow,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -1218,39 +1225,39 @@ CSS_PROP_BORDER(
     eStyleAnimType_Shadow)
 CSS_PROP_POSITION(
     -moz-box-sizing,
     box_sizing,
     MozBoxSizing,
     CSS_PROPERTY_PARSE_VALUE,
     Position,
     mBoxSizing,
-    0,
+    VARIANT_HK,
     kBoxSizingKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_TABLEBORDER(
     caption-side,
     caption_side,
     CaptionSide,
     CSS_PROPERTY_PARSE_VALUE,
     Table,
     mCaptionSide,
-    0,
+    VARIANT_HK,
     kCaptionSideKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     clear,
     clear,
     Clear,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mClear,
-    0,
+    VARIANT_HK,
     kClearKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     clip,
     clip,
     Clip,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -1264,101 +1271,107 @@ CSS_PROP_COLOR(
     color,
     color,
     Color,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Color,
     mColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleColor, mColor),
     eStyleAnimType_Color)
 CSS_PROP_VISIBILITY(
     -moz-color-correction,
     color_correction,
     MozColorCorrection,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Display,
     mColorCorrection,
-    0,
+    VARIANT_HK,
     kColorCorrectionKTable,
     offsetof(nsStyleVisibility, mColorCorrection),
     eStyleAnimType_None)
 CSS_PROP_COLUMN(
     -moz-column-count,
     _moz_column_count,
     MozColumnCount,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        // Need to reject 0 in addition to negatives.  If we accept 0, we
+        // need to change NS_STYLE_COLUMN_COUNT_AUTO to something else.
+        CSS_PROPERTY_VALUE_POSITIVE_NONZERO,
     Column,
     mColumnCount,
-    0,
+    VARIANT_AHI,
     nsnull,
     offsetof(nsStyleColumn, mColumnCount),
     eStyleAnimType_Custom)
 CSS_PROP_COLUMN(
     -moz-column-width,
     _moz_column_width,
     MozColumnWidth,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     Column,
     mColumnWidth,
-    0,
+    VARIANT_AHL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleColumn, mColumnWidth),
     eStyleAnimType_Coord)
 CSS_PROP_COLUMN(
     -moz-column-gap,
     _moz_column_gap,
     MozColumnGap,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     Column,
     mColumnGap,
-    0,
+    VARIANT_HL | VARIANT_NORMAL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleColumn, mColumnGap),
     eStyleAnimType_Coord)
 CSS_PROP_SHORTHAND(
     -moz-column-rule,
     _moz_column_rule,
     MozColumnRule,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_COLUMN(
     -moz-column-rule-color,
     _moz_column_rule_color,
     MozColumnRuleColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Column,
     mColumnRuleColor,
-    0,
+    VARIANT_HCK,
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_COLUMN(
     -moz-column-rule-style,
     _moz_column_rule_style,
     MozColumnRuleStyle,
     CSS_PROPERTY_PARSE_VALUE,
     Column,
     mColumnRuleStyle,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_COLUMN(
     -moz-column-rule-width,
     _moz_column_rule_width,
     MozColumnRuleWidth,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     Column,
     mColumnRuleWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_CONTENT(
     content,
     content,
     Content,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -1398,26 +1411,26 @@ CSS_PROP_SHORTHAND(
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_BACKENDONLY(
     cue-after,
     cue_after,
     CueAfter,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mCueAfter,
-    0,
+    VARIANT_HUO,
     nsnull)
 CSS_PROP_BACKENDONLY(
     cue-before,
     cue_before,
     CueBefore,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mCueBefore,
-    0,
+    VARIANT_HUO,
     nsnull)
 CSS_PROP_USERINTERFACE(
     cursor,
     cursor,
     Cursor,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS |
         CSS_PROPERTY_START_IMAGE_LOADS |
@@ -1430,71 +1443,71 @@ CSS_PROP_USERINTERFACE(
     eStyleAnimType_None)
 CSS_PROP_VISIBILITY(
     direction,
     direction,
     Direction,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mDirection,
-    0,
+    VARIANT_HK,
     kDirectionKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     display,
     display,
     Display,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mDisplay,
-    0,
+    VARIANT_HK,
     kDisplayKTable,
     offsetof(nsStyleDisplay, mDisplay),
     eStyleAnimType_EnumU8)
 CSS_PROP_BACKENDONLY(
     elevation,
     elevation,
     Elevation,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mElevation,
-    0,
+    VARIANT_HK | VARIANT_ANGLE,
     kElevationKTable)
 CSS_PROP_TABLEBORDER(
     empty-cells,
     empty_cells,
     EmptyCells,
     CSS_PROPERTY_PARSE_VALUE,
     Table,
     mEmptyCells,
-    0,
+    VARIANT_HK,
     kEmptyCellsKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     float,
     float,
     CssFloat,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Display,
     mFloat,
-    0,
+    VARIANT_HK,
     kFloatKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BORDER(
     -moz-float-edge,
     float_edge,
     MozFloatEdge,
     CSS_PROPERTY_PARSE_VALUE,
     Margin,
     mFloatEdge,
-    0,
+    VARIANT_HK,
     kFloatEdgeKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_SHORTHAND(
     font,
     font,
     Font,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -1514,91 +1527,92 @@ CSS_PROP_FONT(
 CSS_PROP_FONT(
     -moz-font-feature-settings,
     font_feature_settings,
     MozFontFeatureSettings,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mFontFeatureSettings,
-    0,
+    VARIANT_NORMAL | VARIANT_INHERIT | VARIANT_STRING,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_FONT(
     -moz-font-language-override,
     font_language_override,
     MozFontLanguageOverride,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mFontLanguageOverride,
-    0,
+    VARIANT_NORMAL | VARIANT_INHERIT | VARIANT_STRING,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_FONT(
     font-size,
     font_size,
     FontSize,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mSize,
-    0,
+    VARIANT_HKLP | VARIANT_SYSFONT | VARIANT_CALC,
     kFontSizeKTable,
     // Note that mSize is the correct place for *reading* the computed value,
     // but setting it requires setting mFont.size as well.
     offsetof(nsStyleFont, mSize),
     eStyleAnimType_nscoord)
 CSS_PROP_FONT(
     font-size-adjust,
     font_size_adjust,
     FontSizeAdjust,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mSizeAdjust,
-    0,
+    VARIANT_HON | VARIANT_SYSFONT,
     nsnull,
     offsetof(nsStyleFont, mFont.sizeAdjust),
     eStyleAnimType_float)
 CSS_PROP_FONT(
     font-stretch,
     font_stretch,
     FontStretch,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mStretch,
-    0,
+    VARIANT_HK | VARIANT_SYSFONT,
     kFontStretchKTable,
     offsetof(nsStyleFont, mFont.stretch),
     eStyleAnimType_Custom)
 CSS_PROP_FONT(
     font-style,
     font_style,
     FontStyle,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mStyle,
-    0,
+    VARIANT_HK | VARIANT_SYSFONT,
     kFontStyleKTable,
     offsetof(nsStyleFont, mFont.style),
     eStyleAnimType_EnumU8)
 CSS_PROP_FONT(
     font-variant,
     font_variant,
     FontVariant,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mVariant,
-    0,
+    VARIANT_HK | VARIANT_SYSFONT,
     kFontVariantKTable,
     offsetof(nsStyleFont, mFont.variant),
     eStyleAnimType_EnumU8)
 CSS_PROP_FONT(
     font-weight,
     font_weight,
     FontWeight,
     CSS_PROPERTY_PARSE_VALUE |
@@ -1609,32 +1623,34 @@ CSS_PROP_FONT(
     0,
     kFontWeightKTable,
     offsetof(nsStyleFont, mFont.weight),
     eStyleAnimType_Custom)
 CSS_PROP_UIRESET(
     -moz-force-broken-image-icon,
     force_broken_image_icon,
     MozForceBrokenImageIcon,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     UserInterface,
     mForceBrokenImageIcon,
-    0,
+    VARIANT_HI,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // bug 58646
 CSS_PROP_POSITION(
     height,
     height,
     Height,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mHeight,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mHeight),
     eStyleAnimType_Coord)
 CSS_PROP_LIST(
     -moz-image-region,
     image_region,
     MozImageRegion,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -1646,92 +1662,93 @@ CSS_PROP_LIST(
     eStyleAnimType_Custom)
 CSS_PROP_UIRESET(
     ime-mode,
     ime_mode,
     ImeMode,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mIMEMode,
-    0,
+    VARIANT_HK,
     kIMEModeKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_POSITION(
     left,
     left,
     Left,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mOffset.mLeft,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mOffset),
     eStyleAnimType_Sides_Left)
 CSS_PROP_TEXT(
     letter-spacing,
     letter_spacing,
     LetterSpacing,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Text,
     mLetterSpacing,
-    0,
+    VARIANT_HL | VARIANT_NORMAL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleText, mLetterSpacing),
     eStyleAnimType_Coord)
 CSS_PROP_TEXT(
     line-height,
     line_height,
     LineHeight,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Text,
     mLineHeight,
-    0,
+    VARIANT_HLPN | VARIANT_KEYWORD | VARIANT_NORMAL | VARIANT_SYSFONT,
     kLineHeightKTable,
     offsetof(nsStyleText, mLineHeight),
     eStyleAnimType_Coord)
 CSS_PROP_SHORTHAND(
     list-style,
     list_style,
     ListStyle,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_LIST(
     list-style-image,
     list_style_image,
     ListStyleImage,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_START_IMAGE_LOADS,
     List,
     mImage,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_LIST(
     list-style-position,
     list_style_position,
     ListStylePosition,
     CSS_PROPERTY_PARSE_VALUE,
     List,
     mPosition,
-    0,
+    VARIANT_HK,
     kListStylePositionKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_LIST(
     list-style-type,
     list_style_type,
     ListStyleType,
     CSS_PROPERTY_PARSE_VALUE,
     List,
     mType,
-    0,
+    VARIANT_HK,
     kListStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     margin,
     margin,
     Margin,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -1739,17 +1756,17 @@ CSS_PROP_MARGIN(
     margin-bottom,
     margin_bottom,
     MarginBottom,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMargin.mBottom,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleMargin, mMargin),
     eStyleAnimType_Sides_Bottom)
 CSS_PROP_SHORTHAND(
     -moz-margin-end,
     margin_end,
     MozMarginEnd,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -1758,17 +1775,17 @@ CSS_PROP_MARGIN(
     margin-end-value,
     margin_end_value,
     MarginEndValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMarginEnd,
-    0,
+    VARIANT_AHLP | VARIANT_CALC, // for internal use
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     margin-left,
     margin_left,
     MarginLeft,
@@ -1779,17 +1796,17 @@ CSS_PROP_MARGIN(
     margin_left_value,
     MarginLeftValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMargin.mLeft,
-    0,
+    VARIANT_AHLP | VARIANT_CALC, // for internal use
     nsnull,
     offsetof(nsStyleMargin, mMargin),
     eStyleAnimType_Sides_Left)
 CSS_PROP_MARGIN(
     margin-left-ltr-source,
     margin_left_ltr_source,
     MarginLeftLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -1826,17 +1843,17 @@ CSS_PROP_MARGIN(
     margin_right_value,
     MarginRightValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMargin.mRight,
-    0,
+    VARIANT_AHLP | VARIANT_CALC, // for internal use
     nsnull,
     offsetof(nsStyleMargin, mMargin),
     eStyleAnimType_Sides_Right)
 CSS_PROP_MARGIN(
     margin-right-ltr-source,
     margin_right_ltr_source,
     MarginRightLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -1872,42 +1889,42 @@ CSS_PROP_MARGIN(
     margin-start-value,
     margin_start_value,
     MarginStartValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMarginStart,
-    0,
+    VARIANT_AHLP | VARIANT_CALC, // for internal use
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_MARGIN(
     margin-top,
     margin_top,
     MarginTop,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mMargin.mTop,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleMargin, mMargin),
     eStyleAnimType_Sides_Top)
 CSS_PROP_CONTENT(
     marker-offset,
     marker_offset,
     MarkerOffset,
     CSS_PROPERTY_PARSE_VALUE,
     Content,
     mMarkerOffset,
-    0,
+    VARIANT_AHL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleContent, mMarkerOffset),
     eStyleAnimType_Coord)
 CSS_PROP_BACKENDONLY(
     marks,
     marks,
     Marks,
     CSS_PROPERTY_PARSE_VALUE |
@@ -1916,211 +1933,220 @@ CSS_PROP_BACKENDONLY(
     mMarks,
     0,
     kPageMarksKTable)
 CSS_PROP_POSITION(
     max-height,
     max_height,
     MaxHeight,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mMaxHeight,
-    0,
+    VARIANT_HLPO | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mMaxHeight),
     eStyleAnimType_Coord)
 CSS_PROP_POSITION(
     max-width,
     max_width,
     MaxWidth,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mMaxWidth,
-    0,
+    VARIANT_HKLPO | VARIANT_CALC,
     kWidthKTable,
     offsetof(nsStylePosition, mMaxWidth),
     eStyleAnimType_Coord)
 CSS_PROP_POSITION(
     min-height,
     min_height,
     MinHeight,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mMinHeight,
-    0,
+    VARIANT_HLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mMinHeight),
     eStyleAnimType_Coord)
 CSS_PROP_POSITION(
     min-width,
     min_width,
     MinWidth,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mMinWidth,
-    0,
+    VARIANT_HKLP | VARIANT_CALC,
     kWidthKTable,
     offsetof(nsStylePosition, mMinWidth),
     eStyleAnimType_Coord)
 CSS_PROP_DISPLAY(
     opacity,
     opacity,
     Opacity,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mOpacity,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleDisplay, mOpacity),
     eStyleAnimType_float) // XXX bug 3935
 CSS_PROP_BACKENDONLY(
     orphans,
     orphans,
     Orphans,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_POSITIVE_NONZERO,
     Breaks,
     mOrphans,
-    0,
+    VARIANT_HI,
     nsnull)
 CSS_PROP_SHORTHAND(
     outline,
     outline,
     Outline,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_OUTLINE(
     outline-color,
     outline_color,
     OutlineColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mOutlineColor,
-    0,
+    VARIANT_HCK,
     kOutlineColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_OUTLINE(
     outline-style,
     outline_style,
     OutlineStyle,
     CSS_PROPERTY_PARSE_VALUE,
     Margin,
     mOutlineStyle,
-    0,
+    VARIANT_HK,
     kOutlineStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_OUTLINE(
     outline-width,
     outline_width,
     OutlineWidth,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     Margin,
     mOutlineWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     offsetof(nsStyleOutline, mOutlineWidth),
     eStyleAnimType_Coord)
 CSS_PROP_OUTLINE(
     outline-offset,
     outline_offset,
     OutlineOffset,
     CSS_PROPERTY_PARSE_VALUE,
     Margin,
     mOutlineOffset,
-    0,
+    VARIANT_HL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleOutline, mOutlineOffset),
     eStyleAnimType_nscoord)
 CSS_PROP_SHORTHAND(
     overflow,
     overflow,
     Overflow,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_DISPLAY(
     overflow-x,
     overflow_x,
     OverflowX,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mOverflowX,
-    0,
+    VARIANT_HK,
     kOverflowSubKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     overflow-y,
     overflow_y,
     OverflowY,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mOverflowY,
-    0,
+    VARIANT_HK,
     kOverflowSubKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     padding,
     padding,
     Padding,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_PADDING(
     padding-bottom,
     padding_bottom,
     PaddingBottom,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPadding.mBottom,
-    0,
+    VARIANT_HLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePadding, mPadding),
     eStyleAnimType_Sides_Bottom)
 CSS_PROP_SHORTHAND(
     -moz-padding-end,
     padding_end,
     MozPaddingEnd,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(
     padding-end-value,
     padding_end_value,
     PaddingEndValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPaddingEnd,
-    0,
+    VARIANT_HLP | VARIANT_CALC, // for internal use
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     padding-left,
     padding_left,
     PaddingLeft,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(
     padding-left-value,
     padding_left_value,
     PaddingLeftValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPadding.mLeft,
-    0,
+    VARIANT_HLP | VARIANT_CALC, // for internal use
     nsnull,
     offsetof(nsStylePadding, mPadding),
     eStyleAnimType_Sides_Left)
 CSS_PROP_PADDING(
     padding-left-ltr-source,
     padding_left_ltr_source,
     PaddingLeftLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -2152,22 +2178,23 @@ CSS_PROP_SHORTHAND(
     PaddingRight,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(
     padding-right-value,
     padding_right_value,
     PaddingRightValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPadding.mRight,
-    0,
+    VARIANT_HLP | VARIANT_CALC, // for internal use
     nsnull,
     offsetof(nsStylePadding, mPadding),
     eStyleAnimType_Sides_Right)
 CSS_PROP_PADDING(
     padding-right-ltr-source,
     padding_right_ltr_source,
     PaddingRightLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -2199,138 +2226,140 @@ CSS_PROP_SHORTHAND(
     MozPaddingStart,
     CSS_PROPERTY_PARSE_FUNCTION)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_PADDING(
     padding-start-value,
     padding_start_value,
     PaddingStartValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPaddingStart,
-    0,
+    VARIANT_HLP | VARIANT_CALC, // for internal use
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_PADDING(
     padding-top,
     padding_top,
     PaddingTop,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_STORES_CALC,
     Margin,
     mPadding.mTop,
-    0,
+    VARIANT_HLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePadding, mPadding),
     eStyleAnimType_Sides_Top)
 CSS_PROP_BACKENDONLY(
     page,
     page,
     Page,
     CSS_PROPERTY_PARSE_VALUE,
     Breaks,
     mPage,
-    0,
+    VARIANT_AUTO | VARIANT_IDENTIFIER,
     nsnull)
 CSS_PROP_DISPLAY(
     page-break-after,
     page_break_after,
     PageBreakAfter,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mBreakAfter,
-    0,
+    VARIANT_HK,
     kPageBreakKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // temp fix for bug 24000
 CSS_PROP_DISPLAY(
     page-break-before,
     page_break_before,
     PageBreakBefore,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mBreakBefore,
-    0,
+    VARIANT_HK,
     kPageBreakKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // temp fix for bug 24000
 CSS_PROP_BACKENDONLY(
     page-break-inside,
     page_break_inside,
     PageBreakInside,
     CSS_PROPERTY_PARSE_VALUE,
     Breaks,
     mPageBreakInside,
-    0,
+    VARIANT_HK,
     kPageBreakInsideKTable)
 CSS_PROP_SHORTHAND(
     pause,
     pause,
     Pause,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_BACKENDONLY(
     pause-after,
     pause_after,
     PauseAfter,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mPauseAfter,
-    0,
+    VARIANT_HTP,
     nsnull)
 CSS_PROP_BACKENDONLY(
     pause-before,
     pause_before,
     PauseBefore,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mPauseBefore,
-    0,
+    VARIANT_HTP,
     nsnull)
 CSS_PROP_BACKENDONLY(
     pitch,
     pitch,
     Pitch,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mPitch,
-    0,
+    VARIANT_HKF,
     kPitchKTable)
 CSS_PROP_BACKENDONLY(
     pitch-range,
     pitch_range,
     PitchRange,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mPitchRange,
-    0,
+    VARIANT_HN,
     nsnull)
 CSS_PROP_VISIBILITY(
     pointer-events,
     pointer_events,
     PointerEvents,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mPointerEvents,
-    0,
+    VARIANT_HK,
     kPointerEventsKTable,
     offsetof(nsStyleVisibility, mPointerEvents),
     eStyleAnimType_EnumU8)
 CSS_PROP_DISPLAY(
     position,
     position,
     Position,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mPosition,
-    0,
+    VARIANT_HK,
     kPositionKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_QUOTES(
     quotes,
     quotes,
     Quotes,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -2342,38 +2371,38 @@ CSS_PROP_QUOTES(
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     resize,
     resize,
     Resize,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mResize,
-    0,
+    VARIANT_HK,
     kResizeKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKENDONLY(
     richness,
     richness,
     Richness,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mRichness,
-    0,
+    VARIANT_HN,
     nsnull)
 CSS_PROP_POSITION(
     right,
     right,
     Right,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mOffset.mRight,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mOffset),
     eStyleAnimType_Sides_Right)
 CSS_PROP_BACKENDONLY(
     size,
     size,
     Size,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -2383,82 +2412,84 @@ CSS_PROP_BACKENDONLY(
     kPageSizeKTable)
 CSS_PROP_BACKENDONLY(
     speak,
     speak,
     Speak,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mSpeak,
-    0,
+    VARIANT_HK,
     kSpeakKTable)
 CSS_PROP_BACKENDONLY(
     speak-header,
     speak_header,
     SpeakHeader,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mSpeakHeader,
-    0,
+    VARIANT_HK,
     kSpeakHeaderKTable)
 CSS_PROP_BACKENDONLY(
     speak-numeral,
     speak_numeral,
     SpeakNumeral,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mSpeakNumeral,
-    0,
+    VARIANT_HK,
     kSpeakNumeralKTable)
 CSS_PROP_BACKENDONLY(
     speak-punctuation,
     speak_punctuation,
     SpeakPunctuation,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mSpeakPunctuation,
-    0,
+    VARIANT_HK,
     kSpeakPunctuationKTable)
 CSS_PROP_BACKENDONLY(
     speech-rate,
     speech_rate,
     SpeechRate,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mSpeechRate,
-    0,
+    VARIANT_HN | VARIANT_KEYWORD,
     kSpeechRateKTable)
 CSS_PROP_BACKENDONLY(
     stress,
     stress,
     Stress,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mStress,
-    0,
+    VARIANT_HN,
     nsnull)
 CSS_PROP_TABLE(
     table-layout,
     table_layout,
     TableLayout,
     CSS_PROPERTY_PARSE_VALUE,
     Table,
     mLayout,
-    0,
+    VARIANT_HK,
     kTableLayoutKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_TEXT(
     text-align,
     text_align,
     TextAlign,
     CSS_PROPERTY_PARSE_VALUE,
     Text,
     mTextAlign,
-    0,
+    // When we support aligning on a string, we can parse text-align
+    // as a string....
+    VARIANT_HK /* | VARIANT_STRING */,
     kTextAlignKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_TEXTRESET(
     text-decoration,
     text_decoration,
     TextDecoration,
     CSS_PROPERTY_PARSE_VALUE |
@@ -2473,17 +2504,17 @@ CSS_PROP_TEXTRESET(
 CSS_PROP_TEXT(
     text-indent,
     text_indent,
     TextIndent,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     Text,
     mTextIndent,
-    0,
+    VARIANT_HLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleText, mTextIndent),
     eStyleAnimType_Coord)
 CSS_PROP_TEXT(
     text-shadow,
     text_shadow,
     TextShadow,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -2499,17 +2530,17 @@ CSS_PROP_TEXT(
 CSS_PROP_TEXT(
     text-transform,
     text_transform,
     TextTransform,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Text,
     mTextTransform,
-    0,
+    VARIANT_HK,
     kTextTransformKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_DISPLAY(
     -moz-transform,
     _moz_transform,
     MozTransform,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -2534,17 +2565,17 @@ CSS_PROP_DISPLAY(
 CSS_PROP_POSITION(
     top,
     top,
     Top,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mOffset.mTop,
-    0,
+    VARIANT_AHLP | VARIANT_CALC,
     nsnull,
     offsetof(nsStylePosition, mOffset),
     eStyleAnimType_Sides_Top)
 CSS_PROP_SHORTHAND(
     -moz-transition,
     transition,
     MozTransition,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -2598,88 +2629,88 @@ CSS_PROP_DISPLAY(
     eStyleAnimType_None)
 CSS_PROP_TEXTRESET(
     unicode-bidi,
     unicode_bidi,
     UnicodeBidi,
     CSS_PROPERTY_PARSE_VALUE,
     Text,
     mUnicodeBidi,
-    0,
+    VARIANT_HK,
     kUnicodeBidiKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_USERINTERFACE(
     -moz-user-focus,
     user_focus,
     MozUserFocus,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mUserFocus,
-    0,
+    VARIANT_HK,
     kUserFocusKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_USERINTERFACE(
     -moz-user-input,
     user_input,
     MozUserInput,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mUserInput,
-    0,
+    VARIANT_HK,
     kUserInputKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX ??? // XXX bug 3935
 CSS_PROP_USERINTERFACE(
     -moz-user-modify,
     user_modify,
     MozUserModify,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mUserModify,
-    0,
+    VARIANT_HK,
     kUserModifyKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_UIRESET(
     -moz-user-select,
     user_select,
     MozUserSelect,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mUserSelect,
-    0,
+    VARIANT_HK,
     kUserSelectKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 // NOTE: vertical-align is only supposed to apply to :first-letter when
 // 'float' is 'none', but we don't worry about that since it has no
 // effect otherwise
 CSS_PROP_TEXTRESET(
     vertical-align,
     vertical_align,
     VerticalAlign,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_STORES_CALC,
     Text,
     mVerticalAlign,
-    0,
+    VARIANT_HKLP | VARIANT_CALC,
     kVerticalAlignKTable,
     offsetof(nsStyleTextReset, mVerticalAlign),
     eStyleAnimType_Coord)
 CSS_PROP_VISIBILITY(
     visibility,
     visibility,
     Visibility,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mVisibility,
-    0,
+    VARIANT_HK,
     kVisibilityKTable,
     offsetof(nsStyleVisibility, mVisible),
     eStyleAnimType_EnumU8)  // reflow for collapse
 CSS_PROP_BACKENDONLY(
     voice-family,
     voice_family,
     VoiceFamily,
     CSS_PROPERTY_PARSE_VALUE |
@@ -2690,183 +2721,189 @@ CSS_PROP_BACKENDONLY(
     nsnull)
 CSS_PROP_BACKENDONLY(
     volume,
     volume,
     Volume,
     CSS_PROPERTY_PARSE_VALUE,
     Aural,
     mVolume,
-    0,
+    VARIANT_HPN | VARIANT_KEYWORD,
     kVolumeKTable)
 CSS_PROP_TEXT(
     white-space,
     white_space,
     WhiteSpace,
     CSS_PROPERTY_PARSE_VALUE,
     Text,
     mWhiteSpace,
-    0,
+    VARIANT_HK,
     kWhitespaceKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKENDONLY(
     widows,
     widows,
     Widows,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_POSITIVE_NONZERO,
     Breaks,
     mWidows,
-    0,
+    VARIANT_HI,
     nsnull)
 CSS_PROP_POSITION(
     width,
     width,
     Width,
     CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE |
         CSS_PROPERTY_STORES_CALC,
     Position,
     mWidth,
-    0,
+    VARIANT_AHKLP | VARIANT_CALC,
     kWidthKTable,
     offsetof(nsStylePosition, mWidth),
     eStyleAnimType_Coord)
 CSS_PROP_UIRESET(
     -moz-window-shadow,
     _moz_window_shadow,
     MozWindowShadow,
     CSS_PROPERTY_PARSE_VALUE,
     UserInterface,
     mWindowShadow,
-    0,
+    VARIANT_HK,
     kWindowShadowKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_TEXT(
     word-spacing,
     word_spacing,
     WordSpacing,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Text,
     mWordSpacing,
-    0,
+    VARIANT_HL | VARIANT_NORMAL | VARIANT_CALC,
     nsnull,
     offsetof(nsStyleText, mWordSpacing),
     eStyleAnimType_nscoord)
 CSS_PROP_TEXT(
     word-wrap,
     word_wrap,
     WordWrap,
     CSS_PROPERTY_PARSE_VALUE,
     Text,
     mWordWrap,
-    0,
+    VARIANT_HK,
     kWordwrapKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_POSITION(
     z-index,
     z_index,
     ZIndex,
     CSS_PROPERTY_PARSE_VALUE,
     Position,
     mZIndex,
-    0,
+    VARIANT_AHI,
     nsnull,
     offsetof(nsStylePosition, mZIndex),
     eStyleAnimType_Coord)
 CSS_PROP_XUL(
     -moz-box-align,
     box_align,
     MozBoxAlign,
     CSS_PROPERTY_PARSE_VALUE,
     XUL,
     mBoxAlign,
-    0,
+    VARIANT_HK,
     kBoxAlignKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_XUL(
     -moz-box-direction,
     box_direction,
     MozBoxDirection,
     CSS_PROPERTY_PARSE_VALUE,
     XUL,
     mBoxDirection,
-    0,
+    VARIANT_HK,
     kBoxDirectionKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_XUL(
     -moz-box-flex,
     box_flex,
     MozBoxFlex,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     XUL,
     mBoxFlex,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleXUL, mBoxFlex),
     eStyleAnimType_float) // XXX bug 3935
 CSS_PROP_XUL(
     -moz-box-orient,
     box_orient,
     MozBoxOrient,
     CSS_PROPERTY_PARSE_VALUE,
     XUL,
     mBoxOrient,
-    0,
+    VARIANT_HK,
     kBoxOrientKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_XUL(
     -moz-box-pack,
     box_pack,
     MozBoxPack,
     CSS_PROPERTY_PARSE_VALUE,
     XUL,
     mBoxPack,
-    0,
+    VARIANT_HK,
     kBoxPackKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_XUL(
     -moz-box-ordinal-group,
     box_ordinal_group,
     MozBoxOrdinalGroup,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_POSITIVE_NONZERO,
     XUL,
     mBoxOrdinal,
-    0,
+    VARIANT_HI,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_XUL(
     -moz-stack-sizing,
     stack_sizing,
     MozStackSizing,
     CSS_PROPERTY_PARSE_VALUE,
     XUL,
     mStackSizing,
-    0,
+    VARIANT_HK,
     kStackSizingKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 
 #ifdef MOZ_MATHML
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_FONT(
     -moz-script-level,
     script_level,
     ScriptLevel,
     CSS_PROPERTY_PARSE_VALUE,
     Font,
     mScriptLevel,
-    0,
+    // script-level can take Integer or Number values, but only Integer
+    // ("relative") values can be specified in a style sheet.
+    VARIANT_HI,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_FONT(
     -moz-script-size-multiplier,
     script_size_multiplier,
     ScriptSizeMultiplier,
     CSS_PROPERTY_PARSE_VALUE,
@@ -2892,61 +2929,61 @@ CSS_PROP_FONT(
 
 CSS_PROP_SVGRESET(
     clip-path,
     clip_path,
     ClipPath,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mClipPath,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVG(
     clip-rule,
     clip_rule,
     ClipRule,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mClipRule,
-    0,
+    VARIANT_HK,
     kFillRuleKTable,
     offsetof(nsStyleSVG, mClipRule),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     color-interpolation,
     color_interpolation,
     ColorInterpolation,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mColorInterpolation,
-    0,
+    VARIANT_HK,
     kColorInterpolationKTable,
     offsetof(nsStyleSVG, mColorInterpolation),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     color-interpolation-filters,
     color_interpolation_filters,
     ColorInterpolationFilters,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mColorInterpolationFilters,
-    0,
+    VARIANT_HK,
     kColorInterpolationKTable,
     offsetof(nsStyleSVG, mColorInterpolationFilters),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVGRESET(
     dominant-baseline,
     dominant_baseline,
     DominantBaseline,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mDominantBaseline,
-    0,
+    VARIANT_HK,
     kDominantBaselineKTable,
     offsetof(nsStyleSVGReset, mDominantBaseline),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     fill,
     fill,
     Fill,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -2958,165 +2995,165 @@ CSS_PROP_SVG(
     eStyleAnimType_PaintServer)
 CSS_PROP_SVG(
     fill-opacity,
     fill_opacity,
     FillOpacity,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mFillOpacity,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleSVG, mFillOpacity),
     eStyleAnimType_float)
 CSS_PROP_SVG(
     fill-rule,
     fill_rule,
     FillRule,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mFillRule,
-    0,
+    VARIANT_HK,
     kFillRuleKTable,
     offsetof(nsStyleSVG, mFillRule),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVGRESET(
     filter,
     filter,
     Filter,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mFilter,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVGRESET(
     flood-color,
     flood_color,
     FloodColor,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mFloodColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleSVGReset, mFloodColor),
     eStyleAnimType_Color)
 CSS_PROP_SVGRESET(
     flood-opacity,
     flood_opacity,
     FloodOpacity,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mFloodOpacity,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleSVGReset, mFloodOpacity),
     eStyleAnimType_float)
 CSS_PROP_SVG(
     image-rendering,
     image_rendering,
     ImageRendering,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mImageRendering,
-    0,
+    VARIANT_HK,
     kImageRenderingKTable,
     offsetof(nsStyleSVG, mImageRendering),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVGRESET(
     lighting-color,
     lighting_color,
     LightingColor,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mLightingColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleSVGReset, mLightingColor),
     eStyleAnimType_Color)
 CSS_PROP_SHORTHAND(
     marker,
     marker,
     Marker,
     CSS_PROPERTY_PARSE_FUNCTION)
 CSS_PROP_SVG(
     marker-end,
     marker_end,
     MarkerEnd,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mMarkerEnd,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVG(
     marker-mid,
     marker_mid,
     MarkerMid,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mMarkerMid,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVG(
     marker-start,
     marker_start,
     MarkerStart,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mMarkerStart,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVGRESET(
     mask,
     mask,
     Mask,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mMask,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SVG(
     shape-rendering,
     shape_rendering,
     ShapeRendering,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mShapeRendering,
-    0,
+    VARIANT_HK,
     kShapeRenderingKTable,
     offsetof(nsStyleSVG, mShapeRendering),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVGRESET(
     stop-color,
     stop_color,
     StopColor,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStopColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleSVGReset, mStopColor),
     eStyleAnimType_Color)
 CSS_PROP_SVGRESET(
     stop-opacity,
     stop_opacity,
     StopOpacity,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStopOpacity,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleSVGReset, mStopOpacity),
     eStyleAnimType_float)
 CSS_PROP_SVG(
     stroke,
     stroke,
     Stroke,
     CSS_PROPERTY_PARSE_FUNCTION,
@@ -3140,94 +3177,96 @@ CSS_PROP_SVG(
     eStyleAnimType_Custom)
 CSS_PROP_SVG(
     stroke-dashoffset,
     stroke_dashoffset,
     StrokeDashoffset,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStrokeDashoffset,
-    0,
+    VARIANT_HLPN,
     nsnull,
     offsetof(nsStyleSVG, mStrokeDashoffset),
     eStyleAnimType_Coord)
 CSS_PROP_SVG(
     stroke-linecap,
     stroke_linecap,
     StrokeLinecap,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStrokeLinecap,
-    0,
+    VARIANT_HK,
     kStrokeLinecapKTable,
     offsetof(nsStyleSVG, mStrokeLinecap),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     stroke-linejoin,
     stroke_linejoin,
     StrokeLinejoin,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStrokeLinejoin,
-    0,
+    VARIANT_HK,
     kStrokeLinejoinKTable,
     offsetof(nsStyleSVG, mStrokeLinejoin),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     stroke-miterlimit,
     stroke_miterlimit,
     StrokeMiterlimit,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_AT_LEAST_ONE,
     SVG,
     mStrokeMiterlimit,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleSVG, mStrokeMiterlimit),
     eStyleAnimType_float)
 CSS_PROP_SVG(
     stroke-opacity,
     stroke_opacity,
     StrokeOpacity,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mStrokeOpacity,
-    0,
+    VARIANT_HN,
     nsnull,
     offsetof(nsStyleSVG, mStrokeOpacity),
     eStyleAnimType_float)
 CSS_PROP_SVG(
     stroke-width,
     stroke_width,
     StrokeWidth,
-    CSS_PROPERTY_PARSE_VALUE,
+    CSS_PROPERTY_PARSE_VALUE |
+        CSS_PROPERTY_VALUE_NONNEGATIVE,
     SVG,
     mStrokeWidth,
-    0,
+    VARIANT_HLPN,
     nsnull,
     offsetof(nsStyleSVG, mStrokeWidth),
     eStyleAnimType_Coord)
 CSS_PROP_SVG(
     text-anchor,
     text_anchor,
     TextAnchor,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mTextAnchor,
-    0,
+    VARIANT_HK,
     kTextAnchorKTable,
     offsetof(nsStyleSVG, mTextAnchor),
     eStyleAnimType_EnumU8)
 CSS_PROP_SVG(
     text-rendering,
     text_rendering,
     TextRendering,
     CSS_PROPERTY_PARSE_VALUE,
     SVG,
     mTextRendering,
-    0,
+    VARIANT_HK,
     kTextRenderingKTable,
     offsetof(nsStyleSVG, mTextRendering),
     eStyleAnimType_EnumU8)
 
 // Callers that want information on the properties that are in
 // the style structs but not in the nsCSS* structs should define
 // |CSS_PROP_INCLUDE_NOT_CSS|.  (Some of these are also in nsRuleData*,
 // and a distinction might be needed at some point.)
diff --git a/layout/style/nsCSSProps.h b/layout/style/nsCSSProps.h
--- a/layout/style/nsCSSProps.h
+++ b/layout/style/nsCSSProps.h
@@ -99,16 +99,29 @@
 #define CSS_PROPERTY_PARSE_PROPERTY_MASK          (3<<9)
 #define CSS_PROPERTY_PARSE_INACCESSIBLE           (0<<9)
 #define CSS_PROPERTY_PARSE_FUNCTION               (1<<9)
 #define CSS_PROPERTY_PARSE_VALUE                  (2<<9)
 
 // See CSSParserImpl::ParseSingleValueProperty
 #define CSS_PROPERTY_VALUE_PARSER_FUNCTION        (1<<11)
 
+#define CSS_PROPERTY_VALUE_RESTRICTION_MASK       (3<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be 0 or larger.
+#define CSS_PROPERTY_VALUE_NONNEGATIVE            (1<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be greater than 0.
+#define CSS_PROPERTY_VALUE_POSITIVE_NONZERO       (2<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be 1 or larger.
+#define CSS_PROPERTY_VALUE_AT_LEAST_ONE           (3<<12)
+
+// NOTE: next free bit is (1<<14)
+
 /**
  * Types of animatable values.
  */
 enum nsStyleAnimType {
   // requires a custom implementation in
   // nsStyleAnimation::ExtractComputedValue
   eStyleAnimType_Custom,
 
@@ -220,16 +233,36 @@ public:
   static inline PRUint32 ParsePropertyFlags(nsCSSProperty aProperty)
   {
     NS_ABORT_IF_FALSE(0 <= aProperty && aProperty < eCSSProperty_COUNT,
                       "out of range");
     return nsCSSProps::kFlagsTable[aProperty] &
            CSS_PROPERTY_PARSE_PROPERTY_MASK;
   }
 
+  static inline PRUint32 ValueRestrictions(nsCSSProperty aProperty)
+  {
+    NS_ABORT_IF_FALSE(0 <= aProperty && aProperty < eCSSProperty_COUNT,
+                      "out of range");
+    return nsCSSProps::kFlagsTable[aProperty] &
+           CSS_PROPERTY_VALUE_RESTRICTION_MASK;
+  }
+
+private:
+  // Lives in nsCSSParser.cpp for the macros it depends on.
+  static const PRUint32 kParserVariantTable[eCSSProperty_COUNT_no_shorthands];
+
+public:
+  static inline PRUint32 ParserVariant(nsCSSProperty aProperty) {
+    NS_ABORT_IF_FALSE(0 <= aProperty &&
+                      aProperty < eCSSProperty_COUNT_no_shorthands,
+                      "out of range");
+    return nsCSSProps::kParserVariantTable[aProperty];
+  }
+
 private:
   // A table for shorthand properties.  The appropriate index is the
   // property ID minus eCSSProperty_COUNT_no_shorthands.
   static const nsCSSProperty *const
     kSubpropertyTable[eCSSProperty_COUNT - eCSSProperty_COUNT_no_shorthands];
 
 public:
   static inline

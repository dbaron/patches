From: L. David Baron <dbaron@dbaron.org>

Drive the ParseVariant calls in ParseSingleValueProperty from data rather than a big switch.

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -5445,16 +5445,21 @@ CSSParserImpl::ParsePropertyByFunction(n
 #define BG_RIGHT   NS_STYLE_BG_POSITION_RIGHT
 #define BG_CTB    (BG_CENTER | BG_TOP | BG_BOTTOM)
 #define BG_CLR    (BG_CENTER | BG_LEFT | BG_RIGHT)
 
 PRBool
 CSSParserImpl::ParseSingleValueProperty(nsCSSValue& aValue,
                                         nsCSSProperty aPropID)
 {
+  if (aPropID < 0 || aPropID > eCSSProperty_COUNT_no_shorthands) {
+    NS_ABORT_IF_FALSE(PR_FALSE, "not a single value property");
+    return PR_FALSE;
+  }
+
   if (nsCSSProps::PropHasFlags(aPropID, CSS_PROPERTY_VALUE_PARSER_FUNCTION)) {
     switch (aPropID) {
       case eCSSProperty_azimuth:
         return ParseAzimuth(aValue);
       case eCSSProperty_font_family:
       case eCSSProperty_voice_family:
         return ParseFamily(aValue);
       case eCSSProperty_font_weight:
@@ -5462,76 +5467,44 @@ CSSParserImpl::ParseSingleValueProperty(
       case eCSSProperty_text_decoration:
         return ParseTextDecoration(aValue);
       default:
     }
     NS_ABORT_IF_FALSE(PR_FALSE, "should not reach here");
     return PR_FALSE;
   }
 
+  PRUint32 variant = nsCSSProps::ParserVariant(aPropID);
+  if (variant == 0) {
+    NS_ABORT_IF_FALSE(PR_FALSE, "not a single value property");
+    return PR_FALSE;
+  }
+
+  const PRUint32 *kwtable = nsCSSProps::kKeywordTableTable[aPropID];
+  switch (nsCSSProps::ValueRestrictions(aPropID)) {
+    default:
+      NS_ABORT_IF_FALSE(PR_FALSE, "should not be reached");
+    case 0:
+      return ParseVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_NONNEGATIVE:
+      return ParseNonnegativeVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_POSITIVE_NONZERO:
+      return ParsePositiveNonZeroVariant(aValue, variant, kwtable);
+    case CSS_PROPERTY_VALUE_AT_LEAST_ONE:
+      NS_ABORT_IF_FALSE((aVariantMask & ~(VARIANT_ALL_NONNUMERIC |
+                                          VARIANT_NUMBER)) == 0,
+                        "need to update code to handle additional variants");
+      if (!ParseVariant(aValue, variant, kwtable))
+        return PR_FALSE;
+      // Enforce the restriction that the value is greater than 1.
+      return aValue.GetUnit() != eCSSUnit_Number || 
+             aValue.GetFloatValue() >= 1.0f;
+  }
+
   switch (aPropID) {
-  case eCSSProperty_appearance:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kAppearanceKTable);
-  case eCSSProperty_background_attachment:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundAttachmentKTable);
-  case eCSSProperty_background_clip:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundOriginKTable);
-  case eCSSProperty_background_color:
-    return ParseVariant(aValue, VARIANT_HC, nsnull);
-  case eCSSProperty_background_image:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_IMAGE, nsnull);
-  case eCSSProperty__moz_background_inline_policy:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBackgroundInlinePolicyKTable);
-  case eCSSProperty_background_origin:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundOriginKTable);
-  case eCSSProperty_background_repeat:
-    // Used only internally.
-    return ParseVariant(aValue, VARIANT_KEYWORD,
-                        nsCSSProps::kBackgroundRepeatKTable);
-  case eCSSProperty_binding:
-    return ParseVariant(aValue, VARIANT_HUO, nsnull);
-  case eCSSProperty_border_collapse:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBorderCollapseKTable);
-  case eCSSProperty_border_bottom_color:
-  case eCSSProperty_border_end_color_value: // for internal use
-  case eCSSProperty_border_left_color_value: // for internal use
-  case eCSSProperty_border_right_color_value: // for internal use
-  case eCSSProperty_border_start_color_value: // for internal use
-  case eCSSProperty_border_top_color:
-  case eCSSProperty__moz_column_rule_color:
-    return ParseVariant(aValue, VARIANT_HCK,
-                        nsCSSProps::kBorderColorKTable);
-  case eCSSProperty_border_bottom_style:
-  case eCSSProperty_border_end_style_value: // for internal use
-  case eCSSProperty_border_left_style_value: // for internal use
-  case eCSSProperty_border_right_style_value: // for internal use
-  case eCSSProperty_border_start_style_value: // for internal use
-  case eCSSProperty_border_top_style:
-  case eCSSProperty__moz_column_rule_style:
-    return ParseVariant(aValue, VARIANT_HK,
-                        nsCSSProps::kBorderStyleKTable);
-  case eCSSProperty_border_bottom_width:
-  case eCSSProperty_border_end_width_value: // for internal use
-  case eCSSProperty_border_left_width_value: // for internal use
-  case eCSSProperty_border_right_width_value: // for internal use
-  case eCSSProperty_border_start_width_value: // for internal use
-  case eCSSProperty_border_top_width:
-  case eCSSProperty__moz_column_rule_width:
-    return ParseNonNegativeVariant(aValue, VARIANT_HKL | VARIANT_CALC,
-                                   nsCSSProps::kBorderWidthKTable);
   case eCSSProperty__moz_column_count:
     // Need to reject 0 in addition to negatives.  If we accept 0, we
     // need to change NS_STYLE_COLUMN_COUNT_AUTO to something else.
     return ParsePositiveNonZeroVariant(aValue, VARIANT_AHI, nsnull);
   case eCSSProperty__moz_column_width:
     return ParseNonNegativeVariant(aValue, VARIANT_AHL | VARIANT_CALC, nsnull);
   case eCSSProperty__moz_column_gap:
     return ParseNonNegativeVariant(aValue, VARIANT_HL | VARIANT_NORMAL |
diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -292,17 +292,17 @@
 
 CSS_PROP_DISPLAY(
     -moz-appearance,
     appearance,
     MozAppearance,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mAppearance,
-    0,
+    VARIANT_HK,
     kAppearanceKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     -moz-outline-radius,
     _moz_outline_radius,
     MozOutlineRadius,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -397,83 +397,83 @@ CSS_PROP_BACKGROUND(
     background-attachment,
     background_attachment,
     BackgroundAttachment,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackAttachment,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundAttachmentKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-clip,
     background_clip,
     BackgroundClip,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackClip,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundOriginKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-color,
     background_color,
     BackgroundColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Color,
     mBackColor,
-    0,
+    VARIANT_HC,
     nsnull,
     offsetof(nsStyleBackground, mBackgroundColor),
     eStyleAnimType_Color)
 CSS_PROP_BACKGROUND(
     background-image,
     background_image,
     BackgroundImage,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_START_IMAGE_LOADS,
     Color,
     mBackImage,
-    0,
+    VARIANT_IMAGE, // used only internally
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     -moz-background-inline-policy,
     _moz_background_inline_policy,
     MozBackgroundInlinePolicy,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Color,
     mBackInlinePolicy,
-    0,
+    VARIANT_HK,
     kBackgroundInlinePolicyKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-origin,
     background_origin,
     BackgroundOrigin,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackOrigin,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundOriginKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-position,
     background_position,
     BackgroundPosition,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -490,17 +490,17 @@ CSS_PROP_BACKGROUND(
     background-repeat,
     background_repeat,
     BackgroundRepeat,
     CSS_PROPERTY_PARSE_FUNCTION |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE |
         CSS_PROPERTY_VALUE_LIST_USES_COMMAS,
     Color,
     mBackRepeat,
-    0,
+    VARIANT_KEYWORD, // used only internally
     kBackgroundRepeatKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BACKGROUND(
     background-size,
     background_size,
     BackgroundSize,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -515,17 +515,17 @@ CSS_PROP_BACKGROUND(
     eStyleAnimType_Custom)
 CSS_PROP_DISPLAY(
     -moz-binding,
     binding,
     MozBinding,
     CSS_PROPERTY_PARSE_VALUE,
     Display,
     mBinding,
-    0,
+    VARIANT_HUO,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None) // XXX bug 3935
 CSS_PROP_SHORTHAND(
     border,
     border,
     Border,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -538,17 +538,17 @@ CSS_PROP_BORDER(
     border-bottom-color,
     border_bottom_color,
     BorderBottomColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mBottom,
-    0,
+    VARIANT_HCK,
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-bottom-colors,
     border_bottom_colors,
     MozBorderBottomColors,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -563,40 +563,40 @@ CSS_PROP_BORDER(
 CSS_PROP_BORDER(
     border-bottom-style,
     border_bottom_style,
     BorderBottomStyle,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStyle.mBottom,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)  // on/off will need reflow
 CSS_PROP_BORDER(
     border-bottom-width,
     border_bottom_width,
     BorderBottomWidth,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mBottom,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_TABLEBORDER(
     border-collapse,
     border_collapse,
     BorderCollapse,
     CSS_PROPERTY_PARSE_VALUE,
     Table,
     mBorderCollapse,
-    0,
+    VARIANT_HK,
     kBorderCollapseKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_SHORTHAND(
     border-color,
     border_color,
     BorderColor,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -614,17 +614,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-end-color-value,
     border_end_color_value,
     MozBorderEndColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndColor,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-end-style,
     border_end_style,
     MozBorderEndStyle,
@@ -633,17 +633,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-end-style-value,
     border_end_style_value,
     MozBorderEndStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndStyle,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-end-width,
     border_end_width,
     MozBorderEndWidth,
@@ -652,17 +652,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-end-width-value,
     border_end_width_value,
     MozBorderEndWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderEndWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_BORDER(
     -moz-border-image,
     border_image,
     MozBorderImage,
@@ -692,17 +692,17 @@ CSS_PROP_BORDER(
     border_left_color_value,
     BorderLeftColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderColor.mLeft,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-color-ltr-source,
     border_left_color_ltr_source,
     BorderLeftColorLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -753,17 +753,17 @@ CSS_PROP_BORDER(
     border-left-style-value,
     border_left_style_value,
     BorderLeftStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderStyle.mLeft,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BORDER(
     border-left-style-ltr-source,
     border_left_style_ltr_source,
     BorderLeftStyleLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -799,17 +799,17 @@ CSS_PROP_BORDER(
     border-left-width-value,
     border_left_width_value,
     BorderLeftWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderWidth.mLeft,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-left-width-ltr-source,
     border_left_width_ltr_source,
     BorderLeftWidthLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -851,17 +851,17 @@ CSS_PROP_BORDER(
     border_right_color_value,
     BorderRightColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderColor.mRight,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-color-ltr-source,
     border_right_color_ltr_source,
     BorderRightColorLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -912,17 +912,17 @@ CSS_PROP_BORDER(
     border-right-style-value,
     border_right_style_value,
     BorderRightStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderStyle.mRight,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_BORDER(
     border-right-style-ltr-source,
     border_right_style_ltr_source,
     BorderRightStyleLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -958,17 +958,17 @@ CSS_PROP_BORDER(
     border-right-width-value,
     border_right_width_value,
     BorderRightWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_REPORT_OTHER_NAME,
     Margin,
     mBorderWidth.mRight,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     border-right-width-ltr-source,
     border_right_width_ltr_source,
     BorderRightWidthLTRSource,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
@@ -1019,17 +1019,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-start-color-value,
     border_start_color_value,
     BorderStartColorValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartColor,
-    0,
+    VARIANT_HCK, // used only internally
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-start-style,
     border_start_style,
     MozBorderStartStyle,
@@ -1038,17 +1038,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-start-style-value,
     border_start_style_value,
     BorderStartStyleValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartStyle,
-    0,
+    VARIANT_HK, // used only internally
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     -moz-border-start-width,
     border_start_width,
     MozBorderStartWidth,
@@ -1057,17 +1057,17 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_BORDER(
     border-start-width-value,
     border_start_width_value,
     BorderStartWidthValue,
     CSS_PROPERTY_PARSE_INACCESSIBLE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStartWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 #endif
 CSS_PROP_SHORTHAND(
     border-style,
     border_style,
     BorderStyle,
@@ -1081,17 +1081,17 @@ CSS_PROP_BORDER(
     border-top-color,
     border_top_color,
     BorderTopColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Margin,
     mBorderColor.mTop,
-    0,
+    VARIANT_HCK,
     kBorderColorKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_BORDER(
     -moz-border-top-colors,
     border_top_colors,
     MozBorderTopColors,
     CSS_PROPERTY_PARSE_FUNCTION |
@@ -1106,29 +1106,29 @@ CSS_PROP_BORDER(
 CSS_PROP_BORDER(
     border-top-style,
     border_top_style,
     BorderTopStyle,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderStyle.mTop,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)  // on/off will need reflow
 CSS_PROP_BORDER(
     border-top-width,
     border_top_width,
     BorderTopWidth,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_APPLIES_TO_FIRST_LETTER,
     Margin,
     mBorderWidth.mTop,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_SHORTHAND(
     border-width,
     border_width,
     BorderWidth,
     CSS_PROPERTY_PARSE_FUNCTION)
@@ -1325,39 +1325,39 @@ CSS_PROP_SHORTHAND(
 CSS_PROP_COLUMN(
     -moz-column-rule-color,
     _moz_column_rule_color,
     MozColumnRuleColor,
     CSS_PROPERTY_PARSE_VALUE |
         CSS_PROPERTY_IGNORED_WHEN_COLORS_DISABLED,
     Column,
     mColumnRuleColor,
-    0,
+    VARIANT_HCK,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_COLUMN(
     -moz-column-rule-style,
     _moz_column_rule_style,
     MozColumnRuleStyle,
     CSS_PROPERTY_PARSE_VALUE,
     Column,
     mColumnRuleStyle,
-    0,
+    VARIANT_HK,
     kBorderStyleKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
 CSS_PROP_COLUMN(
     -moz-column-rule-width,
     _moz_column_rule_width,
     MozColumnRuleWidth,
     CSS_PROPERTY_PARSE_VALUE,
     Column,
     mColumnRuleWidth,
-    0,
+    VARIANT_HKL | VARIANT_CALC,
     kBorderWidthKTable,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_Custom)
 CSS_PROP_CONTENT(
     content,
     content,
     Content,
     CSS_PROPERTY_PARSE_FUNCTION |
diff --git a/layout/style/nsCSSProps.cpp b/layout/style/nsCSSProps.cpp
--- a/layout/style/nsCSSProps.cpp
+++ b/layout/style/nsCSSProps.cpp
@@ -1605,16 +1605,26 @@ const PRUint32 nsCSSProps::kFlagsTable[e
   flags_,
 #include "nsCSSPropList.h"
 #undef CSS_PROP
 #define CSS_PROP_SHORTHAND(name_, id_, method_, flags_) flags_,
 #include "nsCSSPropList.h"
 #undef CSS_PROP_SHORTHAND
 };
 
+const PRUint32
+nsCSSProps::kParserVariantTable[eCSSProperty_COUNT_no_shorthands] = {
+#define CSS_PROP(name_, id_, method_, flags_, datastruct_, member_,            \
+                 parsevariant_, kwtable_, stylestruct_, stylestructoffset_,    \
+                 animtype_)                                                    \
+  parsevariant_,
+#include "nsCSSPropList.h"
+#undef CSS_PROP
+};
+
 static const nsCSSProperty gBorderRadiusSubpropTable[] = {
   // Code relies on these being in topleft-topright-bottomright-bottomleft
   // order.
   eCSSProperty_border_top_left_radius,
   eCSSProperty_border_top_right_radius,
   eCSSProperty_border_bottom_right_radius,
   eCSSProperty_border_bottom_left_radius,
   eCSSProperty_UNKNOWN
diff --git a/layout/style/nsCSSProps.h b/layout/style/nsCSSProps.h
--- a/layout/style/nsCSSProps.h
+++ b/layout/style/nsCSSProps.h
@@ -99,16 +99,29 @@
 #define CSS_PROPERTY_PARSE_PROPERTY_MASK          (3<<9)
 #define CSS_PROPERTY_PARSE_INACCESSIBLE           (0<<9)
 #define CSS_PROPERTY_PARSE_FUNCTION               (1<<9)
 #define CSS_PROPERTY_PARSE_VALUE                  (2<<9)
 
 // See CSSParserImpl::ParseSingleValueProperty
 #define CSS_PROPERTY_VALUE_PARSER_FUNCTION        (1<<11)
 
+#define CSS_PROPERTY_VALUE_RESTRICTION_MASK       (3<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be 0 or larger.
+#define CSS_PROPERTY_VALUE_NONNEGATIVE            (1<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be greater than 0.
+#define CSS_PROPERTY_VALUE_POSITIVE_NONZERO       (2<<12)
+// The parser (in particular, CSSParserImpl::ParseSingleValueProperty)
+// should enforce that the value of this property must be 1 or larger.
+#define CSS_PROPERTY_VALUE_AT_LEAST_ONE           (3<<12)
+
+// NOTE: next free bit is (1<<14)
+
 /**
  * Types of animatable values.
  */
 enum nsStyleAnimType {
   // requires a custom implementation in
   // nsStyleAnimation::ExtractComputedValue
   eStyleAnimType_Custom,
 
@@ -220,16 +233,34 @@ public:
   static inline PRUint32 ParsePropertyFlags(nsCSSProperty aProperty)
   {
     NS_ABORT_IF_FALSE(0 <= aProperty && aProperty < eCSSProperty_COUNT,
                       "out of range");
     return nsCSSProps::kFlagsTable[aProperty] &
            CSS_PROPERTY_PARSE_PROPERTY_MASK;
   }
 
+  static inline PRUint32 ValueRestrictions(nsCSSProperty aProperty)
+  {
+    NS_ABORT_IF_FALSE(0 <= aProperty && aProperty < eCSSProperty_COUNT,
+                      "out of range");
+    return nsCSSProps::kFlagsTable[aProperty] &
+           CSS_PROPERTY_VALUE_RESTRICTION_MASK;
+  }
+
+private:
+  static const PRUint32 kParserVariantTable[eCSSProperty_COUNT_no_shorthands];
+
+  static inline PRUint32 ParserVariant(nsCSSProperty aProperty) {
+    NS_ABORT_IF_FALSE(0 <= aProperty &&
+                      aProperty < eCSSProperty_COUNT_no_shorthands,
+                      "out of range");
+    return nsCSSProps::kParserVariantTable[aProperty];
+  }
+
 private:
   // A table for shorthand properties.  The appropriate index is the
   // property ID minus eCSSProperty_COUNT_no_shorthands.
   static const nsCSSProperty *const
     kSubpropertyTable[eCSSProperty_COUNT - eCSSProperty_COUNT_no_shorthands];
 
 public:
   static inline

Use SimpleTest.executeSoon instead of setTimeout for iteration of properties/descriptors.

diff --git a/layout/style/test/test_descriptor_storage.html b/layout/style/test/test_descriptor_storage.html
--- a/layout/style/test/test_descriptor_storage.html
+++ b/layout/style/test/test_descriptor_storage.html
@@ -94,34 +94,34 @@ function test_descriptor(descriptor)
 
 // To avoid triggering the slow script dialog, we have to test one
 // descriptor at a time.
 SimpleTest.waitForExplicitFinish();
 var descs = [];
 for (var desc in gCSSFontFaceDescriptors)
   descs.push(desc);
 descs = descs.reverse();
-function do_one(l) {
-  if (l.length == 0) {
+function do_one() {
+  if (descs.length == 0) {
     // SimpleTest.finish() is really slow, so we have to disable the
     // slow script dialog for this part
     netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
     var prefService = Components.classes["@mozilla.org/preferences-service;1"].
                         getService(Components.interfaces.nsIPrefService);
     var domBranch = prefService.getBranch("dom.");
     var oldVal = domBranch.getIntPref("max_script_run_time");
     domBranch.setIntPref("max_script_run_time", 0);
 
     SimpleTest.finish();
 
     domBranch.setIntPref("max_script_run_time", oldVal);
 
     return;
   }
-  test_descriptor(l.pop());
-  setTimeout(do_one, 0, l);
+  test_descriptor(descs.pop());
+  SimpleTest.executeSoon(do_one);
 }
-setTimeout(do_one, 0, descs);
+SimpleTest.executeSoon(do_one);
 
 </script>
 </pre>
 </body>
 </html>
diff --git a/layout/style/test/test_value_computation.html b/layout/style/test/test_value_computation.html
--- a/layout/style/test/test_value_computation.html
+++ b/layout/style/test/test_value_computation.html
@@ -189,37 +189,37 @@ function test_property(prop) {
 
 function run_tests() {
   setup_initial_values("unstyledn", "gInitialValuesN", "gInitialPrereqsRuleN");
   setup_initial_values("unstyledf", "gInitialValuesF", "gInitialPrereqsRuleF");
   var props = [];
   for (var prop in gCSSProperties)
     props.push(prop);
   props = props.reverse();
-  function do_one(l) {
-    if (l.length == 0) {
+  function do_one() {
+    if (props.length == 0) {
       // SimpleTest.finish() is really slow, so we have to disable the
       // slow script dialog for this part
       netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
       var prefService = Components.classes["@mozilla.org/preferences-service;1"].
                           getService(Components.interfaces.nsIPrefService);
       var domBranch = prefService.getBranch("dom.");
       var oldVal = domBranch.getIntPref("max_script_run_time");
       domBranch.setIntPref("max_script_run_time", 0);
 
       SimpleTest.finish();
 
       domBranch.setIntPref("max_script_run_time", oldVal);
 
       return;
     }
-    test_property(l.pop());
-    setTimeout(do_one, 0, l);
+    test_property(props.pop());
+    SimpleTest.executeSoon(do_one);
   }
-  setTimeout(do_one, 0, props);
+  SimpleTest.executeSoon(do_one);
 }
 
 load_done();
 
 </script>
 </pre>
 </body>
 </html>
diff --git a/layout/style/test/test_value_storage.html b/layout/style/test/test_value_storage.html
--- a/layout/style/test/test_value_storage.html
+++ b/layout/style/test/test_value_storage.html
@@ -194,34 +194,34 @@ function test_property(property)
 
 // To avoid triggering the slow script dialog, we have to test one
 // property at a time.
 SimpleTest.waitForExplicitFinish();
 var props = [];
 for (var prop in gCSSProperties)
   props.push(prop);
 props = props.reverse();
-function do_one(l) {
-  if (l.length == 0) {
+function do_one() {
+  if (props.length == 0) {
     // SimpleTest.finish() is really slow, so we have to disable the
     // slow script dialog for this part
     netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
     var prefService = Components.classes["@mozilla.org/preferences-service;1"].
                         getService(Components.interfaces.nsIPrefService);
     var domBranch = prefService.getBranch("dom.");
     var oldVal = domBranch.getIntPref("max_script_run_time");
     domBranch.setIntPref("max_script_run_time", 0);
 
     SimpleTest.finish();
 
     domBranch.setIntPref("max_script_run_time", oldVal);
 
     return;
   }
-  test_property(l.pop());
-  setTimeout(do_one, 0, l);
+  test_property(props.pop());
+  SimpleTest.executeSoon(do_one);
 }
-setTimeout(do_one, 0, props);
+SimpleTest.executeSoon(do_one);
 
 </script>
 </pre>
 </body>
 </html>

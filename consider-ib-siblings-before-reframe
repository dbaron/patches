From: L. David Baron <dbaron@dbaron.org>

Bug 1110277 patch 1 - Consider the ib-split chain when checking for ::before and ::after in order to reframe when they're missing.

This patch is not needed to fix the bug, but it seems like it's probably
desirable.  It's not needed for this bug because
MaybeReframeForBeforePseudo and MaybeReframeForAfterPseudo are already
called (by ElementRestyler::RestyleChildren) on only the first and last
continuation or ib-split sibling with the same style.  So this patch
should only actually change anything for cases like a block-in-inline
split whose initial inline part is inside of a ::first-line (where
diffeent parts of the block-in-inline split chain have different style).

Since the symptom of this bug is only causing extra reframes, I don't
see how to test for it once patches 4 through 6 are in the tree.

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -3659,18 +3659,19 @@ ElementRestyler::MaybeReframeForBeforePs
   // can't have generated content.
   nsContainerFrame* cif;
   if (!aStyleContext->GetPseudo() &&
       ((aGenConParentFrame->GetStateBits() & NS_FRAME_MAY_HAVE_GENERATED_CONTENT) ||
        // Our content insertion frame might have gotten flagged.
        ((cif = aGenConParentFrame->GetContentInsertionFrame()) &&
         (cif->GetStateBits() & NS_FRAME_MAY_HAVE_GENERATED_CONTENT)))) {
     // Check for a ::before pseudo style and the absence of a ::before content,
-    // but only if aFrame is null or is the first continuation.
-    if (!aFrame || !aFrame->GetPrevContinuation()) {
+    // but only if aFrame is null or is the first continuation/ib-split.
+    if (!aFrame ||
+        nsLayoutUtils::IsFirstContinuationOrIBSplitSibling(aFrame)) {
       // Checking for a ::before frame is cheaper than getting the
       // ::before style context.
       if (!nsLayoutUtils::GetBeforeFrameForContent(aGenConParentFrame, aContent) &&
           nsLayoutUtils::HasPseudoStyle(aContent, aStyleContext,
                                         nsCSSPseudoElements::ePseudo_before,
                                         mPresContext)) {
         // Have to create the new ::before frame.
         LOG_RESTYLE("MaybeReframeForBeforePseudo, appending "
@@ -3705,18 +3706,19 @@ ElementRestyler::MaybeReframeForAfterPse
   // can't have generated content.
   nsContainerFrame* cif;
   if (!aStyleContext->GetPseudo() &&
       ((aGenConParentFrame->GetStateBits() & NS_FRAME_MAY_HAVE_GENERATED_CONTENT) ||
        // Our content insertion frame might have gotten flagged.
        ((cif = aGenConParentFrame->GetContentInsertionFrame()) &&
         (cif->GetStateBits() & NS_FRAME_MAY_HAVE_GENERATED_CONTENT)))) {
     // Check for an ::after pseudo style and the absence of an ::after content,
-    // but only if aFrame is null or is the last continuation.
-    if (!aFrame || !aFrame->GetNextContinuation()) {
+    // but only if aFrame is null or is the last continuation/ib-split.
+    if (!aFrame ||
+        !nsLayoutUtils::GetNextContinuationOrIBSplitSibling(aFrame)) {
       // Checking for an ::after frame is cheaper than getting the
       // ::after style context.
       if (!nsLayoutUtils::GetAfterFrameForContent(aGenConParentFrame, aContent) &&
           nsLayoutUtils::HasPseudoStyle(aContent, aStyleContext,
                                         nsCSSPseudoElements::ePseudo_after,
                                         mPresContext)) {
         // Have to create the new ::after frame.
         LOG_RESTYLE("MaybeReframeForAfterPseudo, appending "

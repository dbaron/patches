From: L. David Baron <dbaron@dbaron.org>

Make the StepEnd function use floor.

I think this may have been for
https://bugzilla.mozilla.org/show_bug.cgi?id=829168#c2
though
https://bugzilla.mozilla.org/show_bug.cgi?id=859018
suggests otherwise.

diff --git a/dom/animation/ComputedTimingFunction.cpp b/dom/animation/ComputedTimingFunction.cpp
--- a/dom/animation/ComputedTimingFunction.cpp
+++ b/dom/animation/ComputedTimingFunction.cpp
@@ -33,34 +33,34 @@ StepTiming(uint32_t aSteps,
   MOZ_ASSERT(aType == nsTimingFunction::Type::StepStart ||
              aType == nsTimingFunction::Type::StepEnd, "invalid type");
 
   if (aPortion == 1.0) {
     return 1.0;
   }
 
   // Calculate current step using step-end behavior
-  uint32_t step = uint32_t(aPortion * aSteps); // floor
+  double step = floor(aPortion * aSteps);
 
   // step-start is one step ahead
   if (aType == nsTimingFunction::Type::StepStart) {
-    step++;
+    step += 1.0;
   }
 
   // If the "before flag" is set and we are at a transition point,
   // drop back a step (but only if we are not already at the zero point--
   // we do this clamping here since |step| is an unsigned integer)
-  if (step != 0 &&
+  if (step != 0.0 &&
       aBeforeFlag == ComputedTimingFunction::BeforeFlag::Set &&
       fmod(aPortion * aSteps, 1) == 0) {
-    step--;
+    step -= 1.0;
   }
 
   // Convert to a progress value
-  return double(step) / double(aSteps);
+  return step / double(aSteps);
 }
 
 double
 ComputedTimingFunction::GetValue(
     double aPortion,
     ComputedTimingFunction::BeforeFlag aBeforeFlag) const
 {
   if (HasSpline()) {

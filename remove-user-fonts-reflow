Handle dynamic removal of a set of user fonts by doing the necessary reflow.  (Bug 457821)

diff --git a/layout/base/nsPresContext.cpp b/layout/base/nsPresContext.cpp
--- a/layout/base/nsPresContext.cpp
+++ b/layout/base/nsPresContext.cpp
@@ -1753,17 +1753,27 @@ nsPresContext::GetUserFontSet()
           }
         }
       } else {
         differ = PR_TRUE;
       }
 
       // Only rebuild things if the set of @font-face rules is different.
       if (differ) {
-        NS_IF_RELEASE(mUserFontSet);
+        if (mUserFontSet) {
+          NS_RELEASE(mUserFontSet);
+
+          // We need to enqueue a style change reflow (for later) to
+          // reflect that we're dropping @font-face rules.  This is
+          // the same thing nsFontFaceLoader does when new
+          // downloadable fonts become available.
+          if (mShell) {
+            mShell->StyleChangeReflow();
+          }
+        }
 
         if (rules.Length() > 0) {
           nsFontFaceLoaderContext *loaderCtx =
             new nsFontFaceLoaderContext(this);
           if (!loaderCtx)
             return nsnull;
           gfxUserFontSet *fs = new gfxUserFontSet(loaderCtx);
           // user font set owns loader context
diff --git a/layout/style/nsFontFaceLoader.cpp b/layout/style/nsFontFaceLoader.cpp
--- a/layout/style/nsFontFaceLoader.cpp
+++ b/layout/style/nsFontFaceLoader.cpp
@@ -143,17 +143,20 @@ nsFontFaceLoader::OnStreamComplete(nsISt
 
   // when new font loaded, need to reflow
   if (fontUpdate) {
     nsFontFaceLoaderContext *loaderCtx 
                        = static_cast<nsFontFaceLoaderContext*> (mLoaderContext);
 
     nsIPresShell *ps = loaderCtx->mPresContext->PresShell();
     if (ps) {
-      // reflow async so that reflows coalesce
+      // Update layout for the presence of the new font.  Since this is
+      // asynchronous, reflows will coalesce.
+      // nsPresContext::GetUserFontSet does the same thing when we
+      // remove a user font set, for fonts becoming unavailable.
       ps->StyleChangeReflow();
       LOG(("fontdownloader (%p) reflow\n", this));
     }
   }
 
   return aStatus;
 }
 

Ignore whitespace-only children of XUL boxes (like the XUL content sink does in the content tree, when in XUL documents).  b=403505  r+sr=roc  a=blocking1.9+

diff --git a/layout/reftests/bugs/403505-1-ref.xul b/layout/reftests/bugs/403505-1-ref.xul
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/403505-1-ref.xul
@@ -0,0 +1,1 @@
+<?xml version="1.0"?><!DOCTYPE window><window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"><hbox><label value="test" flex="3" /><label value="test2" /><label value="test3" flex="1" /></hbox></window>
diff --git a/layout/reftests/bugs/403505-1.xml b/layout/reftests/bugs/403505-1.xml
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/403505-1.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0"?>
+<!--
+  Intentionally testing XUL loaded through the XML content sink rather
+  than the XUL content sink.
+  -->
+<!DOCTYPE window>
+<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+  <hbox>
+    <label value="test" flex="3" />
+    <label value="test2" />
+    <label value="test3" flex="1" />
+  </hbox>
+</window>
diff --git a/layout/reftests/bugs/reftest.list b/layout/reftests/bugs/reftest.list
--- a/layout/reftests/bugs/reftest.list
+++ b/layout/reftests/bugs/reftest.list
@@ -442,6 +442,7 @@ fails == 393655-2.html 393655-2-ref.html
 == 400171-2c.html 400171-2-ref.html
 == 400421-1.html 400421-1-ref.html
 == 400826-1.html 400826-1-ref.html
+== 403505-1.xml 403505-1-ref.xul
 == 403519-1.html 403519-1-ref.html
 == 403656-1.html 403656-1-ref.html
 == 403656-2.html 403656-2-ref.html
diff --git a/layout/xul/base/src/nsBoxFrame.cpp b/layout/xul/base/src/nsBoxFrame.cpp
--- a/layout/xul/base/src/nsBoxFrame.cpp
+++ b/layout/xul/base/src/nsBoxFrame.cpp
@@ -200,6 +200,13 @@ nsBoxFrame::Init(nsIContent*      aConte
 {
   nsresult  rv = nsContainerFrame::Init(aContent, aParent, aPrevInFlow);
   NS_ENSURE_SUCCESS(rv, rv);
+
+  // record that children that are ignorable whitespace should be excluded 
+  // (When content was loaded via the XUL content sink, it's already
+  // been excluded, but we need this for when the XUL namespace is used
+  // in other MIME types or when the XUL CSS display types are used with
+  // non-XUL elements.)
+  mState |= NS_FRAME_EXCLUDE_IGNORABLE_WHITESPACE;
 
   MarkIntrinsicWidthsDirty();
 

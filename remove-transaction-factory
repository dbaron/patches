Remove nsTransactionFactory and transaction CIDs.

diff --git a/editor/libeditor/base/ChangeAttributeTxn.h b/editor/libeditor/base/ChangeAttributeTxn.h
--- a/editor/libeditor/base/ChangeAttributeTxn.h
+++ b/editor/libeditor/base/ChangeAttributeTxn.h
@@ -38,48 +38,38 @@
 #ifndef ChangeAttributeTxn_h__
 #define ChangeAttributeTxn_h__
 
 #include "EditTxn.h"
 #include "nsCOMPtr.h"
 #include "nsIDOMElement.h"
 #include "nsIEditor.h"
 
-#define CHANGE_ATTRIBUTE_TXN_CID \
-{/* 97818860-ac48-11d2-86d8-000064657374 */ \
-0x97818860, 0xac48, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 /**
  * A transaction that changes an attribute of a content node. 
  * This transaction covers add, remove, and change attribute.
  */
 class ChangeAttributeTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = CHANGE_ATTRIBUTE_TXN_CID; return iid; }
-
   /** Initialize the transaction.
     * @param aEditor the object providing core editing operations
     * @param aNode   the node whose attribute will be changed
     * @param aAttribute the name of the attribute to change
     * @param aValue     the new value for aAttribute, if aRemoveAttribute is false
     * @param aRemoveAttribute if PR_TRUE, remove aAttribute from aNode
     */
   NS_IMETHOD Init(nsIEditor      *aEditor,
                   nsIDOMElement  *aNode,
                   const nsAString& aAttribute,
                   const nsAString& aValue,
                   PRBool aRemoveAttribute);
 
-private:
   ChangeAttributeTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(ChangeAttributeTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
 
 protected:
@@ -99,13 +89,11 @@ protected:
   /** the value to set the attribute to for undo */
   nsString mUndoValue;
 
   /** PR_TRUE if the mAttribute was set on mElement at the time of execution */
   PRBool   mAttributeWasSet;
 
   /** PR_TRUE if the operation is to remove mAttribute from mElement */
   PRBool   mRemoveAttribute;
-
-  friend class TransactionFactory;
 };
 
 #endif
diff --git a/editor/libeditor/base/ChangeCSSInlineStyleTxn.h b/editor/libeditor/base/ChangeCSSInlineStyleTxn.h
--- a/editor/libeditor/base/ChangeCSSInlineStyleTxn.h
+++ b/editor/libeditor/base/ChangeCSSInlineStyleTxn.h
@@ -39,31 +39,23 @@
 #ifndef ChangeCSSInlineStyleTxn_h__
 #define ChangeCSSInlineStyleTxn_h__
 
 #include "EditTxn.h"
 #include "nsCOMPtr.h"
 #include "nsIDOMElement.h"
 #include "nsIEditor.h"
 
-#define CHANGE_CSSINLINESTYLE_TXN_CID \
-{/* a2185c9e-1dd1-11b2-88d6-d89704bf7a5a */ \
-0xa2185c9e, 0x1dd1, 0x11b2, \
-{0x88, 0xd6, 0xd8, 0x97, 0x04, 0xbf, 0x7a, 0x5a} }
-
 /**
  * A transaction that changes the value of a CSS inline style of a content node. 
  * This transaction covers add, remove, and change a property's value.
  */
 class ChangeCSSInlineStyleTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = CHANGE_CSSINLINESTYLE_TXN_CID; return iid; }
-
   /** Initialize the transaction.
     * @param aEditor         [IN] the object providing core editing operations
     * @param aNode           [IN] the node whose style attribute will be changed
     * @param aProperty       [IN] the name of the property to change
     * @param aValue          [IN] the new value for aProperty, if aRemoveProperty is false
     * @param aRemoveProperty [IN] if PR_TRUE, remove aProperty from style attribute
     */
   NS_IMETHOD Init(nsIEditor      * aEditor,
@@ -83,19 +75,19 @@ public:
 
   /** adds the value aNewValue to the list of white-space separated values aValues
     *
     * @param aValues         [IN/OUT] a list of wite-space separated values
     * @param aNewValue       [IN] a value this code adds to aValues if it is not already in
     */
   NS_IMETHOD AddValueToMultivalueProperty(nsAString & aValues, const nsAString  & aNewValue);
 
-private:
   ChangeCSSInlineStyleTxn();
 
+private:
   /** returns true if the property accepts more than one value
     *
     * @return                true if the property accepts more than one value
     * @param aCSSProperty    [IN] the CSS property
     */
   PRBool AcceptsMoreThanOneValue(nsIAtom * aCSSProperty);
 
   /** remove a value from a list of white-space separated values
@@ -139,13 +131,11 @@ protected:
   nsString mRedoValue;
   /** true if the style attribute was present and not empty before DoTransaction */
   PRBool   mUndoAttributeWasSet;
   /** true if the style attribute is present and not empty after DoTransaction */
   PRBool   mRedoAttributeWasSet;
 
   /** PR_TRUE if the operation is to remove mProperty from mElement */
   PRBool   mRemoveProperty;
-
-  friend class TransactionFactory;
 };
 
 #endif
diff --git a/editor/libeditor/base/CreateElementTxn.h b/editor/libeditor/base/CreateElementTxn.h
--- a/editor/libeditor/base/CreateElementTxn.h
+++ b/editor/libeditor/base/CreateElementTxn.h
@@ -38,48 +38,38 @@
 #ifndef CreateElementTxn_h__
 #define CreateElementTxn_h__
 
 #include "EditTxn.h"
 #include "nsEditor.h"
 #include "nsIDOMNode.h"
 #include "nsCOMPtr.h"
 
-#define CREATE_ELEMENT_TXN_CID \
-{/* 7a6393c0-ac48-11d2-86d8-000064657374 */ \
-0x7a6393c0, 0xac48, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 /**
  * A transaction that creates a new node in the content tree.
  */
 class CreateElementTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = CREATE_ELEMENT_TXN_CID; return iid; }
-
   enum { eAppend=-1 };
 
   /** Initialize the transaction.
     * @param aEditor the provider of basic editing functionality
     * @param aTag    the tag (P, HR, TABLE, etc.) for the new element
     * @param aParent the node into which the new element will be inserted
     * @param aOffsetInParent the location in aParent to insert the new element
     *                        if eAppend, the new element is appended as the last child
     */
   NS_IMETHOD Init(nsEditor *aEditor,
                   const nsAString& aTag,
                   nsIDOMNode *aParent,
                   PRUint32 aOffsetInParent);
 
-private:
   CreateElementTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(CreateElementTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
 
   NS_IMETHOD GetNewNode(nsIDOMNode **aNewNode);
@@ -98,14 +88,11 @@ protected:
   /** the index in mParent for the new node */
   PRUint32 mOffsetInParent;
 
   /** the new node to insert */
   nsCOMPtr<nsIDOMNode> mNewNode;  
 
   /** the node we will insert mNewNode before.  We compute this ourselves. */
   nsCOMPtr<nsIDOMNode> mRefNode;
-
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/DeleteElementTxn.h b/editor/libeditor/base/DeleteElementTxn.h
--- a/editor/libeditor/base/DeleteElementTxn.h
+++ b/editor/libeditor/base/DeleteElementTxn.h
@@ -39,41 +39,31 @@
 #define DeleteElementTxn_h__
 
 #include "EditTxn.h"
 
 #include "nsIDOMNode.h"
 #include "nsIEditor.h"
 #include "nsCOMPtr.h"
 
-#define DELETE_ELEMENT_TXN_CID \
-{/* 6fd77770-ac49-11d2-86d8-000064657374 */ \
-0x6fd77770, 0xac49, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsRangeUpdater;
 
 /**
  * A transaction that deletes a single element
  */
 class DeleteElementTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = DELETE_ELEMENT_TXN_CID; return iid; }
- 
   /** initialize the transaction.
     * @param aElement the node to delete
     */
   NS_IMETHOD Init(nsIEditor *aEditor, nsIDOMNode *aElement, nsRangeUpdater *aRangeUpdater);
 
-private:
   DeleteElementTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(DeleteElementTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
 
 protected:
@@ -87,14 +77,11 @@ protected:
   /** next sibling to remember for undo/redo purposes */
   nsCOMPtr<nsIDOMNode> mRefNode;
 
   /** the editor for this transaction */
   nsIEditor* mEditor;
 
   /** range updater object */
   nsRangeUpdater *mRangeUpdater;
-  
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/DeleteRangeTxn.h b/editor/libeditor/base/DeleteRangeTxn.h
--- a/editor/libeditor/base/DeleteRangeTxn.h
+++ b/editor/libeditor/base/DeleteRangeTxn.h
@@ -39,46 +39,36 @@
 #define DeleteRangeTxn_h__
 
 #include "EditAggregateTxn.h"
 #include "nsIDOMNode.h"
 #include "nsIDOMRange.h"
 #include "nsIEditor.h"
 #include "nsCOMPtr.h"
 
-#define DELETE_RANGE_TXN_CID \
-{/* 5ec6b260-ac49-11d2-86d8-000064657374 */ \
-0x5ec6b260, 0xac49, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsIDOMRange;
 class nsIEditor;
 class nsRangeUpdater;
 
 /**
  * A transaction that deletes an entire range in the content tree
  */
 class DeleteRangeTxn : public EditAggregateTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = DELETE_RANGE_TXN_CID; return iid; }
-
   /** initialize the transaction.
     * @param aEditor the object providing basic editing operations
     * @param aRange  the range to delete
     */
   NS_IMETHOD Init(nsIEditor *aEditor, 
                   nsIDOMRange *aRange,
                   nsRangeUpdater *aRangeUpdater);
 
-private:
   DeleteRangeTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(DeleteRangeTxn, EditAggregateTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
 
 protected:
@@ -113,14 +103,11 @@ protected:
   /** p2 offset */
   PRInt32 mEndOffset;
 
   /** the editor for this transaction */
   nsIEditor* mEditor;
 
   /** range updater object */
   nsRangeUpdater *mRangeUpdater;
-  
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/DeleteTextTxn.h b/editor/libeditor/base/DeleteTextTxn.h
--- a/editor/libeditor/base/DeleteTextTxn.h
+++ b/editor/libeditor/base/DeleteTextTxn.h
@@ -38,48 +38,38 @@
 #ifndef DeleteTextTxn_h__
 #define DeleteTextTxn_h__
 
 #include "EditTxn.h"
 #include "nsIEditor.h"
 #include "nsIDOMCharacterData.h"
 #include "nsCOMPtr.h"
 
-#define DELETE_TEXT_TXN_CID \
-{/* 4d3a2720-ac49-11d2-86d8-000064657374 */ \
-0x4d3a2720, 0xac49, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsRangeUpdater;
 
 /**
  * A transaction that removes text from a content node. 
  */
 class DeleteTextTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = DELETE_TEXT_TXN_CID; return iid; }
-
   /** initialize the transaction.
     * @param aEditor  the provider of basic editing operations
     * @param aElement the content node to remove text from
     * @param aOffset  the location in aElement to begin the deletion
     * @param aNumCharsToDelete  the number of characters to delete.  Not the number of bytes!
     */
   NS_IMETHOD Init(nsIEditor *aEditor,
                   nsIDOMCharacterData *aElement,
                   PRUint32 aOffset,
                   PRUint32 aNumCharsToDelete,
                   nsRangeUpdater *aRangeUpdater);
 
-private:
   DeleteTextTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(DeleteTextTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   PRUint32 GetOffset() { return mOffset; }
 
   PRUint32 GetNumCharsToDelete() { return mNumCharsToDelete; }
@@ -98,14 +88,11 @@ protected:
   /** the number of characters to delete */
   PRUint32 mNumCharsToDelete;
 
   /** the text that was deleted */
   nsString mDeletedText;
 
   /** range updater object */
   nsRangeUpdater *mRangeUpdater;
-  
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/EditAggregateTxn.h b/editor/libeditor/base/EditAggregateTxn.h
--- a/editor/libeditor/base/EditAggregateTxn.h
+++ b/editor/libeditor/base/EditAggregateTxn.h
@@ -39,33 +39,25 @@
 #define EditAggregateTxn_h__
 
 #include "EditTxn.h"
 #include "nsIAtom.h"
 #include "nsCOMPtr.h"
 #include "nsTArray.h"
 #include "nsAutoPtr.h"
 
-#define EDIT_AGGREGATE_TXN_CID \
-{/* 345921a0-ac49-11d2-86d8-000064657374 */ \
-0x345921a0, 0xac49, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
-
 /**
  * base class for all document editing transactions that require aggregation.
  * provides a list of child transactions.
  */
 class EditAggregateTxn : public EditTxn
 {
 public:
   NS_IMETHOD QueryInterface(REFNSIID aIID, void **aInstancePtr);
 
-  static const nsIID& GetCID() { static const nsIID cid = EDIT_AGGREGATE_TXN_CID; return cid; }
-
   EditAggregateTxn();
 
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(EditAggregateTxn, EditTxn)
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
   NS_IMETHOD Merge(nsITransaction *aTransaction, PRBool *aDidMerge);
diff --git a/editor/libeditor/base/EditTxn.h b/editor/libeditor/base/EditTxn.h
--- a/editor/libeditor/base/EditTxn.h
+++ b/editor/libeditor/base/EditTxn.h
@@ -38,31 +38,23 @@
 #ifndef EditTxn_h__
 #define EditTxn_h__
 
 #include "nsITransaction.h"
 #include "nsString.h"
 #include "nsPIEditorTransaction.h"
 #include "nsCycleCollectionParticipant.h"
 
-#define EDIT_TXN_CID \
-{/* c5ea31b0-ac48-11d2-86d8-000064657374 */ \
-0xc5ea31b0, 0xac48, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 /**
  * Base class for all document editing transactions.
  */
 class EditTxn : public nsITransaction,
                 public nsPIEditorTransaction
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = EDIT_TXN_CID; return iid; }
-
   NS_DECL_CYCLE_COLLECTING_ISUPPORTS
   NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS(EditTxn, nsITransaction)
 
   virtual ~EditTxn();
 
   NS_IMETHOD RedoTransaction(void);
   NS_IMETHOD GetIsTransient(PRBool *aIsTransient);
   NS_IMETHOD Merge(nsITransaction *aTransaction, PRBool *aDidMerge);
diff --git a/editor/libeditor/base/IMETextTxn.h b/editor/libeditor/base/IMETextTxn.h
--- a/editor/libeditor/base/IMETextTxn.h
+++ b/editor/libeditor/base/IMETextTxn.h
@@ -40,53 +40,40 @@
 
 #include "EditTxn.h"
 #include "nsIDOMCharacterData.h"
 #include "nsIPrivateTextRange.h"
 #include "nsCOMPtr.h"
 #include "nsWeakPtr.h"
 #include "nsIAtom.h"
 
-// {D4D25721-2813-11d3-9EA3-0060089FE59B}
-#define IME_TEXT_TXN_CID							\
-{0xd4d25721, 0x2813, 0x11d3,						\
-{0x9e, 0xa3, 0x0, 0x60, 0x8, 0x9f, 0xe5, 0x9b }}
-
-
-
-
 class nsIPresShell;
 
 /**
   * A transaction that inserts text into a content node. 
   */
 class IMETextTxn : public EditTxn
 {
 public:
-  static const nsIID& GetCID() { static const nsIID iid = IME_TEXT_TXN_CID; return iid; }
-
   /** initialize the transaction
     * @param aElement the text content node
     * @param aOffset  the location in aElement to do the insertion
     * @param aReplaceLength the length of text to replace (0 == no replacement)
     * @param aString  the new text to insert
     * @param aSelCon used to get and set the selection
     */
   NS_IMETHOD Init(nsIDOMCharacterData *aElement,
                   PRUint32 aOffset,
                   PRUint32 aReplaceLength,
                   nsIPrivateTextRangeList* aTextRangeList,
                   const nsAString& aString,
                   nsWeakPtr aSelCon);
 
-private:
-	
-	IMETextTxn();
+  IMETextTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(IMETextTxn, EditTxn)
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD Merge(nsITransaction *aTransaction, PRBool *aDidMerge);
 
   NS_IMETHOD MarkFixed(void);
 
@@ -115,13 +102,11 @@ protected:
 
   /** the range list **/
   nsCOMPtr<nsIPrivateTextRangeList>	mRangeList;
 
   /** the selection controller, which we'll need to get the selection */
   nsWeakPtr mSelConWeak;  // use a weak reference
 
   PRBool	mFixed;
-
-  friend class TransactionFactory;
 };
 
 #endif
diff --git a/editor/libeditor/base/InsertElementTxn.h b/editor/libeditor/base/InsertElementTxn.h
--- a/editor/libeditor/base/InsertElementTxn.h
+++ b/editor/libeditor/base/InsertElementTxn.h
@@ -38,44 +38,34 @@
 #ifndef InsertElementTxn_h__
 #define InsertElementTxn_h__
 
 #include "EditTxn.h"
 #include "nsIEditor.h"
 #include "nsIDOMNode.h"
 #include "nsCOMPtr.h"
 
-#define INSERT_ELEMENT_TXN_CID \
-{/* b5762440-cbb0-11d2-86db-000064657374 */ \
-0xb5762440, 0xcbb0, 0x11d2, \
-{0x86, 0xdb, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 /**
  * A transaction that inserts a single element
  */
 class InsertElementTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = INSERT_ELEMENT_TXN_CID; return iid; }
-
   /** initialize the transaction.
     * @param aNode   the node to insert
     * @param aParent the node to insert into
     * @param aOffset the offset in aParent to insert aNode
     */
   NS_IMETHOD Init(nsIDOMNode *aNode,
                   nsIDOMNode *aParent,
                   PRInt32     aOffset,
                   nsIEditor  *aEditor);
 
-private:
   InsertElementTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(InsertElementTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
 protected:
   
   /** the element to insert */
@@ -84,14 +74,11 @@ protected:
   /** the node into which the new node will be inserted */
   nsCOMPtr<nsIDOMNode> mParent;
 
   /** the editor for this transaction */
   nsIEditor*           mEditor;
 
   /** the index in mParent for the new node */
   PRInt32 mOffset;
-
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/InsertTextTxn.h b/editor/libeditor/base/InsertTextTxn.h
--- a/editor/libeditor/base/InsertTextTxn.h
+++ b/editor/libeditor/base/InsertTextTxn.h
@@ -38,46 +38,35 @@
 #ifndef InsertTextTxn_h__
 #define InsertTextTxn_h__
 
 #include "EditTxn.h"
 #include "nsIDOMCharacterData.h"
 #include "nsIEditor.h"
 #include "nsCOMPtr.h"
 
-#define INSERT_TEXT_TXN_CID \
-{/* 93276f00-ab2c-11d2-8f4b-006008159b0c*/ \
-0x93276f00, 0xab2c, 0x11d2, \
-{0x8f, 0xb4, 0x0, 0x60, 0x8, 0x15, 0x9b, 0xc} }
-
 /**
   * A transaction that inserts text into a content node. 
   */
 class InsertTextTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = INSERT_TEXT_TXN_CID; return iid; }
-
   /** initialize the transaction
     * @param aElement the text content node
     * @param aOffset  the location in aElement to do the insertion
     * @param aString  the new text to insert
     * @param aPresShell used to get and set the selection
     */
   NS_IMETHOD Init(nsIDOMCharacterData *aElement,
                   PRUint32 aOffset,
                   const nsAString& aString,
                   nsIEditor *aEditor);
 
-private:
-	
-	InsertTextTxn();
+  InsertTextTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(InsertTextTxn, EditTxn)
 	
   NS_DECL_EDITTXN
 
   NS_IMETHOD Merge(nsITransaction *aTransaction, PRBool *aDidMerge);
 
 // nsISupports declarations
 
@@ -98,13 +87,11 @@ protected:
   /** the offset into mElement where the insertion is to take place */
   PRUint32 mOffset;
 
   /** the text to insert into mElement at mOffset */
   nsString mStringToInsert;
 
   /** the editor, which we'll need to get the selection */
   nsIEditor *mEditor;   
-
-  friend class TransactionFactory;
 };
 
 #endif
diff --git a/editor/libeditor/base/JoinElementTxn.h b/editor/libeditor/base/JoinElementTxn.h
--- a/editor/libeditor/base/JoinElementTxn.h
+++ b/editor/libeditor/base/JoinElementTxn.h
@@ -38,48 +38,39 @@
 #ifndef JoinElementTxn_h__
 #define JoinElementTxn_h__
 
 #include "EditTxn.h"
 #include "nsIDOMNode.h"
 #include "nsCOMPtr.h"
 #include "nsIEditor.h"
 
-#define JOIN_ELEMENT_TXN_CID \
-{/* 9bc5f9f0-ac48-11d2-86d8-000064657374 */ \
-0x9bc5f9f0, 0xac48, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsEditor;
 
 /**
  * A transaction that joins two elements E1 (left node) and E2 (right node)
  * into a single node E.  
  * The children of E are the children of E1 followed by the children of E2.
  * After DoTransaction() and RedoTransaction(), E1 is removed from the content
  * tree and E2 remains.
  */
 class JoinElementTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = JOIN_ELEMENT_TXN_CID; return iid; }
-
   /** initialize the transaction
     * @param aEditor    the provider of core editing operations
     * @param aLeftNode  the first of two nodes to join
     * @param aRightNode the second of two nodes to join
     */
   NS_IMETHOD Init(nsEditor   *aEditor,
                   nsIDOMNode *aLeftNode,
                   nsIDOMNode *aRightNode);
-protected:
+
   JoinElementTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(JoinElementTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
 protected:
   
   /** the elements to operate upon.  
@@ -92,14 +83,11 @@ protected:
     * mOffset is the index of the first child in the right node. 
     * -1 means the left node had no children.
     */
   PRUint32  mOffset;
 
   /** the parent node containing mLeftNode and mRightNode */
   nsCOMPtr<nsIDOMNode> mParent;
   nsEditor*  mEditor;
-
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/Makefile.in b/editor/libeditor/base/Makefile.in
--- a/editor/libeditor/base/Makefile.in
+++ b/editor/libeditor/base/Makefile.in
@@ -95,17 +95,16 @@ CPPSRCS		+=                          \
 		EditAggregateTxn.cpp        \
 		IMETextTxn.cpp              \
 		InsertElementTxn.cpp        \
 		InsertTextTxn.cpp           \
 		JoinElementTxn.cpp          \
 		SetDocTitleTxn.cpp          \
 		SplitElementTxn.cpp         \
 		nsStyleSheetTxns.cpp        \
-		TransactionFactory.cpp      \
 		$(NULL)
 
 # don't want the shared lib; force the creation of a static lib.
 FORCE_STATIC_LIB = 1
 
 include $(topsrcdir)/config/rules.mk
 
 INCLUDES	+= \
diff --git a/editor/libeditor/base/PlaceholderTxn.h b/editor/libeditor/base/PlaceholderTxn.h
--- a/editor/libeditor/base/PlaceholderTxn.h
+++ b/editor/libeditor/base/PlaceholderTxn.h
@@ -42,45 +42,35 @@
 #include "nsEditorUtils.h"
 #include "nsIAbsorbingTransaction.h"
 #include "nsIDOMNode.h"
 #include "nsCOMPtr.h"
 #include "nsWeakPtr.h"
 #include "nsWeakReference.h"
 #include "nsAutoPtr.h"
 
-#define PLACEHOLDER_TXN_CID \
-{/* {0CE9FB00-D9D1-11d2-86DE-000064657374} */ \
-0x0CE9FB00, 0xD9D1, 0x11d2, \
-{0x86, 0xde, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsHTMLEditor;
 class IMETextTxn;
 
 /**
  * An aggregate transaction that knows how to absorb all subsequent
  * transactions with the same name.  This transaction does not "Do" anything.
  * But it absorbs other transactions via merge, and can undo/redo the
  * transactions it has absorbed.
  */
  
 class PlaceholderTxn : public EditAggregateTxn, 
                        public nsIAbsorbingTransaction, 
                        public nsSupportsWeakReference
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = PLACEHOLDER_TXN_CID; return iid; }
-
   NS_DECL_ISUPPORTS_INHERITED  
   
-private:
   PlaceholderTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(PlaceholderTxn, EditAggregateTxn)
 // ------------ EditAggregateTxn -----------------------
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
   NS_IMETHOD Merge(nsITransaction *aTransaction, PRBool *aDidMerge);
 
@@ -94,18 +84,16 @@ public:
 
   NS_IMETHOD EndPlaceHolderBatch();
 
   NS_IMETHOD ForwardEndBatchTo(nsIAbsorbingTransaction *aForwardingAddress);
 
   NS_IMETHOD Commit();
 
   NS_IMETHOD RememberEndingSelection();
-  
-  friend class TransactionFactory;
 
 protected:
 
   /** the presentation shell, which we'll need to get the selection */
   PRBool      mAbsorb;          // do we auto absorb any and all transaction?
   nsWeakPtr   mForwarding;
   IMETextTxn *mIMETextTxn;      // first IME txn in this placeholder - used for IME merging
                                 // non-owning for now - can't nsCOMPtr it due to broken transaction interfaces
diff --git a/editor/libeditor/base/SetDocTitleTxn.h b/editor/libeditor/base/SetDocTitleTxn.h
--- a/editor/libeditor/base/SetDocTitleTxn.h
+++ b/editor/libeditor/base/SetDocTitleTxn.h
@@ -39,40 +39,32 @@
 #define SetDocTitleTxn_h__
 
 #include "EditTxn.h"
 #include "nsIEditor.h"
 #include "nsIHTMLEditor.h"
 #include "nsITransaction.h"
 #include "nsCOMPtr.h"
 
-#define SET_DOC_TITLE_TXN_CID \
-{ /*7FC508B5-ED8F-11d4-AF02-0050040AE132 */ \
-0x7fc508b5, 0xed8f, 0x11d4, \
-{ 0xaf, 0x2, 0x0, 0x50, 0x4, 0xa, 0xe1, 0x32 } }
-
 /**
  * A transaction that changes the document's title,
  *  which is a text node under the <title> tag in a page's <head> section
  * provides default concrete behavior for all nsITransaction methods.
  */
 class SetDocTitleTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = SET_DOC_TITLE_TXN_CID; return iid; }
-
   /** Initialize the transaction.
     * @param aEditor the object providing core editing operations
     * @param aValue  the new value for document title
     */
   NS_IMETHOD Init(nsIHTMLEditor  *aEditor,
                   const nsAString *aValue);
+  SetDocTitleTxn();
 private:
-  SetDocTitleTxn();
   nsresult SetDomTitle(const nsAString& aTitle);
 
 public:
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction();
   NS_IMETHOD GetIsTransient(PRBool *aIsTransient);
 
@@ -84,13 +76,11 @@ protected:
   /** The new title string */
   nsString    mValue;
 
   /** The previous title string to use for undo */
   nsString    mUndoValue;
 
   /** Set true if we dont' really change the title during Do() */
   PRPackedBool mIsTransient;
-
-  friend class TransactionFactory;
 };
 
 #endif
diff --git a/editor/libeditor/base/SplitElementTxn.h b/editor/libeditor/base/SplitElementTxn.h
--- a/editor/libeditor/base/SplitElementTxn.h
+++ b/editor/libeditor/base/SplitElementTxn.h
@@ -38,47 +38,38 @@
 #ifndef SplitElementTxn_h__
 #define SplitElementTxn_h__
 
 #include "EditTxn.h"
 #include "nsIDOMNode.h"
 #include "nsCOMPtr.h"
 #include "nsIEditor.h"
 
-#define SPLIT_ELEMENT_TXN_CID \
-{/* 690c6290-ac48-11d2-86d8-000064657374 */ \
-0x690c6290, 0xac48, 0x11d2, \
-{0x86, 0xd8, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74} }
-
 class nsEditor;
 
 /**
  * A transaction that splits an element E into two identical nodes, E1 and E2
  * with the children of E divided between E1 and E2.
  */
 class SplitElementTxn : public EditTxn
 {
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = SPLIT_ELEMENT_TXN_CID; return iid; }
-
   /** initialize the transaction.
     * @param aEditor  the provider of core editing operations
     * @param aNode    the node to split
     * @param aOffset  the location within aNode to do the split.
     *                 aOffset may refer to children of aNode, or content of aNode.
     *                 The left node will have child|content 0..aOffset-1.
     */
   NS_IMETHOD Init (nsEditor   *aEditor,
                    nsIDOMNode *aNode,
                    PRInt32     aOffset);
-protected:
+
   SplitElementTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(SplitElementTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
   NS_IMETHOD RedoTransaction(void);
 
   NS_IMETHOD GetNewNode(nsIDOMNode **aNewNode);
@@ -95,14 +86,11 @@ protected:
   PRInt32  mOffset;
 
   /** the element we create when splitting mElement */
   nsCOMPtr<nsIDOMNode> mNewLeftNode;
 
   /** the parent shared by mExistingRightNode and mNewLeftNode */
   nsCOMPtr<nsIDOMNode> mParent;
   nsEditor*  mEditor;
-
-  friend class TransactionFactory;
-
 };
 
 #endif
diff --git a/editor/libeditor/base/TransactionFactory.cpp b/editor/libeditor/base/TransactionFactory.cpp
deleted file mode 100644
--- a/editor/libeditor/base/TransactionFactory.cpp
+++ /dev/null
@@ -1,120 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1998
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *   Daniel Glazman <glazman@netscape.com>
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the "GPL"),
- * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include "TransactionFactory.h"
-// transactions this factory knows how to build
-#include "EditAggregateTxn.h"
-#include "PlaceholderTxn.h"
-#include "InsertTextTxn.h"
-#include "DeleteTextTxn.h"
-#include "CreateElementTxn.h"
-#include "InsertElementTxn.h"
-#include "DeleteElementTxn.h"
-#include "DeleteRangeTxn.h"
-#include "ChangeAttributeTxn.h"
-#include "SplitElementTxn.h"
-#include "JoinElementTxn.h"
-#include "nsStyleSheetTxns.h"
-#include "IMETextTxn.h"
-
-#ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
-#include "SetDocTitleTxn.h"
-#include "ChangeCSSInlineStyleTxn.h"
-#endif // MOZILLA_PLAINTEXT_EDITOR_ONLY
-
-TransactionFactory::TransactionFactory()
-{
-}
-
-TransactionFactory::~TransactionFactory()
-{
-}
-
-nsresult
-TransactionFactory::GetNewTransaction(REFNSIID aTxnType, EditTxn **aResult)
-{
-  nsresult result = NS_OK;
-  *aResult = nsnull;
-  if (aTxnType.Equals(InsertTextTxn::GetCID()))
-    *aResult = new InsertTextTxn();
-  else if (aTxnType.Equals(DeleteTextTxn::GetCID()))
-    *aResult = new DeleteTextTxn();
-  else if (aTxnType.Equals(CreateElementTxn::GetCID()))
-    *aResult = new CreateElementTxn();
-  else if (aTxnType.Equals(InsertElementTxn::GetCID()))
-    *aResult = new InsertElementTxn();
-  else if (aTxnType.Equals(DeleteElementTxn::GetCID()))
-    *aResult = new DeleteElementTxn();
-  else if (aTxnType.Equals(DeleteRangeTxn::GetCID()))
-    *aResult = new DeleteRangeTxn();
-  else if (aTxnType.Equals(ChangeAttributeTxn::GetCID()))
-    *aResult = new ChangeAttributeTxn();
-#ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
-  else if (aTxnType.Equals(ChangeCSSInlineStyleTxn::GetCID()))
-    *aResult = new ChangeCSSInlineStyleTxn();
-#endif // MOZILLA_PLAINTEXT_EDITOR_ONLY
-  else if (aTxnType.Equals(SplitElementTxn::GetCID()))
-    *aResult = new SplitElementTxn();
-  else if (aTxnType.Equals(JoinElementTxn::GetCID()))
-    *aResult = new JoinElementTxn();
-  else if (aTxnType.Equals(EditAggregateTxn::GetCID()))
-    *aResult = new EditAggregateTxn();
-  else if (aTxnType.Equals(IMETextTxn::GetCID()))
-    *aResult = new IMETextTxn();
-  else if (aTxnType.Equals(AddStyleSheetTxn::GetCID()))
-    *aResult = new AddStyleSheetTxn();
-  else if (aTxnType.Equals(RemoveStyleSheetTxn::GetCID()))
-    *aResult = new RemoveStyleSheetTxn();
-#ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
-  else if (aTxnType.Equals(SetDocTitleTxn::GetCID()))
-    *aResult = new SetDocTitleTxn();
-#endif // MOZILLA_PLAINTEXT_EDITOR_ONLY
-  else if (aTxnType.Equals(PlaceholderTxn::GetCID()))
-    *aResult = new PlaceholderTxn();
-  else
-    result = NS_ERROR_NO_INTERFACE;
-  
-  if (NS_SUCCEEDED(result) && !*aResult)
-    result = NS_ERROR_OUT_OF_MEMORY;
-
-  if (NS_SUCCEEDED(result))
-    NS_ADDREF(*aResult);
-
-  return result;
-}
-
diff --git a/editor/libeditor/base/TransactionFactory.h b/editor/libeditor/base/TransactionFactory.h
deleted file mode 100644
--- a/editor/libeditor/base/TransactionFactory.h
+++ /dev/null
@@ -1,64 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1998
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the "GPL"),
- * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#ifndef TransactionFactory_h__
-#define TransactionFactory_h__
-
-#include "nsISupports.h"
-
-class EditTxn;
-
-/**
- * This class instantiates and optionally recycles edit transactions
- * A recycler would be a separate static object, since this class does not get instantiated
- */
-class TransactionFactory
-{
-protected:
-  TransactionFactory();
-  virtual ~TransactionFactory();
-
-public:
-  /** return a transaction object of aTxnType, refcounted 
-    * @return NS_ERROR_NO_INTERFACE if aTxnType is unknown, 
-    *         NS_ERROR_OUT_OF_MEMORY if the allocations fails.
-    */
-  static nsresult GetNewTransaction(REFNSIID aTxnType, EditTxn **aResult);
-
-};
-
-#endif
diff --git a/editor/libeditor/base/nsStyleSheetTxns.h b/editor/libeditor/base/nsStyleSheetTxns.h
--- a/editor/libeditor/base/nsStyleSheetTxns.h
+++ b/editor/libeditor/base/nsStyleSheetTxns.h
@@ -38,76 +38,53 @@
 #ifndef nsStylesheetTxns_h__
 #define nsStylesheetTxns_h__
 
 #include "EditTxn.h"
 #include "nsCOMPtr.h"
 #include "nsIEditor.h"
 #include "nsICSSStyleSheet.h"
 
-#define ADD_STYLESHEET_TXN_CID \
-{/* d05e2980-2fbe-11d3-9ce4-e8393835307c */ \
-0xd05e2980, 0x2fbe, 0x11d3, { 0x9c, 0xe4, 0xe8, 0x39, 0x38, 0x35, 0x30, 0x7c } }
-
-#define REMOVE_STYLESHEET_TXN_CID \
-{/* d05e2981-2fbe-11d3-9ce4-e8393835307c */ \
-0xd05e2981, 0x2fbe, 0x11d3, { 0x9c, 0xe4, 0xe8, 0x39, 0x38, 0x35, 0x30, 0x7c } }
-
-
 class AddStyleSheetTxn : public EditTxn
 {
-  friend class TransactionFactory;
-
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = ADD_STYLESHEET_TXN_CID; return iid; }
-
   /** Initialize the transaction.
     * @param aEditor the object providing core editing operations
     * @param aSheet   the stylesheet to add
     */
   NS_IMETHOD Init(nsIEditor         *aEditor,
                   nsICSSStyleSheet  *aSheet);
 
-private:
   AddStyleSheetTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(AddStyleSheetTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
 protected:
 
   nsIEditor*  mEditor;									// the editor that created this transaction
   nsCOMPtr<nsICSSStyleSheet>	mSheet;		// the style sheet to add
   
 };
 
 
 class RemoveStyleSheetTxn : public EditTxn
 {
-  friend class TransactionFactory;
-
 public:
-
-  static const nsIID& GetCID() { static const nsIID iid = REMOVE_STYLESHEET_TXN_CID; return iid; }
-
   /** Initialize the transaction.
     * @param aEditor the object providing core editing operations
     * @param aSheet   the stylesheet to remove
     */
   NS_IMETHOD Init(nsIEditor         *aEditor,
                   nsICSSStyleSheet  *aSheet);
 	
-private:
   RemoveStyleSheetTxn();
 
-public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(RemoveStyleSheetTxn, EditTxn)
   NS_IMETHOD QueryInterface(REFNSIID aIID, void** aInstancePtr);
 
   NS_DECL_EDITTXN
 
 protected:
 
   nsIEditor*  mEditor;									// the editor that created this transaction

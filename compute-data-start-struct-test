Add test that the nsRuleNode::Compute*Data functions don't touch aStartStruct when they shouldn't.

diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -79,6 +79,7 @@ _TEST_FILES =	test_bug74880.html \
 		test_bug379741.html \
 		test_bug383075.html \
 		test_bug387615.html \
+		test_compute_data_with_start_struct.html \
 		test_dont_use_document_colors.html \
 		test_inherit_storage.html \
 		test_inherit_computation.html \
diff --git a/layout/style/test/test_compute_data_with_start_struct.html b/layout/style/test/test_compute_data_with_start_struct.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_compute_data_with_start_struct.html
@@ -0,0 +1,115 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Test for correct handling of aStartStruct parameter to nsRuleNode::Compute*Data</title>
+  <script type="text/javascript" src="/MochiKit/MochiKit.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="property_database.js"></script>
+  <style type="text/css" id="stylesheet"></style>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+</head>
+<body>
+<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=216456">Mozilla Bug 216456</a>
+<p id="display">
+  <span id="test"></span>
+</p>
+<div id="content" style="display: none">
+  
+</div>
+<pre id="test">
+<script class="testbody" type="text/javascript">
+
+var gNoComputedStyle = {
+  "-moz-force-broken-image-icon": true,
+  "-moz-border-end": true, // NB: shorthand
+  "-moz-border-end-color": true,
+  "-moz-border-end-style": true,
+  "-moz-border-end-width": true,
+  "-moz-border-start": true, // NB: shorthand
+  "-moz-border-start-color": true,
+  "-moz-border-start-style": true,
+  "-moz-border-start-width": true,
+  "-moz-margin-end": true,
+  "-moz-margin-start": true,
+  "-moz-padding-end": true,
+  "-moz-padding-start": true,
+  "background-position": true,
+  "content": true,
+  "page-break-after": true,
+  "page-break-before": true,
+  "quotes": true,
+  "clip-path": true,
+  "clip-rule": true,
+  "color-interpolation": true,
+  "color-interpolation-filters": true,
+  "dominant-baseline": true,
+  "fill": true,
+  "fill-opacity": true,
+  "fill-rule": true,
+  "filter": true,
+  "flood-color": true,
+  "flood-opacity": true,
+  "marker": true, // NB: shorthand
+  "marker-end": true,
+  "marker-mid": true,
+  "marker-start": true,
+  "mask": true,
+  "pointer-events": true,
+  "shape-rendering": true,
+  "stop-color": true,
+  "stop-opacity": true,
+  "stroke": true,
+  "stroke-dasharray": true,
+  "stroke-dashoffset": true,
+  "stroke-linecap": true,
+  "stroke-linejoin": true,
+  "stroke-miterlimit": true,
+  "stroke-opacity": true,
+  "stroke-width": true,
+  "text-anchor": true,
+  "text-rendering": true,
+};
+
+var gStyleSheet = document.getElementById("stylesheet").sheet;
+var gRule1 = gStyleSheet.cssRules[gStyleSheet.insertRule("#test {}", gStyleSheet.cssRules.length)];
+var gRule2 = gStyleSheet.cssRules[gStyleSheet.insertRule("#test {}", gStyleSheet.cssRules.length)];
+
+var gTest = getComputedStyle(document.getElementById("test"), "");
+
+for (var prop in gCSSProperties) {
+  var info = gCSSProperties[prop];
+  gRule1.style.setProperty(prop, info.other_values[0], "");
+  gRule2.style.setProperty(prop, info.initial_values[0], "");
+}
+
+for (var prop in gCSSProperties) {
+  var info = gCSSProperties[prop];
+  if (info.backend_only || info.type == CSS_TYPE_TRUE_SHORTHAND)
+    continue;
+
+  if ("prerequisites" in info) {
+    for (var prereq in info.prerequisites) {
+      gRule2.style.setProperty(prereq, info.prerequisites[prereq], "");
+    }
+  }
+
+  var initial_val = gTest.getPropertyValue(prop);
+  gRule2.style.setProperty(prop, info.other_values[0], "");
+  var other_val = gTest.getPropertyValue(prop);
+  ((prop in gNoComputedStyle) ? todo_isnot : isnot)(initial_val, other_val, "initial and other values of " + prop + " are different");
+  gRule2.style.removeProperty(prop);
+  is(gTest.getPropertyValue(prop), other_val, prop + " is not touched when its value comes from aStartStruct");
+
+  gRule2.style.setProperty(prop, info.initial_values[0], "");
+  if ("prerequisites" in info) {
+    for (var prereq in info.prerequisites) {
+      gRule2.style.setProperty(prereq, gCSSProperties[prereq].initial_values[0], "");
+    }
+  }
+
+}
+
+</script>
+</pre>
+</body>
+</html>

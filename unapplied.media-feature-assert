From: L. David Baron <dbaron@dbaron.org>

Bug 1089417 patch 12 - Assert about caller flushing pending media feature changes.

FIXME: Probably remove this post 1435939 (12ca97022384d5461f597088f6941c85c213197d).

diff --git a/layout/base/nsPresContext.h b/layout/base/nsPresContext.h
--- a/layout/base/nsPresContext.h
+++ b/layout/base/nsPresContext.h
@@ -299,16 +299,19 @@ public:
 
     if (!mPendingMediaFeatureValuesChange) {
       mPendingMediaFeatureValuesChange.emplace(aChange);
       return;
     }
 
     *mPendingMediaFeatureValuesChange |= aChange;
   }
+  bool HasPendingMediaFeatureValuesChanged() const {
+    return mPendingMediaFeatureValuesChanged;
+  }
 
   void FlushPendingMediaFeatureValuesChanged();
 
   /**
    * Calls MediaFeatureValuesChanged for this pres context and all descendant
    * subdocuments that have a pres context. This should be used for media
    * features that must be updated in all subdocuments e.g. display-mode.
    */
diff --git a/layout/style/nsCSSRuleProcessor.cpp b/layout/style/nsCSSRuleProcessor.cpp
--- a/layout/style/nsCSSRuleProcessor.cpp
+++ b/layout/style/nsCSSRuleProcessor.cpp
@@ -3426,16 +3426,20 @@ static int CompareWeightData(const void*
   const PerWeightData* arg1 = static_cast<const PerWeightData*>(aArg1);
   const PerWeightData* arg2 = static_cast<const PerWeightData*>(aArg2);
   return arg1->mWeight - arg2->mWeight; // put lower weight first
 }
 
 RuleCascadeData*
 nsCSSRuleProcessor::GetRuleCascade(nsPresContext* aPresContext)
 {
+  NS_ASSERTION(!aPresContext->HasPendingMediaFeatureValuesChanged(),
+               "caller didn't flush pending media feature changes, "
+               "which means the restyles we need to do for those changes "
+               "will be lost");
   // FIXME:  Make this infallible!
 
   // If anything changes about the presentation context, we will be
   // notified.  Otherwise, our cache is valid if mLastPresContext
   // matches aPresContext.  (The only rule processors used for multiple
   // pres contexts are for XBL.  These rule processors are probably less
   // likely to have @media rules, and thus the cache is pretty likely to
   // hit instantly even when we're switching between pres contexts.)

From: L. David Baron <dbaron@dbaron.org>

Share GatherURL in ParseNameSpaceRule.  (Bug 604179)

Note that this adds a missing UngetToken(), which affects the other
consumer of GatherURL, parsing of @import rules.

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -1570,16 +1570,17 @@ CSSParserImpl::GatherURL(nsString& aURL)
     aURL = mToken.mIdent;
     return PR_TRUE;
   }
   else if (eCSSToken_Function == mToken.mType &&
            mToken.mIdent.LowerCaseEqualsLiteral("url") &&
            GetURLInParens(aURL)) {
     return PR_TRUE;
   }
+  UngetToken();
   return PR_FALSE;
 }
 
 PRBool
 CSSParserImpl::ParseMediaQuery(PRBool aInAtRule,
                                nsMediaQuery **aQuery,
                                PRBool *aParsedSomething,
                                PRBool *aHitStop)
@@ -2091,43 +2092,31 @@ CSSParserImpl::ParseNameSpaceRule(RuleAp
   }
 
   nsAutoString  prefix;
   nsAutoString  url;
 
   if (eCSSToken_Ident == mToken.mType) {
     prefix = mToken.mIdent;
     // user-specified identifiers are case-sensitive (bug 416106)
-    if (! GetToken(PR_TRUE)) {
+  } else {
+    UngetToken();
+  }
+
+  if (!GatherURL(url) || !ExpectSymbol(';', PR_TRUE)) {
+    if (mHavePushBack) {
+      REPORT_UNEXPECTED_TOKEN(PEAtNSUnexpected);
+    } else {
       REPORT_UNEXPECTED_EOF(PEAtNSURIEOF);
-      return PR_FALSE;
-    }
-  }
-
-  if (eCSSToken_String == mToken.mType) {
-    url = mToken.mIdent;
-    if (ExpectSymbol(';', PR_TRUE)) {
-      ProcessNameSpace(prefix, url, aAppendFunc, aData);
-      return PR_TRUE;
-    }
-  }
-  else if ((eCSSToken_Function == mToken.mType) &&
-           (mToken.mIdent.LowerCaseEqualsLiteral("url"))) {
-    if (GetURLInParens(url) &&
-        ExpectSymbol(';', PR_TRUE)) {
-      ProcessNameSpace(prefix, url, aAppendFunc, aData);
-      return PR_TRUE;
-    }
-  }
-  else {
-    UngetToken();
-  }
-  REPORT_UNEXPECTED_TOKEN(PEAtNSUnexpected);
-
-  return PR_FALSE;
+    }
+    return PR_FALSE;
+  }
+
+  ProcessNameSpace(prefix, url, aAppendFunc, aData);
+  return PR_TRUE;
 }
 
 void
 CSSParserImpl::ProcessNameSpace(const nsString& aPrefix,
                                 const nsString& aURLSpec,
                                 RuleAppendFunc aAppendFunc,
                                 void* aData)
 {

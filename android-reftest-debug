From: L. David Baron <dbaron@dbaron.org>

Debugging code for android reftest issue.  (Bug 627842)  DO NOT CHECK IN

diff --git a/layout/generic/nsTextFrameThebes.cpp b/layout/generic/nsTextFrameThebes.cpp
--- a/layout/generic/nsTextFrameThebes.cpp
+++ b/layout/generic/nsTextFrameThebes.cpp
@@ -557,16 +557,29 @@ MakeTextRun(const PRUnichar *aText, PRUi
             PRUint32 aFlags)
 {
     nsAutoPtr<gfxTextRun> textRun;
     if (aLength == 0) {
         textRun = aFontGroup->MakeEmptyTextRun(aParams, aFlags);
     } else if (aLength == 1 && aText[0] == ' ') {
         textRun = aFontGroup->MakeSpaceTextRun(aParams, aFlags);
     } else {
+#ifdef ANDROID
+        if (aLength == 5) {
+          if (!nsCRT::strcmp(aText, NS_LITERAL_STRING("Hello").get())) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'Hello' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          } else if (!nsCRT::strcmp(aText, NS_LITERAL_STRING("World").get())) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'World' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          }
+        } else if (aLength == 10) {
+          if (!nsCRT::strcmp(aText, NS_LITERAL_STRING("HelloWorld").get())) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'HelloWorld' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          }
+        }
+#endif
         textRun = gfxTextRunWordCache::MakeTextRun(aText, aLength, aFontGroup,
             aParams, aFlags);
     }
     if (!textRun)
         return nsnull;
     nsresult rv = gTextRuns->AddObject(textRun);
     if (NS_FAILED(rv)) {
         gTextRuns->RemoveFromCache(textRun);
@@ -584,16 +597,29 @@ MakeTextRun(const PRUint8 *aText, PRUint
             PRUint32 aFlags)
 {
     nsAutoPtr<gfxTextRun> textRun;
     if (aLength == 0) {
         textRun = aFontGroup->MakeEmptyTextRun(aParams, aFlags);
     } else if (aLength == 1 && aText[0] == ' ') {
         textRun = aFontGroup->MakeSpaceTextRun(aParams, aFlags);
     } else {
+#ifdef ANDROID
+        if (aLength == 5) {
+          if (!nsCRT::strcmp(reinterpret_cast<const char*>(aText), "Hello")) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'Hello' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          } else if (!nsCRT::strcmp(reinterpret_cast<const char*>(aText), "World")) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'World' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          }
+        } else if (aLength == 10) {
+          if (!nsCRT::strcmp(reinterpret_cast<const char*>(aText), "HelloWorld")) {
+              __android_log_print(ANDROID_LOG_INFO, "Gecko", "Rendering 'HelloWorld' at font size %.16f\n", aFontGroup->GetStyle()->size);
+          }
+        }
+#endif
         textRun = gfxTextRunWordCache::MakeTextRun(aText, aLength, aFontGroup,
             aParams, aFlags);
     }
     if (!textRun)
         return nsnull;
     nsresult rv = gTextRuns->AddObject(textRun);
     if (NS_FAILED(rv)) {
         gTextRuns->RemoveFromCache(textRun);

From: L. David Baron <dbaron@dbaron.org>

OMTA test tweaks.

diff --git a/layout/style/test/test_animations_omta_start.html b/layout/style/test/test_animations_omta_start.html
--- a/layout/style/test/test_animations_omta_start.html
+++ b/layout/style/test/test_animations_omta_start.html
@@ -140,41 +140,53 @@ function testTransitionTakingOver() {
   child.style.transform = "inherit";
   child.style.transition = "10s transform linear";
   child.style.opacity = "1.0";
 
   var childCS = getComputedStyle(child, "");
 
   gUtils.advanceTimeAndRefresh(0);
   waitForAllPaints(function() {
-    gUtils.advanceTimeAndRefresh(4000);
+    gUtils.advanceTimeAndRefresh(100);
+    waitForAllPaints(function() {
+    gUtils.advanceTimeAndRefresh(3900);
     waitForAllPaints(function() {
       child.style.transform = "translate(100px)";
       var transform = gUtils.getOMTAStyle(child, "transform");
       // FIXME Bug 1031688: Bug with inheritance!
-      todo_is(transform, "matrix(1, 0, 0, 1, 40, 0)",
+      is(transform, "matrix(1, 0, 0, 1, 40, 0)",
          "transition that interrupted animation is correct");
       gUtils.advanceTimeAndRefresh(0);
       waitForAllPaints(function() {
+      gUtils.advanceTimeAndRefresh(0);
+      waitForAllPaints(function() {
         var transform = gUtils.getOMTAStyle(child, "transform");
         is(transform, "matrix(1, 0, 0, 1, 40, 0)",
            "transition that interrupted animation is correct");
-        gUtils.advanceTimeAndRefresh(5000);
+        gUtils.advanceTimeAndRefresh(100);
+        waitForAllPaints(function() {
+        gUtils.advanceTimeAndRefresh(100);
+        waitForAllPaints(function() {
+        gUtils.advanceTimeAndRefresh(4900);
         waitForAllPaints(function() {
           var transform = gUtils.getOMTAStyle(child, "transform");
           is(transform, "matrix(1, 0, 0, 1, 70, 0)",
              "transition that interrupted animation is correct");
           is(childCS.transform, "matrix(1, 0, 0, 1, 70, 0)",
              "transition that interrupted animation is correct");
           parent.removeAttribute("style");
           child.removeAttribute("style");
           gUtils.restoreNormalRefresh();
           testTransitionTakingOver2();
         });
+        });
+        });
       });
+      });
+    });
     });
   });
 }
 
 // This is identical to testTransitionTakingOver except that the
 // transition has a shorter time.  This exhibits different behavior in
 // cases where, because of the strange behavior of the transitions spec
 // where the interpolated value at the start of an animation has a
@@ -194,42 +206,55 @@ function testTransitionTakingOver2() {
   child.style.transform = "inherit";
   child.style.transition = "1s transform linear";
   child.style.opacity = "1.0";
 
   var childCS = getComputedStyle(child, "");
 
   gUtils.advanceTimeAndRefresh(0);
   waitForAllPaints(function() {
-    gUtils.advanceTimeAndRefresh(4000);
+    gUtils.advanceTimeAndRefresh(100);
+    waitForAllPaints(function() {
+    gUtils.advanceTimeAndRefresh(3900);
     waitForAllPaints(function() {
       child.style.transform = "translate(100px)";
       var transform = gUtils.getOMTAStyle(child, "transform");
       // FIXME Bug 1031688: Bug with inheritance!
-      todo_is(transform, "matrix(1, 0, 0, 1, 40, 0)",
+      is(transform, "matrix(1, 0, 0, 1, 40, 0)",
          "transition that interrupted animation is correct");
       gUtils.advanceTimeAndRefresh(0);
       waitForAllPaints(function() {
+      gUtils.advanceTimeAndRefresh(0);
+      waitForAllPaints(function() {
         var transform = gUtils.getOMTAStyle(child, "transform");
         // FIXME Bug 1031688 (intermittent): Bug with inheritance!
-        //is(transform, "matrix(1, 0, 0, 1, 40, 0)",
-        //   "transition that interrupted animation is correct");
-        gUtils.advanceTimeAndRefresh(500);
+        is(transform, "matrix(1, 0, 0, 1, 40, 0)",
+           "transition that interrupted animation is correct");
+        gUtils.advanceTimeAndRefresh(100);
+        waitForAllPaints(function() {
+        gUtils.advanceTimeAndRefresh(100);
+        waitForAllPaints(function() {
+        gUtils.advanceTimeAndRefresh(300);
         waitForAllPaints(function() {
           var transform = gUtils.getOMTAStyle(child, "transform");
           is(transform, "matrix(1, 0, 0, 1, 70, 0)",
              "transition that interrupted animation is correct");
           is(childCS.transform, "matrix(1, 0, 0, 1, 70, 0)",
              "transition that interrupted animation is correct");
+          is(true, false, "got modified test");
           parent.removeAttribute("style");
           child.removeAttribute("style");
           gUtils.restoreNormalRefresh();
           SimpleTest.finish();
         });
+        });
+        });
       });
+      });
+    });
     });
   });
 }
 
 </script>
 </pre>
 </body>
 </html>

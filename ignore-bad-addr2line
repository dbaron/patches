From: L. David Baron <dbaron@dbaron.org>

Bug 914253 patch 8 - Ignore useless results from addr2line and keep what we had before, like fix-linux-stack.pl does.  No review.

DONTBUILD

diff --git a/tools/rb/fix_linux_stack.py b/tools/rb/fix_linux_stack.py
--- a/tools/rb/fix_linux_stack.py
+++ b/tools/rb/fix_linux_stack.py
@@ -219,33 +219,38 @@ def addressToSymbol(file, address):
         (converter, address_adjustment, cache) = addr2lines[file]
     if address in cache:
         return cache[address]
     result = converter.convert(hex(int(address, 16) + address_adjustment))
     cache[address] = result
     return result
 
 line_re = re.compile("^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$")
-balance_tree_re = re.compile("^([ \|0-9-]*)")
+balance_tree_re = re.compile("^([ \|0-9-]*)(.*)$")
 
 def fixSymbols(line):
     result = line_re.match(line)
     if result is not None:
         # before allows preservation of balance trees
         # after allows preservation of counts
         (before, file, address, after) = result.groups()
 
         if os.path.exists(file) and os.path.isfile(file):
+            # throw away the bad symbol, but keep balance tree structure
+            (before, badsymbol) = balance_tree_re.match(before).groups()
+
             (name, fileline) = addressToSymbol(file, address)
-            info = "%s (%s)" % (name, fileline)
 
-            # throw away the bad symbol, but keep balance tree structure
-            before = balance_tree_re.match(before).groups()[0]
+            # If addr2line gave us something useless, keep what we had before.
+            if name == "??":
+                name = badsymbol
+            if fileline == "??:0" or fileline == "??:?":
+                fileline = file
 
-            return before + info + after + "\n"
+            return "%s%s (%s)%s\n" % (before, name, fileline, after)
         else:
             sys.stderr.write("Warning: File \"" + file + "\" does not exist.\n")
             return line
     else:
         return line
 
 if __name__ == "__main__":
     for line in sys.stdin:

From: L. David Baron <dbaron@dbaron.org>

Fix assertion about float manager state by restoring old float manager state when we place a float and then cancel that placement.  (Bug 563584)

diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -571,31 +571,39 @@ nsBlockReflowState::AddFloat(nsLineLayou
   // don't let this one go on the current line, since that would violate
   // float ordering.
   nsRect floatAvailableSpace = GetFloatAvailableSpace().mRect;
   if (!aLineLayout ||
       (mBelowCurrentLineFloats.IsEmpty() &&
        (aLineLayout->LineIsEmpty() ||
         mBlock->ComputeFloatWidth(*this, floatAvailableSpace, aFloat)
         <= aAvailableWidth))) {
+    nsFloatManager::SavedState floatManagerState;
+    mFloatManager->PushState(&floatManagerState);
+
     // And then place it
     placed = FlowAndPlaceFloat(aFloat, aReflowStatus);
     if (placed && !NS_FRAME_IS_TRUNCATED(aReflowStatus)) {
       // Pass on updated available space to the current inline reflow engine
       nsFlowAreaRect floatAvailSpace = GetFloatAvailableSpace(mY);
       nsRect availSpace(nsPoint(floatAvailSpace.mRect.x + BorderPadding().left,
                                 mY),
                         floatAvailSpace.mRect.Size());
       if (aLineLayout) {
         aLineLayout->UpdateBand(availSpace, aFloat);
         // Record this float in the current-line list
         mCurrentLineFloats.Append(mFloatCacheFreeList.Alloc(aFloat));
       }
     }
     else {
+      if (placed) {
+        mFloatManager->PopState(&floatManagerState);
+      } else {
+        mFloatManager->AssertStateMatches(&floatManagerState);
+      }
       if (IsAdjacentWithTop()) {
         // Pushing the line to the next page won't give us any more space;
         // therefore, we break.
         NS_ASSERTION(aLineLayout->LineIsBreakable(),
                      "We can't get here unless forceFit is false");
         aReflowStatus = NS_INLINE_LINE_BREAK_BEFORE();
       } else {
         // Make sure we propagate the truncated status; this signals the

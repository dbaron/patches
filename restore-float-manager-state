From: L. David Baron <dbaron@dbaron.org>

Fix assertion about float manager state by restoring old float manager state when we place a float and then cancel that placement.  (Bug 563584)  (FIXME: make testcases the right size (the pages are smaller than I thought))

diff --git a/layout/generic/crashtests/563584-1.html b/layout/generic/crashtests/563584-1.html
new file mode 100644
--- /dev/null
+++ b/layout/generic/crashtests/563584-1.html
@@ -0,0 +1,23 @@
+<html class="reftest-print">
+<head>
+<style type="text/css">
+
+ div{
+   border: 1px solid green; 
+ }
+
+
+ </style>
+</head>
+<body>
+
+
+ <div style="width:3in; float:left">
+    <div style="width:1in; height:3.5in;">A</div>
+    <div style="width:1in; height:0.5in;">B</div>
+</div>
+
+
+<div style="float:left; width:4in; height: 0.5in">C</div>
+
+<div style="float:left; width:4in; height: 0.5in">D</div>
diff --git a/layout/generic/crashtests/563584-2.html b/layout/generic/crashtests/563584-2.html
new file mode 100644
--- /dev/null
+++ b/layout/generic/crashtests/563584-2.html
@@ -0,0 +1,25 @@
+<html class="reftest-print">
+<head>
+<style type="text/css">
+
+ div{
+   border: 1px solid green; 
+ }
+
+
+ </style>
+</head>
+<body>
+
+
+ <div style="width:3in; float:left">
+    <div style="width:1in; height:3.5in;">A</div>
+    <div style="width:1in; height:0.5in;">B</div>
+</div>
+c
+
+<div style="float:left; width:4in; height: 0.5in">C</div>
+d
+
+<div style="float:left; width:4in; height: 0.5in">D</div>
+e
diff --git a/layout/generic/crashtests/crashtests.list b/layout/generic/crashtests/crashtests.list
--- a/layout/generic/crashtests/crashtests.list
+++ b/layout/generic/crashtests/crashtests.list
@@ -317,11 +317,13 @@ load 534366-1.html
 load 534366-2.html
 load 541277-1.html
 load 541277-2.html
 load 541714-1.html
 load 541714-2.html
 load 547338.xul
 load 547843-1.xhtml
 load 551635-1.html
+== 563584-1.html about:blank # temporary to cause image dump
+== 563584-2.html about:blank # temporary to cause image dump
 load 564368-1.xhtml
 load 564968.xhtml
 load 571618-1.svg
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -569,16 +569,19 @@ nsBlockReflowState::AddFloat(nsLineLayou
   // don't let this one go on the current line, since that would violate
   // float ordering.
   nsRect floatAvailableSpace = GetFloatAvailableSpace().mRect;
   if (!aLineLayout ||
       (mBelowCurrentLineFloats.IsEmpty() &&
        (aLineLayout->LineIsEmpty() ||
         mBlock->ComputeFloatWidth(*this, floatAvailableSpace, aFloat)
         <= aAvailableWidth))) {
+    nsFloatManager::SavedState floatManagerState;
+    mFloatManager->PushState(&floatManagerState);
+
     // And then place it
     // force it to fit if we're at the top of the block and we can't
     // break before this
     PRBool forceFit = !aLineLayout ||
                       (IsAdjacentWithTop() && !aLineLayout->LineIsBreakable());
     placed = FlowAndPlaceFloat(aFloat, aReflowStatus, forceFit);
     NS_ASSERTION(placed || !forceFit,
                  "If we asked for force-fit, it should have been placed");
@@ -594,16 +597,21 @@ nsBlockReflowState::AddFloat(nsLineLayou
         // Record this float in the current-line list
         mCurrentLineFloats.Append(mFloatCacheFreeList.Alloc(aFloat));
       }
       // If we can't break here, hide the fact that it's truncated
       // XXX We can probably do this more cleanly
       aReflowStatus &= ~NS_FRAME_TRUNCATED;
     }
     else {
+      if (placed) {
+        mFloatManager->PopState(&floatManagerState);
+      } else {
+        mFloatManager->AssertStateMatches(&floatManagerState);
+      }
       if (IsAdjacentWithTop()) {
         // Pushing the line to the next page won't give us any more space;
         // therefore, we break.
         NS_ASSERTION(aLineLayout->LineIsBreakable(),
                      "We can't get here unless forceFit is false");
         aReflowStatus = NS_INLINE_LINE_BREAK_BEFORE();
       } else {
         // Make sure we propagate the truncated status; this signals the

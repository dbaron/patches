From: L. David Baron <dbaron@dbaron.org>

Correctly handle non-repeating radial gradients in which all stops are at the same position.  (Bug 635222)  r=roc

diff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp
+++ b/layout/base/nsCSSRendering.cpp
@@ -2069,24 +2069,27 @@ nsCSSRendering::PaintGradient(nsPresCont
   }
 
   double lastStop = stops[stops.Length() - 1].mPosition;
   // Cairo gradients must have stop positions in the range [0, 1]. So,
   // stop positions will be normalized below by subtracting firstStop and then
   // multiplying by stopScale.
   double stopScale;
   double stopDelta = lastStop - firstStop;
-  if (stopDelta < 1e-6 || lineLength < 1e-6 ||
-      (aGradient->mShape != NS_STYLE_GRADIENT_SHAPE_LINEAR &&
-       (radiusX < 1e-6 || radiusY < 1e-6))) {
+  PRBool zeroRadius = aGradient->mShape != NS_STYLE_GRADIENT_SHAPE_LINEAR &&
+                      (radiusX < 1e-6 || radiusY < 1e-6);
+  if (stopDelta < 1e-6 || lineLength < 1e-6 || zeroRadius) {
     // Stops are all at the same place. Map all stops to 0.0.
-    // For radial gradients we need to fill with the last stop color,
-    // so just set both radii to 0.
+    // For repeating radial gradients, or for any radial gradients with
+    // a zero radius, we need to fill with the last stop color, so just set
+    // both radii to 0.
     stopScale = 0.0;
-    radiusX = radiusY = 0.0;
+    if (aGradient->mRepeating || zeroRadius) {
+      radiusX = radiusY = 0.0;
+    }
     lastStop = firstStop;
   } else {
     stopScale = 1.0/stopDelta;
   }
 
   // Create the gradient pattern.
   nsRefPtr<gfxPattern> gradientPattern;
   if (aGradient->mShape == NS_STYLE_GRADIENT_SHAPE_LINEAR) {
@@ -2110,16 +2113,21 @@ nsCSSRendering::PaintGradient(nsPresCont
   } else {
     NS_ASSERTION(firstStop >= 0.0,
                  "Negative stops not allowed for radial gradients");
 
     // To form an ellipse, we'll stretch a circle vertically, if necessary.
     // So our radii are based on radiusX.
     double innerRadius = radiusX*firstStop;
     double outerRadius = radiusX*lastStop;
+    if (stopScale == 0.0) {
+      // Stops are all at the same place.  See above (except we now have
+      // the inside vs. outside of an ellipse).
+      outerRadius = innerRadius + 1;
+    }
     gradientPattern = new gfxPattern(lineStart.x, lineStart.y, innerRadius,
                                      lineStart.x, lineStart.y, outerRadius);
     if (gradientPattern && radiusX != radiusY) {
       // Stretch the circles into ellipses vertically by setting a transform
       // in the pattern.
       // Recall that this is the transform from user space to pattern space.
       // So to stretch the ellipse by factor of P vertically, we scale
       // user coordinates by 1/P.
@@ -2130,22 +2138,21 @@ nsCSSRendering::PaintGradient(nsPresCont
       gradientPattern->SetMatrix(matrix);
     }
   }
   if (!gradientPattern || gradientPattern->CairoStatus())
     return;
 
   // Now set normalized color stops in pattern.
   if (stopScale == 0.0) {
-    // Non-repeating linear gradient with all stops in same place -> just add
+    // Non-repeating gradient with all stops in same place -> just add
     // first stop and last stop, both at position 0.
-    // Repeating or radial gradient with all stops in the same place -> just
-    // paint the last stop color.
-    if (!aGradient->mRepeating &&
-        aGradient->mShape == NS_STYLE_GRADIENT_SHAPE_LINEAR) {
+    // Repeating gradient with all stops in the same place, or radial
+    // gradient with radius of 0 -> just paint the last stop color.
+    if (!aGradient->mRepeating && !zeroRadius) {
       gradientPattern->AddColorStop(0.0, stops[0].mColor);
     }
     gradientPattern->AddColorStop(0.0, stops[stops.Length() - 1].mColor);
   } else {
     // Use all stops
     for (PRUint32 i = 0; i < stops.Length(); i++) {
       double pos = stopScale*(stops[i].mPosition - firstStop);
       gradientPattern->AddColorStop(pos, stops[i].mColor);
diff --git a/layout/reftests/css-gradients/linear-onestopposition-1-ref.html b/layout/reftests/css-gradients/linear-onestopposition-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/linear-onestopposition-1-ref.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-linear-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-linear-gradient(left, blue 0%, blue 25%, orange 25%, orange 100%);
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/linear-onestopposition-1-ref2.html b/layout/reftests/css-gradients/linear-onestopposition-1-ref2.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/linear-onestopposition-1-ref2.html
@@ -0,0 +1,21 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-linear-gradient() with all stops at the same position</title>
+<style>
+
+#div1 {
+  float: left;
+  width: 50px;
+  height: 200px;
+  background: blue;
+}
+
+#div2 {
+  float: left;
+  width: 150px;
+  height: 200px;
+  background: orange;
+}
+
+</style>
+<div id="div1"></div>
+<div id="div2"></div>
diff --git a/layout/reftests/css-gradients/linear-onestopposition-1.html b/layout/reftests/css-gradients/linear-onestopposition-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/linear-onestopposition-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-linear-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-linear-gradient(left, blue 25%, orange 25%);
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/orange-square.html b/layout/reftests/css-gradients/orange-square.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/orange-square.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>orange square</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background: orange;
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/radial-onestopposition-1-ref.html b/layout/reftests/css-gradients/radial-onestopposition-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/radial-onestopposition-1-ref.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-radial-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-radial-gradient(contain, blue 0%, blue 25%, orange 25%, orange 100%);
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/radial-onestopposition-1.html b/layout/reftests/css-gradients/radial-onestopposition-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/radial-onestopposition-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-radial-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-radial-gradient(contain, blue 25%, orange 25%);
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/reftest.list b/layout/reftests/css-gradients/reftest.list
--- a/layout/reftests/css-gradients/reftest.list
+++ b/layout/reftests/css-gradients/reftest.list
@@ -83,8 +83,14 @@ fails-if(!d2d) == aja-linear-2d.html aja
 == aja-linear-4a.html aja-linear-4-ref.html
 == aja-linear-4b.html aja-linear-4-ref.html
 == aja-linear-5a.html aja-linear-5-ref.html
 fails-if(/Mac\x20OS\x20X\x2010\.5/.test(http.oscpu)) == aja-linear-6a.html aja-linear-6-ref.html # bug 526708
 fails == aja-linear-6b.html aja-linear-6-ref.html # bug 522607
 == height-dependence-1.html height-dependence-1-ref.html
 fails-if(cocoaWidget) == height-dependence-2.html height-dependence-2-ref.html # bug 535007
 == height-dependence-3.html height-dependence-3-ref.html
+
+== linear-onestopposition-1.html linear-onestopposition-1-ref.html
+== linear-onestopposition-1.html linear-onestopposition-1-ref2.html
+== radial-onestopposition-1.html radial-onestopposition-1-ref.html
+== repeating-linear-onestopposition-1.html orange-square.html
+== repeating-radial-onestopposition-1.html orange-square.html
diff --git a/layout/reftests/css-gradients/repeating-linear-onestopposition-1.html b/layout/reftests/css-gradients/repeating-linear-onestopposition-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/repeating-linear-onestopposition-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-repeating-linear-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-repeating-linear-gradient(left, blue 25%, orange 25%);
+}
+
+</style>
+<div></div>
diff --git a/layout/reftests/css-gradients/repeating-radial-onestopposition-1.html b/layout/reftests/css-gradients/repeating-radial-onestopposition-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-gradients/repeating-radial-onestopposition-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<title>Test for -moz-repeating-radial-gradient() with all stops at the same position</title>
+<style>
+
+div {
+  width: 200px;
+  height: 200px;
+  background-image: -moz-repeating-radial-gradient(contain, blue 25%, orange 25%);
+}
+
+</style>
+<div></div>

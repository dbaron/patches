From: L. David Baron <dbaron@dbaron.org>

Make nsStyleContext::FindChildWithRules deal with the visited style context.  (Bug 147777)  r=bzbarsky

diff --git a/layout/style/nsStyleContext.cpp b/layout/style/nsStyleContext.cpp
--- a/layout/style/nsStyleContext.cpp
+++ b/layout/style/nsStyleContext.cpp
@@ -163,30 +163,45 @@ void nsStyleContext::RemoveChild(nsStyle
   aChild->mPrevSibling->mNextSibling = aChild->mNextSibling;
   aChild->mNextSibling->mPrevSibling = aChild->mPrevSibling;
   aChild->mNextSibling = aChild;
   aChild->mPrevSibling = aChild;
 }
 
 already_AddRefed<nsStyleContext>
 nsStyleContext::FindChildWithRules(const nsIAtom* aPseudoTag, 
-                                   nsRuleNode* aRuleNode)
+                                   nsRuleNode* aRuleNode,
+                                   nsRuleNode* aRulesIfVisited,
+                                   PRBool aRelevantLinkVisited)
 {
+  NS_ABORT_IF_FALSE(aRulesIfVisited || !aRelevantLinkVisited,
+    "aRelevantLinkVisited should only be set when we have a separate style");
   PRUint32 threshold = 10; // The # of siblings we're willing to examine
                            // before just giving this whole thing up.
 
   nsStyleContext* result = nsnull;
   nsStyleContext *list = aRuleNode->IsRoot() ? mEmptyChild : mChild;
 
   if (list) {
     nsStyleContext *child = list;
     do {
-      if (child->mRuleNode == aRuleNode && child->mPseudoTag == aPseudoTag) {
-        result = child;
-        break;
+      if (child->mRuleNode == aRuleNode &&
+          child->mPseudoTag == aPseudoTag &&
+          child->RelevantLinkVisited() == aRelevantLinkVisited) {
+        PRBool match = PR_FALSE;
+        if (aRulesIfVisited) {
+          match = child->GetStyleIfVisited() &&
+                  child->GetStyleIfVisited()->mRuleNode == aRulesIfVisited;
+        } else {
+          match = !child->GetStyleIfVisited();
+        }
+        if (match) {
+          result = child;
+          break;
+        }
       }
       child = child->mNextSibling;
       threshold--;
       if (threshold == 0)
         break;
     } while (child != list);
   }
 
diff --git a/layout/style/nsStyleContext.h b/layout/style/nsStyleContext.h
--- a/layout/style/nsStyleContext.h
+++ b/layout/style/nsStyleContext.h
@@ -110,18 +110,27 @@ public:
   nsStyleContext* GetParent() const { return mParent; }
 
   nsIAtom* GetPseudo() const { return mPseudoTag; }
   nsCSSPseudoElements::Type GetPseudoType() const {
     return static_cast<nsCSSPseudoElements::Type>(mBits >>
                                                   NS_STYLE_CONTEXT_TYPE_SHIFT);
   }
 
+  // Find, if it already exists *and is easily findable* (i.e., near the
+  // start of the child list), a style context whose:
+  //  * GetPseudo() matches aPseudoTag
+  //  * GetRuleNode() matches aRules
+  //  * !GetStyleIfVisited() == !aRulesIfVisited, and, if they're
+  //    non-null, GetStyleIfVisited()->GetRuleNode() == aRulesIfVisited
+  //  * RelevantLinkVisited() == aRelevantLinkVisited
   NS_HIDDEN_(already_AddRefed<nsStyleContext>)
-  FindChildWithRules(const nsIAtom* aPseudoTag, nsRuleNode* aRules);
+  FindChildWithRules(const nsIAtom* aPseudoTag, nsRuleNode* aRules,
+                     nsRuleNode* aRulesIfVisited,
+                     PRBool aRelevantLinkVisited);
 
   // Does this style context or any of its ancestors have text
   // decorations?
   PRBool HasTextDecorations() const
     { return !!(mBits & NS_STYLE_HAS_TEXT_DECORATIONS); }
 
   // Does this style context represent the style for a pseudo-element or
   // inherit data from such a style context?  Whether this returns true
diff --git a/layout/style/nsStyleSet.cpp b/layout/style/nsStyleSet.cpp
--- a/layout/style/nsStyleSet.cpp
+++ b/layout/style/nsStyleSet.cpp
@@ -438,17 +438,18 @@ nsStyleSet::GetContext(nsStyleContext* a
                   (aPseudoTag &&
                    nsCSSPseudoElements::GetPseudoType(aPseudoTag) ==
                      aPseudoType),
                   "Pseudo mismatch");
 
   nsStyleContext* result = nsnull;
 
   if (aParentContext)
-    result = aParentContext->FindChildWithRules(aPseudoTag, aRuleNode).get();
+    result = aParentContext->FindChildWithRules(aPseudoTag, aRuleNode,
+                                                nsnull, PR_FALSE).get();
 
 #ifdef NOISY_DEBUG
   if (result)
     fprintf(stdout, "--- SharedSC %d ---\n", ++gSharedCount);
   else
     fprintf(stdout, "+++ NewSC %d +++\n", ++gNewCount);
 #endif
 

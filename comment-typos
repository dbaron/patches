Fix miscellaneous typos in comments that I've had in my tree for ages.

diff --git a/content/xul/document/src/nsXULPrototypeDocument.cpp b/content/xul/document/src/nsXULPrototypeDocument.cpp
--- a/content/xul/document/src/nsXULPrototypeDocument.cpp
+++ b/content/xul/document/src/nsXULPrototypeDocument.cpp
@@ -225,17 +225,18 @@ NS_NewXULPrototypeDocument(nsXULPrototyp
     }
 
     NS_ADDREF(*aResult);
     return rv;
 }
 
 // Helper method that shares a system global among all prototype documents
 // that have the system principal as their security principal.   Called by
-// nsXULPrototypeDocument::Read and nsXULPDGlobalObject::GetGlobalObject.
+// nsXULPrototypeDocument::Read and
+// nsXULPrototypeDocument::GetScriptGlobalObject.
 // This method greatly reduces the number of nsXULPDGlobalObjects and their
 // nsIScriptContexts in apps that load many XUL documents via chrome: URLs.
 
 nsXULPDGlobalObject *
 nsXULPrototypeDocument::NewXULPDGlobalObject()
 {
     // Now compare DocumentPrincipal() to gSystemPrincipal, in order to create
     // gSystemGlobal if the two pointers are equal.  Thus, gSystemGlobal
diff --git a/layout/generic/nsBRFrame.cpp b/layout/generic/nsBRFrame.cpp
--- a/layout/generic/nsBRFrame.cpp
+++ b/layout/generic/nsBRFrame.cpp
@@ -137,17 +137,17 @@ BRFrame::Reflow(nsPresContext* aPresCont
       // creates some vertical whitespace.  It's necessary to use the
       // line-height rather than the font size because the
       // quirks-mode fix that doesn't apply the block's min
       // line-height makes this necessary to make BR cause a line
       // of the full line-height
 
       // We also do this in strict mode because BR should act like a
       // normal inline frame.  That line-height is used is important
-      // here for cases where the line-height is less that 1.
+      // here for cases where the line-height is less than 1.
       nsLayoutUtils::SetFontFromStyle(aReflowState.rendContext, mStyleContext);
       nsCOMPtr<nsIFontMetrics> fm;
       aReflowState.rendContext->GetFontMetrics(*getter_AddRefs(fm));
       if (fm) {
         nscoord ascent, descent;
         fm->GetMaxAscent(ascent);
         fm->GetMaxDescent(descent);
         nscoord logicalHeight = aReflowState.CalcLineHeight(this);

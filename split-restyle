From: L. David Baron <dbaron@dbaron.org>

Bug 898329 patch 3:  Split ElementRestyler::Restyle into multiple functions.

diff --git a/layout/base/RestyleManager.cpp b/layout/base/RestyleManager.cpp
--- a/layout/base/RestyleManager.cpp
+++ b/layout/base/RestyleManager.cpp
@@ -2643,16 +2643,51 @@ ElementRestyler::Restyle(nsRestyleHint a
         }
       }
 #endif
     }
   }
 }
 
 void
+ElementRestyler::RestyleSelf()
+{
+}
+
+void
+ElementRestyler::RestyleChildren()
+{
+}
+
+void
+ElementRestyler::RestyleBeforeChild()
+{
+}
+
+void
+ElementRestyler::RestyleAfterChild()
+{
+}
+
+void
+ElementRestyler::RestyleContentChildren()
+{
+}
+
+void
+ElementRestyler::InitializeAccessibilityNotifications()
+{
+}
+
+void
+ElementRestyler::SendAccessibilityNotifications()
+{
+}
+
+void
 RestyleManager::ComputeStyleChangeFor(nsIFrame*          aFrame,
                                       nsStyleChangeList* aChangeList,
                                       nsChangeHint       aMinChange,
                                       RestyleTracker&    aRestyleTracker,
                                       bool               aRestyleDescendants)
 {
   PROFILER_LABEL("CSS", "ComputeStyleChangeFor");
 
diff --git a/layout/base/RestyleManager.h b/layout/base/RestyleManager.h
--- a/layout/base/RestyleManager.h
+++ b/layout/base/RestyleManager.h
@@ -295,28 +295,48 @@ public:
   // the outer table frame (table wrapper frame).  We should probably
   // try to get rid of this exception and have the inheritance go the
   // other way.)
   enum ParentContextFromChildFrame { PARENT_CONTEXT_FROM_CHILD_FRAME };
   ElementRestyler(ParentContextFromChildFrame,
                   const ElementRestyler& aParentFrameRestyler,
                   nsIFrame* aFrame);
 
-public:
   /**
    * Restyle our frame's element and its subtree.
    *
    * Use eRestyle_Self for the aRestyleHint argument to mean
    * "reresolve our style context but not kids", use eRestyle_Subtree
    * to mean "reresolve our style context and kids", and use
    * nsRestyleHint(0) to mean recompute a new style context for our
    * current parent and existing rulenode, and the same for kids.
    */
   void Restyle(nsRestyleHint aRestyleHint);
 
+  /**
+   * First half of Restyle().
+   */
+  void RestyleSelf();
+
+  /**
+   * Restyle the children of this frame (and, in turn, their children).
+   *
+   * Second half of Restyle().
+   */
+  void RestyleChildren();
+
+  /**
+   * Helpers for RestyleChildren().
+   */
+  void RestyleBeforeChild();
+  void RestyleAfterChild();
+  void RestyleContentChildren();
+  void InitializeAccessibilityNotifications();
+  void SendAccessibilityNotifications();
+
   nsChangeHint MinChange() { return mMinChange; }
 
 private:
   void CaptureChange(nsStyleContext* aOldContext,
                      nsStyleContext* aNewContext,
                      nsChangeHint aChangeToAssume);
 
   enum DesiredA11yNotifications {

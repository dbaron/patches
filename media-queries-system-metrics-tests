From: L. David Baron <dbaron@dbaron.org>

Add tests for media queries of system metrics.  (Bug 522149)

diff --git a/layout/reftests/css-mediaqueries/reftest.list b/layout/reftests/css-mediaqueries/reftest.list
--- a/layout/reftests/css-mediaqueries/reftest.list
+++ b/layout/reftests/css-mediaqueries/reftest.list
@@ -9,8 +9,10 @@
 == mq_print_orientation.xhtml mq_print_orientation-ref.xhtml
 == mq_print_maxheight.xhtml mq_print-ref.xhtml
 == mq_print_maxwidth.xhtml mq_print-ref.xhtml
 
 == mq_print_maxwidth_updown.xhtml mq_print-ref.xhtml
 == mq_print_maxheight_updown.xhtml mq_print-ref.xhtml
 == mq_print_minheight_updown.xhtml mq_print-ref.xhtml
 == mq_print_minwidth_updown.xhtml mq_print-ref.xhtml
+
+== system-metrics-1.html system-metrics-1-ref.html
diff --git a/layout/reftests/css-mediaqueries/system-metrics-1-ref.html b/layout/reftests/css-mediaqueries/system-metrics-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-mediaqueries/system-metrics-1-ref.html
@@ -0,0 +1,8 @@
+<!DOCTYPE HTML>
+<title>test for system metric media queries (reference)</title>
+<style>
+
+p { color: green; }
+
+</style>
+<p>This text should be green.</p>
diff --git a/layout/reftests/css-mediaqueries/system-metrics-1.html b/layout/reftests/css-mediaqueries/system-metrics-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/css-mediaqueries/system-metrics-1.html
@@ -0,0 +1,28 @@
+<!DOCTYPE HTML>
+<title>test for system metric media queries</title>
+<style>
+
+p { color: red; }
+
+/* Exactly one of the next two should apply */
+
+@media all and (-moz-scrollbar-end-backward) {
+  p:-moz-system-metric(scrollbar-end-backward) { color: green; }
+}
+
+@media not all and (-moz-scrollbar-end-backward) {
+  p:not(:-moz-system-metric(scrollbar-end-backward)) { color: green; }
+}
+
+/* Neither of these should apply */
+
+@media not all and (-moz-scrollbar-end-backward) {
+  p:-moz-system-metric(scrollbar-end-backward) { color: red; }
+}
+
+@media all and (-moz-scrollbar-end-backward) {
+  p:not(:-moz-system-metric(scrollbar-end-backward)) { color: red; }
+}
+
+</style>
+<p>This text should be green.</p>
diff --git a/layout/style/test/test_media_queries.html b/layout/style/test/test_media_queries.html
--- a/layout/style/test/test_media_queries.html
+++ b/layout/style/test/test_media_queries.html
@@ -487,16 +487,87 @@ function run() {
 
   // Assume we don't support grid devices
   should_not_apply("(grid)");
   should_apply("(grid: 0)");
   should_not_apply("(grid: 1)");
   should_not_apply("(grid: 2)");
   should_not_apply("(grid: -1)");
 
+  // System metrics
+  expression_should_be_parseable("-moz-scrollbar-start-backward");
+  expression_should_be_parseable("-moz-scrollbar-start-forward");
+  expression_should_be_parseable("-moz-scrollbar-end-backward");
+  expression_should_be_parseable("-moz-scrollbar-end-forward");
+  expression_should_be_parseable("-moz-scrollbar-thumb-proportional");
+  expression_should_be_parseable("-moz-images-in-menus");
+  expression_should_be_parseable("-moz-images-in-buttons");
+  expression_should_be_parseable("-moz-windows-default-theme");
+  expression_should_be_parseable("-moz-mac-graphite-theme");
+  expression_should_be_parseable("-moz-windows-compositor");
+  expression_should_be_parseable("-moz-windows-classic");
+  expression_should_be_parseable("-moz-touch-enabled");
+  expression_should_be_parseable("-moz-maemo-classic");
+
+  expression_should_be_parseable("-moz-scrollbar-start-backward: 0");
+  expression_should_be_parseable("-moz-scrollbar-start-forward: 0");
+  expression_should_be_parseable("-moz-scrollbar-end-backward: 0");
+  expression_should_be_parseable("-moz-scrollbar-end-forward: 0");
+  expression_should_be_parseable("-moz-scrollbar-thumb-proportional: 0");
+  expression_should_be_parseable("-moz-images-in-menus: 0");
+  expression_should_be_parseable("-moz-images-in-buttons: 0");
+  expression_should_be_parseable("-moz-windows-default-theme: 0");
+  expression_should_be_parseable("-moz-mac-graphite-theme: 0");
+  expression_should_be_parseable("-moz-windows-compositor: 0");
+  expression_should_be_parseable("-moz-windows-classic: 0");
+  expression_should_be_parseable("-moz-touch-enabled: 0");
+  expression_should_be_parseable("-moz-maemo-classic: 0");
+
+  expression_should_be_parseable("-moz-scrollbar-start-backward: 1");
+  expression_should_be_parseable("-moz-scrollbar-start-forward: 1");
+  expression_should_be_parseable("-moz-scrollbar-end-backward: 1");
+  expression_should_be_parseable("-moz-scrollbar-end-forward: 1");
+  expression_should_be_parseable("-moz-scrollbar-thumb-proportional: 1");
+  expression_should_be_parseable("-moz-images-in-menus: 1");
+  expression_should_be_parseable("-moz-images-in-buttons: 1");
+  expression_should_be_parseable("-moz-windows-default-theme: 1");
+  expression_should_be_parseable("-moz-mac-graphite-theme: 1");
+  expression_should_be_parseable("-moz-windows-compositor: 1");
+  expression_should_be_parseable("-moz-windows-classic: 1");
+  expression_should_be_parseable("-moz-touch-enabled: 1");
+  expression_should_be_parseable("-moz-maemo-classic: 1");
+
+  expression_should_not_be_parseable("-moz-scrollbar-start-backward: -1");
+  expression_should_not_be_parseable("-moz-scrollbar-start-forward: -1");
+  expression_should_not_be_parseable("-moz-scrollbar-end-backward: -1");
+  expression_should_not_be_parseable("-moz-scrollbar-end-forward: -1");
+  expression_should_not_be_parseable("-moz-scrollbar-thumb-proportional: -1");
+  expression_should_not_be_parseable("-moz-images-in-menus: -1");
+  expression_should_not_be_parseable("-moz-images-in-buttons: -1");
+  expression_should_not_be_parseable("-moz-windows-default-theme: -1");
+  expression_should_not_be_parseable("-moz-mac-graphite-theme: -1");
+  expression_should_not_be_parseable("-moz-windows-compositor: -1");
+  expression_should_not_be_parseable("-moz-windows-classic: -1");
+  expression_should_not_be_parseable("-moz-touch-enabled: -1");
+  expression_should_not_be_parseable("-moz-maemo-classic: -1");
+
+  expression_should_not_be_parseable("-moz-scrollbar-start-backward: true");
+  expression_should_not_be_parseable("-moz-scrollbar-start-forward: true");
+  expression_should_not_be_parseable("-moz-scrollbar-end-backward: true");
+  expression_should_not_be_parseable("-moz-scrollbar-end-forward: true");
+  expression_should_not_be_parseable("-moz-scrollbar-thumb-proportional: true");
+  expression_should_not_be_parseable("-moz-images-in-menus: true");
+  expression_should_not_be_parseable("-moz-images-in-buttons: true");
+  expression_should_not_be_parseable("-moz-windows-default-theme: true");
+  expression_should_not_be_parseable("-moz-mac-graphite-theme: true");
+  expression_should_not_be_parseable("-moz-windows-compositor: true");
+  expression_should_not_be_parseable("-moz-windows-classic: true");
+  expression_should_not_be_parseable("-moz-touch-enabled: true");
+  expression_should_not_be_parseable("-moz-maemo-classic: true");
+
   // Parsing tests
   // bug 454227
   should_apply_unbalanced("(orientation");
   should_not_apply_unbalanced("not all and (orientation");
   should_not_apply_unbalanced("(orientation:");
   should_apply_unbalanced("all,(orientation:");
   should_not_apply_unbalanced("(orientation:,all");
   should_apply_unbalanced("not all and (grid");

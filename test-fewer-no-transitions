From: L. David Baron <dbaron@dbaron.org>

Bug 906378:  Make the test for transitions not being supported in test_transitions_per_property.html only use about 50 values for each property to avoid the O(N^2) case blowing up.

diff --git a/layout/style/test/test_transitions_per_property.html b/layout/style/test/test_transitions_per_property.html
--- a/layout/style/test/test_transitions_per_property.html
+++ b/layout/style/test/test_transitions_per_property.html
@@ -580,16 +580,30 @@ for (prop in supported_properties) {
   // Test that prop is in the property database.
   ok(prop in gCSSProperties, "property " + prop + " in gCSSProperties");
 
   // Test that the entry has at least one test function.
   ok(supported_properties[prop].length > 0,
      "property " + prop + " must have at least one test function");
 }
 
+// Return a consistent sampling of |count| values out of |array|.
+function sample_values(array, count) {
+  var percent = count / array.length;
+  if (percent >= 1) {
+    return array;
+  }
+  return array.reduce(function(previousValue, currentValue, currentIndex) {
+                        var use = Math.floor(currentIndex * percent) !=
+                                  Math.floor((currentIndex - 1) * percent);
+                        return use ? previousValue.concat([currentValue])
+                                   : previousValue;
+                      }, []);
+}
+
 // Test that transitions don't do anything (i.e., aren't supported) on
 // the properties not in our test list above (and not transition
 // properties themselves).
 for (prop in gCSSProperties) {
   var info = gCSSProperties[prop];
   if (!(prop in supported_properties) &&
       info.type != CSS_TYPE_TRUE_SHORTHAND &&
       !("alias_for" in info) &&
@@ -600,16 +614,26 @@ for (prop in gCSSProperties) {
     if ("prerequisites" in info) {
       var prereqs = info.prerequisites;
       for (var prereq in prereqs) {
         div.style.setProperty(prereq, prereqs[prereq], "");
       }
     }
 
     var all_values = info.initial_values.concat(info.other_values);
+
+    if (all_values.length > 50) {
+      // Since we're using an O(N^2) algorithm here, reduce the list of
+      // values that we want to test.
+      all_values = [].concat(info.initial_values.slice(0,2),
+                             sample_array(info.initial_values.slice(2), 6),
+                             info.other_values.slice(0, 10),
+                             sample_array(info.other_values.slice(12), 40));
+    }
+
     var all_computed = [];
     for (var idx in all_values) {
       var val = all_values[idx];
       div.style.setProperty(prop, val, "");
       all_computed.push(cs.getPropertyValue(prop));
     }
     div.style.removeProperty(prop);
 

Fix regression in CalcQuirkContainingBlockHeight from change from area frame to block frame in bug 243519.  (Bug 471356)  r+sr=roc

diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -1494,23 +1494,22 @@ CalcQuirkContainingBlockHeight(const nsH
         if (frameContent) {
           nsIAtom *contentTag = frameContent->Tag();
           NS_ASSERTION(contentTag == nsGkAtoms::body, "Second ancestor is not BODY");
         }
       }
 #endif
       
     }
-    // if we got to the html frame, then subtract out 
-    // margin/border/padding for the BODY element
-    else if (nsGkAtoms::areaFrame == frameType) {
-      // make sure it is the body
-      if (nsGkAtoms::canvasFrame == rs->parentReflowState->frame->GetType()) {
-        result -= GetVerticalMarginBorderPadding(secondAncestorRS);
-      }
+    // if we got to the html frame (a block child of the canvas) ...
+    else if (nsGkAtoms::blockFrame == frameType &&
+             nsGkAtoms::canvasFrame ==
+               rs->parentReflowState->frame->GetType()) {
+      // ... then subtract out margin/border/padding for the BODY element
+      result -= GetVerticalMarginBorderPadding(secondAncestorRS);
     }
     break;
   }
 
   // Make sure not to return a negative height here!
   return PR_MAX(result, 0);
 }
 // Called by InitConstraints() to compute the containing block rectangle for
diff --git a/layout/reftests/bugs/471356-1-ref.html b/layout/reftests/bugs/471356-1-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/471356-1-ref.html
@@ -0,0 +1,11 @@
+<!--quirks mode-->
+<html style="height: 300px;
+             margin: 1px 0 2px 0; padding: 4px 0 8px 0;">
+<head>
+  <title>Testcase, bug 471356 / bug 243519</title>
+</head>
+<body style="margin: 16px 0 32px 0; padding: 64px 0 128px 0;">
+  <div style="background: blue; height: 30px">
+  </div>
+</body>
+</html>
diff --git a/layout/reftests/bugs/471356-1.html b/layout/reftests/bugs/471356-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/bugs/471356-1.html
@@ -0,0 +1,23 @@
+<!--quirks mode-->
+
+<!--
+  It's not clear that this is desired behavior, but I'm adding a test
+  for it because bug 243519 *accidentally* regressed it.
+
+  We're testing here that quirks mode percentage height calculation
+  subtracts the margin, padding, and border of the BODY element when the
+  basis for that percentage height is a specified non-auto height on the
+  HTML element.
+-->
+<html style="height: 300px;
+             margin: 1px 0 2px 0; padding: 4px 0 8px 0;">
+<head>
+  <title>Testcase, bug 471356 / bug 243519</title>
+</head>
+<body style="margin: 16px 0 32px 0; padding: 64px 0 128px 0;">
+  <!-- basis for percentage is 300px - (16px + 32px + 64px + 128px)
+         == 60px -->
+  <div style="background: blue; height: 50%">
+  </div>
+</body>
+</html>
diff --git a/layout/reftests/bugs/reftest.list b/layout/reftests/bugs/reftest.list
--- a/layout/reftests/bugs/reftest.list
+++ b/layout/reftests/bugs/reftest.list
@@ -994,8 +994,9 @@ fails == 461512-1.html 461512-1-ref.html
 == 464811-1.html 464811-1-ref.html
 == 466258-1.html 466258-1-ref.html
 == 466395-1.html 466395-1-ref.html
 == 466395-2.html 466395-2-ref.html
 == 467084-1.html 467084-1-ref.html
 == 467084-2.html 467084-2-ref.html
 == 467460-1.html 467460-1-ref.html
 == 468473-1.xul 468473-1-ref.xul
+== 471356-1.html 471356-1-ref.html

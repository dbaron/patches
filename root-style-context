From: L. David Baron <dbaron@dbaron.org>

Bug 1256500 - Root style contexts before calling ApplyStyleFixups.

MozReview-Commit-ID: 8P4AyTCvhmW

diff --git a/layout/style/nsStyleContext.cpp b/layout/style/nsStyleContext.cpp
--- a/layout/style/nsStyleContext.cpp
+++ b/layout/style/nsStyleContext.cpp
@@ -116,16 +116,24 @@ nsStyleContext::nsStyleContext(nsStyleCo
       r2 = r2->GetParent();
     NS_ASSERTION(r1 == r2, "must be in the same rule tree as parent");
 #endif
   }
 
   mRuleNode->AddRef();
   mRuleNode->SetUsedDirectly(); // before ApplyStyleFixups()!
 
+  if (!mParent) {
+    // Add as a root before ApplyStyleFixups, since ApplyStyleFixups
+    // can trigger rule tree GC.
+    nsStyleSet* styleSet =
+      mRuleNode->PresContext()->PresShell()->StyleSet()->GetAsGecko();
+    styleSet->AddStyleContextRoot(this);
+  }
+
   ApplyStyleFixups(aSkipParentDisplayBasedStyleFixup);
 
   #define eStyleStruct_LastItem (nsStyleStructID_Length - 1)
   NS_ASSERTION(NS_STYLE_INHERIT_MASK & NS_STYLE_INHERIT_BIT(LastItem),
                "NS_STYLE_INHERIT_MASK must be bigger, and other bits shifted");
   #undef eStyleStruct_LastItem
 }
 
diff --git a/layout/style/nsStyleSet.cpp b/layout/style/nsStyleSet.cpp
--- a/layout/style/nsStyleSet.cpp
+++ b/layout/style/nsStyleSet.cpp
@@ -968,29 +968,23 @@ nsStyleSet::GetContext(nsStyleContext* a
     result = NS_NewStyleContext(aParentContext, aPseudoTag, aPseudoType,
                                 aRuleNode,
                                 aFlags & eSkipParentDisplayBasedStyleFixup);
     if (aVisitedRuleNode) {
       RefPtr<nsStyleContext> resultIfVisited =
         NS_NewStyleContext(parentIfVisited, aPseudoTag, aPseudoType,
                            aVisitedRuleNode,
                            aFlags & eSkipParentDisplayBasedStyleFixup);
-      if (!parentIfVisited) {
-        mRoots.AppendElement(resultIfVisited);
-      }
       resultIfVisited->SetIsStyleIfVisited();
       result->SetStyleIfVisited(resultIfVisited.forget());
 
       if (relevantLinkVisited) {
         result->AddStyleBit(NS_STYLE_RELEVANT_LINK_VISITED);
       }
     }
-    if (!aParentContext) {
-      mRoots.AppendElement(result);
-    }
   }
   else {
     NS_ASSERTION(result->GetPseudoType() == aPseudoType, "Unexpected type");
     NS_ASSERTION(result->GetPseudo() == aPseudoTag, "Unexpected pseudo");
   }
 
   if (aFlags & eDoAnimation) {
 
@@ -2219,16 +2213,26 @@ nsStyleSet::Shutdown()
     --i;
     mOldRuleTrees[i]->Destroy();
   }
   mOldRuleTrees.Clear();
 }
 
 static const uint32_t kGCInterval = 300;
 
+// Notification that a style context with a null parent has been created.
+void
+nsStyleSet::AddStyleContextRoot(nsStyleContext* aStyleContext)
+{
+  // aStyleContext has not been fully initialized, but its parent and
+  // rule node are correct.
+  MOZ_ASSERT(!aStyleContext->GetParent());
+  mRoots.AppendElement(aStyleContext);
+}
+
 void
 nsStyleSet::NotifyStyleContextDestroyed(nsStyleContext* aStyleContext)
 {
   if (mInShutdown)
     return;
 
   // Remove style contexts from mRoots even if mOldRuleTree is non-null.  This
   // could be a style context from the new ruletree!
diff --git a/layout/style/nsStyleSet.h b/layout/style/nsStyleSet.h
--- a/layout/style/nsStyleSet.h
+++ b/layout/style/nsStyleSet.h
@@ -256,16 +256,21 @@ class nsStyleSet final
 
   // Begin ignoring style context destruction, to avoid lots of unnecessary
   // work on document teardown.
   void BeginShutdown();
 
   // Free all of the data associated with this style set.
   void Shutdown();
 
+  // Notification that a style context with a null parent has been created.
+  // The argument is a style context that has not been fully initialized,
+  // but its parent and rule node are correct.
+  void AddStyleContextRoot(nsStyleContext* aStyleContext);
+
   // Notification that a style context is being destroyed.
   void NotifyStyleContextDestroyed(nsStyleContext* aStyleContext);
 
   // Get a new style context that lives in a different parent
   // The new context will be the same as the old if the new parent is the
   // same as the old parent.
   // aElement should be non-null if this is a style context for an
   // element or pseudo-element; in the latter case it should be the

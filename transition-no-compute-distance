From: L. David Baron <dbaron@dbaron.org>

Don't use ComputeDistance in nsTransitionManager when shortening reversals of partially running transitions, and shorten only transitions that are actually back to the current start point.

diff --git a/layout/style/nsTransitionManager.cpp b/layout/style/nsTransitionManager.cpp
--- a/layout/style/nsTransitionManager.cpp
+++ b/layout/style/nsTransitionManager.cpp
@@ -621,29 +621,26 @@ nsTransitionManager::ConsiderStartingTra
     if (endVal == pt.mEndValue) {
       // If we got a style change that changed the value to the endpoint
       // of the currently running transition, we don't want to interrupt
       // its timing function.
       // WalkTransitionRule already called RestyleForAnimation.
       return;
     }
 
-    double fullDistance, remainingDistance;
-#ifdef DEBUG
-    PRBool ok =
-#endif
-      nsStyleAnimation::ComputeDistance(aProperty, pt.mStartValue,
-                                        pt.mEndValue, fullDistance);
-    NS_ABORT_IF_FALSE(ok, "could not compute distance");
-    NS_ABORT_IF_FALSE(fullDistance >= 0.0, "distance must be positive");
-
-    if (nsStyleAnimation::ComputeDistance(aProperty, endVal, pt.mEndValue,
-                                          remainingDistance)) {
-      NS_ABORT_IF_FALSE(remainingDistance >= 0.0, "distance must be positive");
-      durationFraction = fullDistance / remainingDistance;
+    // Reversing transitions with different timing functions or that
+    // involve discrete steps should make them all still end at the same
+    // point, assuming they have the same duration and delay.
+    // So rather than using ComputeDistance, shorten only for
+    // transitions that are going back to the start of the currently
+    // running transition.
+    if (endVal == pt.mStartValue) {
+      durationFraction = (presContext->RefreshDriver()->MostRecentRefresh() -
+                            pt.mStartTime).ToSeconds() /
+                         pt.mDuration.ToSeconds();
       if (durationFraction > 1.0) {
         durationFraction = 1.0;
       }
     }
   }
 
 
   nsRefreshDriver *rd = presContext->RefreshDriver();

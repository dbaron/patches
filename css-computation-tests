Start adding tests for computation.

diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -72,12 +72,14 @@ _TEST_FILES = 	test_bug302186.html \
 		test_bug372770.html \
 		test_bug373293.html \
 		test_inherit_storage.html \
+		test_inherit_computation.html \
 		test_initial_storage.html \
 		test_property_database.html \
 		test_property_syntax_errors.html \
 		test_value_storage.html \
 		css_properties.js \
 		property_database.js \
+		unstyled.xml \
 		$(NULL)
 
 
diff --git a/layout/style/test/test_inherit_computation.html b/layout/style/test/test_inherit_computation.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_inherit_computation.html
@@ -0,0 +1,90 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+-->
+<head>
+  <title>Test for computation of CSS 'inherit'</title>
+  <script type="text/javascript" src="/MochiKit/MochiKit.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="property_database.js"></script>
+  <style type="text/css" id="stylesheet"></style>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+</head>
+<body>
+<p id="display"></p>
+<div id="content" style="display: none">
+
+<div id="testnode"><span id="parent"><span id="child"></span></span></div>
+  
+</div>
+<pre id="test">
+<script class="testbody" type="text/javascript">
+
+/** Test for computation of CSS 'inherit' **/
+
+var gParent = document.getElementById("parent");
+var gChild = document.getElementById("child");
+var gStyleSheet = document.getElementById("stylesheet");
+var gChildRule1 = gStyleSheet.cssRules[gStyleSheet.insertRule("#child {}", gStyleSheet.cssRules.length)];
+var gChildRule2 = gStyleSheet.cssRules[gStyleSheet.insertRule("#child {}", gStyleSheet.cssRules.length)];
+
+function test_property(property)
+{
+  var info = gCSSProperties[property];
+  if (info.backend_only)
+    return;
+
+  if (info.inherited) {
+    gParent.style.setPropertyValue(property, info.initial_values[0], "");
+    var initial_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    gChildRule1.style.setPropertyValue(property, info.other_values[0], "");
+    var other_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    isnot(initial_computed, other_computed,
+          "should be testing with values that compute to different things");
+    gChildRule2.style.setPropertyValue(property, "inherit", "");
+    var inherit_initial_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    is(inherit_initial_computed, initial_computed,
+       "inherit should cause inheritance of initial value for '" +
+       property + "'");
+    gParent.style.setPropertyValue(property, info.other_values[0], "");
+    var inherit_other_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    is(inherit_other_computed, other_computed,
+       "inherit should cause inheritance of other value for '" +
+       property + "'");
+    gParent.style.removeProperty(property);
+    gChildRule1.style.removeProperty(property);
+    gChildRule2.style.removeProperty(property);
+  } else {
+    gParent.style.setPropertyValue(property, info.other_values[0], "");
+    var initial_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    var other_computed =
+      getComputedStyle(gParent, "").getPropertyValue(property);
+    isnot(initial_computed, other_computed,
+          "should be testing with values that compute to different things");
+    gChildRule2.style.setPropertyValue(property, "inherit", "");
+    var inherit_other_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    is(inherit_other_computed, other_computed,
+       "inherit should cause inheritance of other value for '" +
+       property + "'");
+    gChildRule1.style.setPropertyValue(property, info.other_values[0], "");
+    var inherit_initial_computed =
+      getComputedStyle(gChild, "").getPropertyValue(property);
+    is(inherit_initial_computed, initial_computed,
+       "inherit should cause inheritance of initial value for '" +
+       property + "'");
+  }
+}
+
+for (var prop in gCSSProperties)
+  test_property(prop);
+
+</script>
+</pre>
+</body>
+</html>
diff --git a/layout/style/test/unstyled.xml b/layout/style/test/unstyled.xml
new file mode 100644
--- /dev/null
+++ b/layout/style/test/unstyled.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0"?>
+<root/>

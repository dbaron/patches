Printfs of elapsed time for cycle collection and JS GC.

diff --git a/js/src/jsapi.c b/js/src/jsapi.c
--- a/js/src/jsapi.c
+++ b/js/src/jsapi.c
@@ -1906,6 +1906,10 @@ JS_PUBLIC_API(void)
 JS_PUBLIC_API(void)
 JS_GC(JSContext *cx)
 {
+    int64 start, diff;
+
+    printf("Doing JS GC...\n");
+    start = JS_Now();
 #if JS_HAS_GENERATORS
     /* Run previously scheduled but delayed close hooks. */
     js_RunCloseHooks(cx);
@@ -1924,6 +1928,8 @@ JS_GC(JSContext *cx)
      */
     js_RunCloseHooks(cx);
 #endif
+    diff = (JS_Now() - start) / 1000;
+    printf("... JS_GC took %ld milliseconds.\n", (long)diff);
 }
 
 JS_PUBLIC_API(void)
diff --git a/xpcom/base/nsCycleCollector.cpp b/xpcom/base/nsCycleCollector.cpp
--- a/xpcom/base/nsCycleCollector.cpp
+++ b/xpcom/base/nsCycleCollector.cpp
@@ -138,6 +138,7 @@
 #include "prtime.h"
 #include "nsPrintfCString.h"
 #include "nsTArray.h"
+#include "prinrval.h"
 
 #include <stdio.h>
 #ifdef WIN32
@@ -2190,8 +2191,13 @@ void
 void 
 nsCycleCollector_collect()
 {
+    printf("Starting nsCycleCollector_collect\n");
+    PRIntervalTime start = PR_IntervalNow();
     if (sCollector)
         sCollector->Collect();
+    PRIntervalTime end = PR_IntervalNow();
+    printf("...nsCycleCollector_collect took %d milliseconds.\n",
+           PR_IntervalToMilliseconds(end - start));
 }
 
 nsresult 

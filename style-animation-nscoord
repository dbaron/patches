From: L. David Baron <dbaron@dbaron.org>

Add support for animation of nscoord values to nsStyleAnimation.  (Bug 504652)

diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -1412,18 +1412,20 @@ CSS_PROP_FONT(
     font-size,
     font_size,
     FontSize,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mSize,
     eCSSType_Value,
     kFontSizeKTable,
-    CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    // Note that mSize is the correct place for *reading* the computed value,
+    // but setting it requires setting mFont.size as well.
+    offsetof(nsStyleFont, mSize),
+    eStyleAnimType_nscoord)
 CSS_PROP_FONT(
     font-size-adjust,
     font_size_adjust,
     FontSizeAdjust,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mSizeAdjust,
     eCSSType_Value,
@@ -1862,18 +1864,18 @@ CSS_PROP_OUTLINE(
     outline-offset,
     outline_offset,
     OutlineOffset,
     0,
     Margin,
     mOutlineOffset,
     eCSSType_Value,
     nsnull,
-    CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    offsetof(nsStyleOutline, mOutlineOffset),
+    eStyleAnimType_nscoord)
 CSS_PROP_SHORTHAND(
     overflow,
     overflow,
     Overflow,
     0)
 CSS_PROP_DISPLAY(
     overflow-x,
     overflow_x,
@@ -2523,18 +2525,18 @@ CSS_PROP_TEXT(
     word-spacing,
     word_spacing,
     WordSpacing,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Text,
     mWordSpacing,
     eCSSType_Value,
     nsnull,
-    CSS_PROP_NO_OFFSET,
-    eStyleAnimType_None)
+    offsetof(nsStyleText, mWordSpacing),
+    eStyleAnimType_nscoord)
 CSS_PROP_TEXT(
     word-wrap,
     word_wrap,
     WordWrap,
     0,
     Text,
     mWordWrap,
     eCSSType_Value,
diff --git a/layout/style/nsStyleAnimation.cpp b/layout/style/nsStyleAnimation.cpp
--- a/layout/style/nsStyleAnimation.cpp
+++ b/layout/style/nsStyleAnimation.cpp
@@ -334,16 +334,20 @@ nsStyleAnimation::ExtractComputedValue(n
       PR_STATIC_ASSERT(eStyleAnimType_Sides_Bottom - eStyleAnimType_Sides_Top
                          == NS_SIDE_BOTTOM);
       PR_STATIC_ASSERT(eStyleAnimType_Sides_Left - eStyleAnimType_Sides_Top
                          == NS_SIDE_LEFT);
       aComputedValue = static_cast<const nsStyleSides*>(
         StyleDataAtOffset(styleStruct, kStyleStructOffset[aProperty]))->
           Get(animType - eStyleAnimType_Sides_Top);
       return PR_TRUE;
+    case eStyleAnimType_nscoord:
+      aComputedValue.SetCoordValue( * static_cast<const nscoord*>(
+        StyleDataAtOffset(styleStruct, kStyleStructOffset[aProperty])));
+      return PR_TRUE;
     case eStyleAnimType_None:
       NS_NOTREACHED("shouldn't use on non-animatable properties");
   }
   return PR_FALSE;
 }
 
 PRBool
 nsStyleAnimation::StoreComputedValue(nsCSSProperty aProperty,
@@ -373,13 +377,28 @@ nsStyleAnimation::StoreComputedValue(nsC
       PR_STATIC_ASSERT(eStyleAnimType_Sides_Bottom - eStyleAnimType_Sides_Top
                          == NS_SIDE_BOTTOM);
       PR_STATIC_ASSERT(eStyleAnimType_Sides_Left - eStyleAnimType_Sides_Top
                          == NS_SIDE_LEFT);
       static_cast<const nsStyleSides*>(
         StyleDataAtOffset(styleStruct, kStyleStructOffset[aProperty]))->
           Set(animType - eStyleAnimType_Sides_Top, aComputedValue);
       return PR_TRUE;
+    case eStyleAnimType_nscoord:
+      * static_cast<const nscoord*>(
+        StyleDataAtOffset(styleStruct, kStyleStructOffset[aProperty])) =
+          aComputedValue.GetCoordValue();
+      if (aProperty == eCSSProperty_font) {
+        nsStyleFont *font = static_cast<nsStyleFont*>(aStyleStruct);
+        if (!aPresContext->IsChrome()) {
+          nscoord minimumFontSize =
+            mPresContext->GetCachedIntPref(kPresContext_MinimumFontSize);
+          font->mFont.size = PR_MAX(font->size, minimumFontSize);
+        } else {
+          font->mFont.size = font->size;
+        }
+      }
+      return PR_TRUE;
     case eStyleAnimType_None:
       NS_NOTREACHED("shouldn't use on non-animatable properties");
   }
   return PR_FALSE;
 }
diff --git a/layout/style/nsStyleAnimation.h b/layout/style/nsStyleAnimation.h
--- a/layout/style/nsStyleAnimation.h
+++ b/layout/style/nsStyleAnimation.h
@@ -58,16 +58,19 @@ enum nsStyleAnimType {
 
   // same as Coord, except for one side of an nsStyleSides
   // listed in the same order as the NS_STYLE_* constants
   eStyleAnimType_Sides_Top,
   eStyleAnimType_Sides_Right,
   eStyleAnimType_Sides_Bottom,
   eStyleAnimType_Sides_Left,
 
+  // nscoord values
+  eStyleAnimType_nscoord,
+
   // property not animatable
   eStyleAnimType_None
 };
 
 /**
  * Utility class to handle animated style values
  */
 class nsStyleAnimation {

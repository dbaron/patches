From: L. David Baron <dbaron@dbaron.org>

Change nsBlockReflowContext::PlaceBlock for split overflow areas.  (Bug 542595, patch 13)

diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -3248,29 +3248,30 @@ nsBlockFrame::ReflowBlockFrame(nsBlockRe
       // Don't force the block to fit if we have positive clearance, because
       // pushing it to the next page would give it more room.
       // Don't force the block to fit if it's impacted by a float. If it is,
       // then pushing it to the next page would give it more room. Note that
       // isImpacted doesn't include impact from the block's own floats.
       PRBool forceFit = aState.IsAdjacentWithTop() && clearance <= 0 &&
         !floatAvailableSpace.mHasFloats;
       nsCollapsingMargin collapsedBottomMargin;
-      nsRect combinedArea(0,0,0,0);
+      nsOverflowAreas overflowAreas;
       *aKeepReflowGoing = brc.PlaceBlock(blockHtmlRS, forceFit, aLine.get(),
                                          collapsedBottomMargin,
-                                         aLine->mBounds, combinedArea, frameReflowStatus);
+                                         aLine->mBounds, overflowAreas,
+                                         frameReflowStatus);
       if (aLine->SetCarriedOutBottomMargin(collapsedBottomMargin)) {
         line_iterator nextLine = aLine;
         ++nextLine;
         if (nextLine != end_lines()) {
           nextLine->MarkPreviousMarginDirty();
         }
       }
-      
-      aLine->SetCombinedArea(combinedArea);
+
+      aLine->SetOverflowAreas(overflowAreas);
       if (*aKeepReflowGoing) {
         // Some of the child block fit
         
         // Advance to new Y position
         nscoord newY = aLine->mBounds.YMost();
         aState.mY = newY;
         
         // Continue the block frame now if it didn't completely fit in
diff --git a/layout/generic/nsBlockReflowContext.cpp b/layout/generic/nsBlockReflowContext.cpp
--- a/layout/generic/nsBlockReflowContext.cpp
+++ b/layout/generic/nsBlockReflowContext.cpp
@@ -352,17 +352,17 @@ nsBlockReflowContext::ReflowBlock(const 
  * margins (CSS2 8.3.1). Also apply relative positioning.
  */
 PRBool
 nsBlockReflowContext::PlaceBlock(const nsHTMLReflowState& aReflowState,
                                  PRBool                   aForceFit,
                                  nsLineBox*               aLine,
                                  nsCollapsingMargin&      aBottomMarginResult,
                                  nsRect&                  aInFlowBounds,
-                                 nsRect&                  aCombinedRect,
+                                 nsOverflowAreas&         aOverflowAreas,
                                  nsReflowStatus           aReflowStatus)
 {
   // Compute collapsed bottom margin value.
   if (NS_FRAME_IS_COMPLETE(aReflowStatus)) {
     aBottomMarginResult = mMetrics.mCarriedOutBottomMargin;
     aBottomMarginResult.Include(aReflowState.mComputedMargin.bottom);
   } else {
     // The used bottom-margin is set to zero above a break.
@@ -436,13 +436,13 @@ nsBlockReflowContext::PlaceBlock(const n
   const nsStyleDisplay* styleDisp = mFrame->GetStyleDisplay();
   if (NS_STYLE_POSITION_RELATIVE == styleDisp->mPosition) {
     x += aReflowState.mComputedOffsets.left;
     y += aReflowState.mComputedOffsets.top;
   }
   
   // Now place the frame and complete the reflow process
   nsContainerFrame::FinishReflowChild(mFrame, mPresContext, &aReflowState, mMetrics, x, y, 0);
-  
-  aCombinedRect = mMetrics.mOverflowArea + nsPoint(x, y);
+
+  aOverflowAreas = mMetrics.mOverflowAreas + nsPoint(x, y);
 
   return PR_TRUE;
 }
diff --git a/layout/generic/nsBlockReflowContext.h b/layout/generic/nsBlockReflowContext.h
--- a/layout/generic/nsBlockReflowContext.h
+++ b/layout/generic/nsBlockReflowContext.h
@@ -73,17 +73,17 @@ public:
                        nsReflowStatus&     aReflowStatus,
                        nsBlockReflowState& aState);
 
   PRBool PlaceBlock(const nsHTMLReflowState& aReflowState,
                     PRBool                   aForceFit,
                     nsLineBox*               aLine,
                     nsCollapsingMargin&      aBottomMarginResult /* out */,
                     nsRect&                  aInFlowBounds,
-                    nsRect&                  aCombinedRect,
+                    nsOverflowAreas&         aOverflowAreas,
                     nsReflowStatus           aReflowStatus);
 
   nsCollapsingMargin& GetCarriedOutBottomMargin() {
     return mMetrics.mCarriedOutBottomMargin;
   }
 
   nscoord GetTopMargin() const {
     return mTopMargin.get();

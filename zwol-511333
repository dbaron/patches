From: Zack Weinberg <zweinberg@mozilla.com>

Fix parenthesis-matching while parsing format() function in @font-face src: descriptor.  (Bug 511333)  r=dbaron

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -7908,26 +7908,33 @@ CSSParserImpl::ParseFontSrcFormat(nsTArr
     UngetToken();
     return PR_TRUE;
   }
   if (!ExpectSymbol('(', PR_FALSE))
     return PR_FALSE;
 
   do {
     if (!GetToken(PR_TRUE))
-      return PR_FALSE;
-
-    if (mToken.mType != eCSSToken_String)
-      return PR_FALSE;
+      return PR_FALSE; // EOF - no need for SkipUntil
+
+    if (mToken.mType != eCSSToken_String) {
+      SkipUntil(')');
+      return PR_FALSE;
+    }
 
     nsCSSValue cur(mToken.mIdent, eCSSUnit_Font_Format);
     values.AppendElement(cur);
   } while (ExpectSymbol(',', PR_TRUE));
 
-  return ExpectSymbol(')', PR_TRUE);
+  if (!ExpectSymbol(')', PR_TRUE)) {
+    SkipUntil(')');
+    return PR_FALSE;
+  }
+
+  return PR_TRUE;
 }
 
 // font-ranges: urange ( ',' urange )*
 PRBool
 CSSParserImpl::ParseFontRanges(nsCSSValue& aValue)
 {
   // not currently implemented (bug 443976)
   return PR_FALSE;
diff --git a/layout/style/test/test_font_face_parser.html b/layout/style/test/test_font_face_parser.html
--- a/layout/style/test/test_font_face_parser.html
+++ b/layout/style/test/test_font_face_parser.html
@@ -115,17 +115,17 @@
 
     { rule: _("src: local(\"老鼠\"), url(\"/fonts/Mouse\");"),
       d: { "src" : "local(\"老鼠\"), url(\"/fonts/Mouse\")" } },
 
     { rule: _("src: local(\"老鼠\"), url(\"/fonts/Mouse\") format(\"truetype\");"),
       d: { "src" : "local(\"老鼠\"), url(\"/fonts/Mouse\") format(\"truetype\")" } },
 
     // Correct but unusual src:
-    { rule: _("src: local(Hoefler Text);"), 
+    { rule: _("src: local(Hoefler Text);"),
       d: {"src" : "local(\"Hoefler Text\")"}, noncanonical: true },
 
     // Incorrect src:
     { rule: _("src:"), d: {} },
     { rule: _("src: \"/fonts/Mouse\";"), d: {} },
     { rule: _("src: /fonts/Mouse;"), d: {} },
     { rule: _("src: url(\"/fonts/Mouse\") format(truetype);"), d: {} },
     { rule: _("src: url(\"/fonts/Mouse\") format(\"truetype\",opentype);"), d: {} },
@@ -149,16 +149,26 @@
     // Correct parenthesis matching for local()
     { rule: _("src: local(Mouse); src: local(Cat(); src: local(Rat); )"),
       d: { "src" : "local(\"Mouse\")" },
       noncanonical: true },
     { rule: _("src: local(Mouse); src: local(\"Cat\"; src: local(Rat); )"),
       d: { "src" : "local(\"Mouse\")" },
       noncanonical: true },
 
+    // Correct parenthesis matching for format()
+    { rule: _("src: url(\"/fonts/Mouse\"); " +
+	      "src: url(\"/fonts/Cat\") format(Cat(); src: local(Rat); )"),
+      d: { "src" : "url(\"/fonts/Mouse\")" },
+      noncanonical: true },
+    { rule: _("src: url(\"/fonts/Mouse\"); " +
+	      "src: url(\"/fonts/Cat\") format(\"Cat\"; src: local(Rat); )"),
+      d: { "src" : "url(\"/fonts/Mouse\")" },
+      noncanonical: true },
+
     // unicode-range is not implemented (bug 443976).
     // tests for that omitted for now.
   ];
 
   var display = document.getElementById("display");
   var sheet = document.styleSheets[1];
 
   for (var curTest = 0; curTest < testset.length; curTest++) {

From: L. David Baron <dbaron@dbaron.org>

Bug 1125455 patch 7 - For compositor-thread application of transitions, don't apply transitions when animations are also running.

I've verified locally that this patch (not others in this series) fixes
the test failures that match the test changes in this patch.

FIXME: Do we need to resend to the compositor in certain conditions?

diff --git a/layout/base/nsDisplayList.cpp b/layout/base/nsDisplayList.cpp
--- a/layout/base/nsDisplayList.cpp
+++ b/layout/base/nsDisplayList.cpp
@@ -416,16 +416,23 @@ AddAnimationsForProperty(nsIFrame* aFram
       continue;
     }
     const AnimationProperty* property =
       anim->GetAnimationOfProperty(aProperty);
     if (!property || !player->IsRunning()) {
       continue;
     }
 
+    if (!property->mWinsInCascade) {
+      // We have an animation or transition, but it isn't actually
+      // winning in the CSS cascade, so we don't want to send it to the
+      // compositor.
+      continue;
+    }
+
     // Don't add animations that are pending when their corresponding
     // refresh driver is under test control. This is because any pending
     // animations on layers will have their start time updated with the
     // current timestamp but when the refresh driver is under test control
     // its refresh times are unrelated to timestamp values.
     //
     // Instead we leave the animation running on the main thread and the
     // next time the refresh driver is advanced it will trigger any pending
diff --git a/layout/style/test/test_animations_omta.html b/layout/style/test/test_animations_omta.html
--- a/layout/style/test/test_animations_omta.html
+++ b/layout/style/test/test_animations_omta.html
@@ -2084,19 +2084,19 @@ addAsyncAnimTest(function *() {
   omta_is("opacity", 0.8, RunningOn.Compositor,
           "opacity transition at 0s");
   advance_clock(500);
   yield waitForPaintsFlushed();
   omta_is("opacity", 0.65, RunningOn.Compositor,
           "opacity transition at 0.5s");
   gDiv.style.animation = "opacitymid 2s linear";
   yield waitForPaintsFlushed();
-  omta_todo_is("opacity", 0.2, RunningOn.Compositor,
+  omta_is("opacity", 0.2, RunningOn.Compositor,
           "opacity animation overriding transition at 0s");
   advance_clock(500);
   yield waitForPaintsFlushed();
-  omta_todo_is("opacity", 0.35, RunningOn.Compositor,
+  omta_is("opacity", 0.35, RunningOn.Compositor,
           "opacity animation overriding transition at 0.5s");
   done_div();
 });
 
 </script>
 </html>

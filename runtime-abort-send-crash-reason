From: L. David Baron <dbaron@dbaron.org>

Bug 1277448 patch 4 - Send a MozCrashReason annotation for NS_RUNTIMEABORT instead of AbortMessage.

This excludes the PID and the line number that are present in the
AbortMessage annotation, and formats the annotation consistently with
other MozCrashReason annotations.  (It adds function information that is
not present in them, but which will be added to them in patch 5.)

This uses the same printing mechanism already used in this function so
that we don't add any additional crashing risk by using the heap.

MozReview-Commit-ID: AI6Iw2KsFAZ

diff --git a/xpcom/base/nsDebugImpl.cpp b/xpcom/base/nsDebugImpl.cpp
--- a/xpcom/base/nsDebugImpl.cpp
+++ b/xpcom/base/nsDebugImpl.cpp
@@ -385,27 +385,37 @@ NS_DebugBreak(uint32_t aSeverity, const 
       return;
 
     case NS_DEBUG_BREAK:
       Break(buf.buffer);
       return;
 
     case NS_DEBUG_ABORT: {
 #if defined(MOZ_CRASHREPORTER)
-      // Updating crash annotations in the child causes us to do IPC. This can
-      // really cause trouble if we're asserting from within IPC code. So we
-      // have to do without the annotations in that case.
-      if (XRE_IsParentProcess()) {
-        nsCString note("xpcom_runtime_abort(");
-        note += buf.buffer;
-        note += ")";
-        CrashReporter::AppendAppNotesToCrashReport(note);
-        CrashReporter::AnnotateCrashReport(NS_LITERAL_CSTRING("AbortMessage"),
-                                           nsDependentCString(buf.buffer));
+      FixedBuffer crashReasonBuffer;
+#define PrintToBuffer(...) \
+      PR_sxprintf(StuffFixedBuffer, &crashReasonBuffer, __VA_ARGS__)
+
+      PrintToBuffer("NS_RUNTIMEABORT(");
+      if (aStr) {
+        PrintToBuffer("%s", aStr);
       }
+      if (aExpr) {
+        PrintToBuffer(": '%s', ", aExpr);
+      }
+      PrintToBuffer(")");
+      if (aFile) {
+        PrintToBuffer("file %s, ", aFile);
+      }
+      if (aFunction) {
+        PrintToBuffer("function %s", aFunction);
+      }
+#undef PrintToBuffer
+
+      MOZ_CRASH_ANNOTATE(crashReasonBuffer.buffer);
 #endif  // MOZ_CRASHREPORTER
 
 #if defined(DEBUG) && defined(_WIN32)
       RealBreak();
 #endif
 #if defined(DEBUG)
       nsTraceRefcnt::WalkTheStack(stderr);
 #endif

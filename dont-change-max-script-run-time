Don't mess with the max_script_run_time pref since the mochitest harness now does that for us.

diff --git a/layout/style/test/test_descriptor_storage.html b/layout/style/test/test_descriptor_storage.html
--- a/layout/style/test/test_descriptor_storage.html
+++ b/layout/style/test/test_descriptor_storage.html
@@ -96,29 +96,17 @@ function test_descriptor(descriptor)
 // descriptor at a time.
 SimpleTest.waitForExplicitFinish();
 var descs = [];
 for (var desc in gCSSFontFaceDescriptors)
   descs.push(desc);
 descs = descs.reverse();
 function do_one() {
   if (descs.length == 0) {
-    // SimpleTest.finish() is really slow, so we have to disable the
-    // slow script dialog for this part
-    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-    var prefService = Components.classes["@mozilla.org/preferences-service;1"].
-                        getService(Components.interfaces.nsIPrefService);
-    var domBranch = prefService.getBranch("dom.");
-    var oldVal = domBranch.getIntPref("max_script_run_time");
-    domBranch.setIntPref("max_script_run_time", 0);
-
     SimpleTest.finish();
-
-    domBranch.setIntPref("max_script_run_time", oldVal);
-
     return;
   }
   test_descriptor(descs.pop());
   SimpleTest.executeSoon(do_one);
 }
 SimpleTest.executeSoon(do_one);
 
 </script>
diff --git a/layout/style/test/test_for_expect_end_property.html b/layout/style/test/test_for_expect_end_property.html
--- a/layout/style/test/test_for_expect_end_property.html
+++ b/layout/style/test/test_for_expect_end_property.html
@@ -86,29 +86,17 @@ function test_property(property)
 // property at a time.
 SimpleTest.waitForExplicitFinish();
 var props = [];
 for (var prop in gCSSProperties)
   props.push(prop);
 props = props.reverse();
 function do_one() {
   if (props.length == 0) {
-    // SimpleTest.finish() is really slow, so we have to disable the
-    // slow script dialog for this part
-    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-    var prefService = Components.classes["@mozilla.org/preferences-service;1"].
-                        getService(Components.interfaces.nsIPrefService);
-    var domBranch = prefService.getBranch("dom.");
-    var oldVal = domBranch.getIntPref("max_script_run_time");
-    domBranch.setIntPref("max_script_run_time", 0);
-
     SimpleTest.finish();
-
-    domBranch.setIntPref("max_script_run_time", oldVal);
-
     return;
   }
   test_property(props.pop());
   SimpleTest.executeSoon(do_one);
 }
 SimpleTest.executeSoon(do_one);
 
 </script>
diff --git a/layout/style/test/test_value_computation.html b/layout/style/test/test_value_computation.html
--- a/layout/style/test/test_value_computation.html
+++ b/layout/style/test/test_value_computation.html
@@ -191,29 +191,17 @@ function run_tests() {
   setup_initial_values("unstyledn", "gInitialValuesN", "gInitialPrereqsRuleN");
   setup_initial_values("unstyledf", "gInitialValuesF", "gInitialPrereqsRuleF");
   var props = [];
   for (var prop in gCSSProperties)
     props.push(prop);
   props = props.reverse();
   function do_one() {
     if (props.length == 0) {
-      // SimpleTest.finish() is really slow, so we have to disable the
-      // slow script dialog for this part
-      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-      var prefService = Components.classes["@mozilla.org/preferences-service;1"].
-                          getService(Components.interfaces.nsIPrefService);
-      var domBranch = prefService.getBranch("dom.");
-      var oldVal = domBranch.getIntPref("max_script_run_time");
-      domBranch.setIntPref("max_script_run_time", 0);
-
       SimpleTest.finish();
-
-      domBranch.setIntPref("max_script_run_time", oldVal);
-
       return;
     }
     test_property(props.pop());
     SimpleTest.executeSoon(do_one);
   }
   SimpleTest.executeSoon(do_one);
 }
 
diff --git a/layout/style/test/test_value_storage.html b/layout/style/test/test_value_storage.html
--- a/layout/style/test/test_value_storage.html
+++ b/layout/style/test/test_value_storage.html
@@ -196,29 +196,17 @@ function test_property(property)
 // property at a time.
 SimpleTest.waitForExplicitFinish();
 var props = [];
 for (var prop in gCSSProperties)
   props.push(prop);
 props = props.reverse();
 function do_one() {
   if (props.length == 0) {
-    // SimpleTest.finish() is really slow, so we have to disable the
-    // slow script dialog for this part
-    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-    var prefService = Components.classes["@mozilla.org/preferences-service;1"].
-                        getService(Components.interfaces.nsIPrefService);
-    var domBranch = prefService.getBranch("dom.");
-    var oldVal = domBranch.getIntPref("max_script_run_time");
-    domBranch.setIntPref("max_script_run_time", 0);
-
     SimpleTest.finish();
-
-    domBranch.setIntPref("max_script_run_time", oldVal);
-
     return;
   }
   test_property(props.pop());
   SimpleTest.executeSoon(do_one);
 }
 SimpleTest.executeSoon(do_one);
 
 </script>

From: L. David Baron <dbaron@dbaron.org>

Bug 997991 patch 2 - Add mCheckForImportantRules to the information nsStyleSet::RuleNodeWithReplacement keeps about cascade levels.

diff --git a/layout/style/nsStyleSet.cpp b/layout/style/nsStyleSet.cpp
--- a/layout/style/nsStyleSet.cpp
+++ b/layout/style/nsStyleSet.cpp
@@ -1315,36 +1315,37 @@ struct RuleNodeInfo {
   nsIStyleRule* mRule;
   uint8_t mLevel;
   bool mIsImportant;
 };
 
 struct CascadeLevel {
   uint8_t mLevel;
   bool mIsImportant;
+  bool mCheckForImportantRules;
   nsRestyleHint mLevelReplacementHint;
 };
 
 static const CascadeLevel gCascadeLevels[] = {
-  { nsStyleSet::eAgentSheet,      false, nsRestyleHint(0) },
-  { nsStyleSet::eUserSheet,       false, nsRestyleHint(0) },
-  { nsStyleSet::ePresHintSheet,   false, nsRestyleHint(0) },
-  { nsStyleSet::eSVGAnimationSheet, false, eRestyle_SVGAnimations },
-  { nsStyleSet::eDocSheet,        false, nsRestyleHint(0) },
-  { nsStyleSet::eScopedDocSheet,  false, nsRestyleHint(0) },
-  { nsStyleSet::eStyleAttrSheet,  false, nsRestyleHint(0) },
-  { nsStyleSet::eOverrideSheet,   false, nsRestyleHint(0) },
-  { nsStyleSet::eAnimationSheet,  false, eRestyle_CSSAnimations },
-  { nsStyleSet::eScopedDocSheet,  true,  nsRestyleHint(0) },
-  { nsStyleSet::eDocSheet,        true,  nsRestyleHint(0) },
-  { nsStyleSet::eStyleAttrSheet,  true,  nsRestyleHint(0) },
-  { nsStyleSet::eOverrideSheet,   true,  nsRestyleHint(0) },
-  { nsStyleSet::eUserSheet,       true,  nsRestyleHint(0) },
-  { nsStyleSet::eAgentSheet,      true,  nsRestyleHint(0) },
-  { nsStyleSet::eTransitionSheet, false, eRestyle_CSSTransitions },
+  { nsStyleSet::eAgentSheet,        false, false, nsRestyleHint(0) },
+  { nsStyleSet::eUserSheet,         false, false, nsRestyleHint(0) },
+  { nsStyleSet::ePresHintSheet,     false, false, nsRestyleHint(0) },
+  { nsStyleSet::eSVGAnimationSheet, false, false, eRestyle_SVGAnimations },
+  { nsStyleSet::eDocSheet,          false, false, nsRestyleHint(0) },
+  { nsStyleSet::eScopedDocSheet,    false, false, nsRestyleHint(0) },
+  { nsStyleSet::eStyleAttrSheet,    false, false, nsRestyleHint(0) },
+  { nsStyleSet::eOverrideSheet,     false, false, nsRestyleHint(0) },
+  { nsStyleSet::eAnimationSheet,    false, false, eRestyle_CSSAnimations },
+  { nsStyleSet::eScopedDocSheet,    true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eDocSheet,          true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eStyleAttrSheet,    true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eOverrideSheet,     true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eUserSheet,         true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eAgentSheet,        true,  false, nsRestyleHint(0) },
+  { nsStyleSet::eTransitionSheet,   false, false, eRestyle_CSSTransitions },
 };
 
 nsRuleNode*
 nsStyleSet::RuleNodeWithReplacement(Element* aElement,
                                     nsRuleNode* aOldRuleNode,
                                     nsCSSPseudoElements::Type aPseudoType,
                                     nsRestyleHint aReplacements)
 {
@@ -1374,19 +1375,22 @@ nsStyleSet::RuleNodeWithReplacement(Elem
   }
 
   nsRuleWalker ruleWalker(mRuleTree, mAuthorStyleDisabled);
   auto rulesIndex = rules.Length();
 
   for (const CascadeLevel *level = gCascadeLevels,
                        *levelEnd = ArrayEnd(gCascadeLevels);
        level != levelEnd; ++level) {
-    ruleWalker.SetLevel(level->mLevel, level->mIsImportant, false);
 
     bool doReplace = level->mLevelReplacementHint & aReplacements;
+
+    ruleWalker.SetLevel(level->mLevel, level->mIsImportant,
+                        level->mCheckForImportantRules && doReplace);
+
     if (doReplace) {
       switch (level->mLevelReplacementHint) {
         case eRestyle_CSSAnimations: {
           // FIXME: This should probably be more similar to what
           // FileRules does; this feels like too much poking into the
           // internals of nsAnimationManager.
           nsAnimationManager* animationManager =
             PresContext()->AnimationManager();

From: L. David Baron <dbaron@dbaron.org>

Add per-property tests for CSS transitions to test the code in nsStyleAnimation.  (Bug 435441, Bug 504652)

diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -132,16 +132,17 @@ _TEST_FILES =	test_acid3_test46.html \
 		test_selectors.html \
 		test_selectors_on_anonymous_content.html \
 		test_shorthand_property_getters.html \
 		test_style_struct_copy_constructors.html \
 		test_system_font_serialization.html \
 		test_transitions_computed_values.html \
 		test_transitions_computed_value_combinations.html \
 		test_transitions.html \
+		test_transitions_per_property.html \
 		test_units_angle.html \
 		test_units_frequency.html \
 		test_units_length.html \
 		test_units_time.html \
 		test_value_computation.html \
 		test_value_storage.html \
 		test_visited_pref.html \
 		css_properties.js \
diff --git a/layout/style/test/test_transitions_per_property.html b/layout/style/test/test_transitions_per_property.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_transitions_per_property.html
@@ -0,0 +1,131 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=435441
+-->
+<head>
+  <title>Test for Bug 435441</title>
+  <script type="application/javascript" src="/MochiKit/packed.js"></script>
+  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="property_database.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
+  <style type="text/css">
+
+  #display > p { margin-top: 0; margin-bottom: 0; }
+
+  </style>
+</head>
+<body>
+<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=435441">Mozilla Bug 435441</a>
+<div id="display">
+
+</div>
+<pre id="test">
+<script type="application/javascript">
+
+/** Test for Bug 435441 **/
+
+// Run tests simultaneously so we don't have to take up too much time.
+SimpleTest.waitForExplicitFinish();
+var gTestsRunning = 0;
+function TestStarted() { ++gTestsRunning; }
+function TestFinished() { if (--gTestsRunning == 0) SimpleTest.finish(); }
+
+// An array of arrays of functions to be called at the outer index number
+// of seconds after the present.
+var gFutureCalls = [];
+
+function add_future_call(index, func)
+{
+    if (!(index in gFutureCalls)) {
+        gFutureCalls[index] = [];
+    }
+    gFutureCalls[index].push(func);
+    TestStarted();
+}
+var gStartTime1, gStartTime2;
+function process_future_calls(index)
+{
+    var calls = gFutureCalls[index];
+    if (!calls)
+        return;
+    var ms_late1 = Date.now() - gStartTime1 - 1000 * index;
+    var ms_late2 = Date.now() - gStartTime2 - 1000 * index;
+    // our real tolerance is 40ms (1% of 4s)
+    if (Math.abs(ms_late1) > 35 || Math.abs(ms_late2) > 35) {
+        todo(false, "Timer for tests at time " + index + "s was fired " +
+                    ms_late2 + "ms - " + ms_late1 + "ms late, so skipping " +
+                    "tests for being outside of tolerable range.");
+    } else {
+        for (var i = 0; i < calls.length; ++i) {
+            calls[i]();
+        }
+    }
+    for (var i = 0; i < calls.length; ++i) {
+        TestFinished();
+    }
+}
+
+var supported_properties = {
+    "margin-top": [ test_length_transition, test_percent_transition ],
+    "margin-right": [ test_length_transition, test_percent_transition ],
+    "margin-bottom": [ test_length_transition, test_percent_transition ],
+    "margin-left": [ test_length_transition, test_percent_transition ],
+    "padding-top": [ test_length_transition, test_percent_transition ],
+    "padding-right": [ test_length_transition, test_percent_transition ],
+    "padding-bottom": [ test_length_transition, test_percent_transition ],
+    "padding-left": [ test_length_transition, test_percent_transition ],
+    "top": [ test_length_transition, test_percent_transition ],
+    "right": [ test_length_transition, test_percent_transition ],
+    "bottom": [ test_length_transition, test_percent_transition ],
+    "left": [ test_length_transition, test_percent_transition ],
+    "outline-width": [ test_length_transition, test_percent_transition ],
+    "width": [ test_length_transition, test_percent_transition ],
+    "min-width": [ test_length_transition, test_percent_transition ],
+    "max-width": [ test_length_transition, test_percent_transition ],
+    "height": [ test_length_transition, test_percent_transition ],
+    "min-height": [ test_length_transition, test_percent_transition ],
+    "max-height": [ test_length_transition, test_percent_transition ],
+    "vertical-align": [ test_length_transition, test_percent_transition ],
+    "letter-spacing": [ test_length_transition, test_percent_transition ],
+    "line-height": [ test_length_transition, test_percent_transition ],
+    "text-indent": [ test_length_transition, test_percent_transition ],
+    "marker-offset": [ test_length_transition, test_percent_transition ],
+    "-moz-column-width": [ test_length_transition, test_percent_transition ],
+    "-moz-column-gap": [ test_length_transition, test_percent_transition ],
+    "stroke-dashoffset": [ test_length_transition, test_percent_transition ],
+    "stroke-width": [ test_length_transition, test_percent_transition ],
+    "outline-offset": [ test_length_transition ],
+    "word-spacing": [ test_length_transition ]
+};
+
+var prop;
+for (prop in supported_properties) {
+    // FIXME: Test that prop is in the property database and that the
+    // entry has at least one test function.
+}
+
+for (prop in gCSSProperties) {
+    // FIXME: If not in supported properties, tests that transitions
+    // don't do anything.
+}
+
+for (prop in supported_properties) {
+    // FIXME: Start actual transition tests.
+}
+
+function test_length_transition() {
+    // FIXME: write me
+}
+
+function test_percent_transition() {
+    // FIXME: write me
+}
+
+// FIXME: REMOVE ME (temporary, to cause test to finish)
+SimpleTest.finish();
+
+</script>
+</pre>
+</body>
+</html>

From: L. David Baron <dbaron@dbaron.org>

Add --skip-top option to make-tree.pl.

diff --git a/tools/rb/make-tree.pl b/tools/rb/make-tree.pl
--- a/tools/rb/make-tree.pl
+++ b/tools/rb/make-tree.pl
@@ -4,33 +4,36 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 use 5.004;
 use strict;
 use Getopt::Long;
 
 $::opt_prune_depth = 0;
+$::opt_skip_top = 0;
 $::opt_subtree_size = 0;
 $::opt_reverse = 0;
 
 # GetOption will create $opt_object & $opt_exclude, so ignore the
 # warning that gets spit out about those vbls.
-GetOptions("object=s", "exclude=s", "comptrs=s", "ignore-balanced", "subtree-size=i", "prune-depth=i",
+GetOptions("object=s", "exclude=s", "comptrs=s", "ignore-balanced",
+           "subtree-size=i", "prune-depth=i", "skip-top=i",
             "collapse-to-method", "collapse-to-class", "old-style", "reverse");
 
 $::opt_object ||
      die qq{
 usage: leak.pl < logfile
   --object <obj>         The address of the object to examine (required)
   --exclude <file>       Exclude routines listed in <file>
   --comptrs <file>       Subtract all the data in the balanced COMPtr log <file>
   --ignore-balanced      Ignore balanced subtrees
   --subtree-size <n>     Print subtrees with more than <n> nodes separately
-  --prune-depth <depth>  Prune the tree to <depth>
+  --prune-depth <depth>  Prune the tree to <depth> (mainly useful with --reverse)
+  --skip-top <depth>     Skip the top <depth> frames of stack (mainly useful with --reverse)
   --collapse-to-method   Aggregate data by method
   --collapse-to-class    Aggregate data by class (subsumes --collapse-to-method)
   --reverse              Reverse call stacks, showing leaves first
   --old-style            Old-style formatting
 };
 
 $::opt_prune_depth = 0 if $::opt_prune_depth < 0;
 $::opt_subtree_size = 0 if $::opt_subtree_size < 0;
@@ -98,19 +101,21 @@ sub read_data($$$) {
           my $cnt = shift(@fields);
      
           # Collect the remaining lines to create a stack trace. We need to
           # filter out the frame numbers so that frames that differ only in
           # their frame number are considered equivalent. However, we need to
           # keep a frame number on each line so that the fix*.py scripts can
           # parse the output. So we set the frame number to 0 for every frame.
           my @stack;
+          my $skip = $::opt_skip_top;
           CALLSITE: while (<$INFILE>) {
               chomp;
               last CALLSITE if (/^$/);
+              next CALLSITE if (--$skip >= 0);
               $_ =~ s/#\d+: /#00: /;    # replace frame number with 0
               $stack[++$#stack] = $_;
           }
      
           # Reverse the remaining fields to produce the call stack, with the
           # oldest frame at the front of the array.
           if (! $::opt_reverse) {
               @stack = reverse(@stack);

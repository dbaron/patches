Enable ExplainLiveExpectedGarbage ifdef DEBUG_dbaron.

diff --git a/xpcom/base/nsCycleCollector.cpp b/xpcom/base/nsCycleCollector.cpp
--- a/xpcom/base/nsCycleCollector.cpp
+++ b/xpcom/base/nsCycleCollector.cpp
@@ -155,6 +155,10 @@
 #define SHUTDOWN_COLLECTIONS(params) DEFAULT_SHUTDOWN_COLLECTIONS
 #endif
 
+#if defined(DEBUG_CC) || defined(DEBUG_dbaron)
+#define DEBUG_CC_EXPLAIN
+#endif
+
 // Various parameters of this collector can be tuned using environment
 // variables.
 
@@ -847,6 +851,8 @@ struct nsCycleCollector
     FILE *mPtrLog;
 
     void MaybeDrawGraphs(GCGraph &graph);
+#endif
+#ifdef DEBUG_CC_EXPLAIN
     void ExplainLiveExpectedGarbage();
     void ShouldBeFreed(nsISupports *n);
     void WasFreed(nsISupports *n);
@@ -2040,7 +2046,7 @@ nsCycleCollector::Shutdown()
     mParams.mScanDelay = 0;
     Collect(SHUTDOWN_COLLECTIONS(mParams));
 
-#ifdef DEBUG_CC
+#ifdef DEBUG_CC_EXPLAIN
     CollectPurple();
     if (mBuf.GetSize() != 0) {
         printf("Might have been able to release more cycles if the cycle collector would "
@@ -2052,7 +2058,7 @@ nsCycleCollector::Shutdown()
     mParams.mDoNothing = PR_TRUE;
 }
 
-#ifdef DEBUG_CC
+#ifdef DEBUG_CC_EXPLAIN
 
 PR_STATIC_CALLBACK(PLDHashOperator)
 AddExpectedGarbage(nsVoidPtrHashKey *p, void *arg)
@@ -2219,7 +2225,7 @@ void
 void
 nsCycleCollector_DEBUG_shouldBeFreed(nsISupports *n)
 {
-#ifdef DEBUG_CC
+#ifdef DEBUG_CC_EXPLAIN
     if (sCollector)
         sCollector->ShouldBeFreed(n);
 #endif
@@ -2228,7 +2234,7 @@ void
 void
 nsCycleCollector_DEBUG_wasFreed(nsISupports *n)
 {
-#ifdef DEBUG_CC
+#ifdef DEBUG_CC_EXPLAIN
     if (sCollector)
         sCollector->WasFreed(n);
 #endif

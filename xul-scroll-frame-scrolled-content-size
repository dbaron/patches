From: L. David Baron <dbaron@dbaron.org>

Use correct scrolled content size in nsXULScrollFrame when we allow scrolling up or to the right.  (Bug 508816)

diff --git a/layout/generic/nsGfxScrollFrame.cpp b/layout/generic/nsGfxScrollFrame.cpp
--- a/layout/generic/nsGfxScrollFrame.cpp
+++ b/layout/generic/nsGfxScrollFrame.cpp
@@ -2851,17 +2851,17 @@ nsXULScrollFrame::Layout(nsBoxLayoutStat
   
   // now look at the content area and see if we need scrollbars or not
   PRBool needsLayout = PR_FALSE;
 
   // if we have 'auto' scrollbars look at the vertical case
   if (styles.mVertical != NS_STYLE_OVERFLOW_SCROLL) {
     // These are only good until the call to LayoutScrollArea.
     nsRect scrolledRect = mInner.GetScrolledRect();
-    nsSize scrolledContentSize(scrolledRect.XMost(), scrolledRect.YMost());
+    nsSize scrolledContentSize(scrolledRect.Size());
 
     // There are two cases to consider
       if (scrolledContentSize.height <= mInner.mScrollPort.height
           || styles.mVertical != NS_STYLE_OVERFLOW_AUTO) {
         if (mInner.mHasVerticalScrollbar) {
           // We left room for the vertical scrollbar, but it's not needed;
           // remove it.
           RemoveVerticalScrollbar(aState, scrollbarRight);
@@ -2885,17 +2885,17 @@ nsXULScrollFrame::Layout(nsBoxLayoutStat
   }
 
 
   // if scrollbars are auto look at the horizontal case
   if (styles.mHorizontal != NS_STYLE_OVERFLOW_SCROLL)
   {
     // These are only good until the call to LayoutScrollArea.
     nsRect scrolledRect = mInner.GetScrolledRect();
-    nsSize scrolledContentSize(scrolledRect.XMost(), scrolledRect.YMost());
+    nsSize scrolledContentSize(scrolledRect.Size());
 
     // if the child is wider that the scroll area
     // and we don't have a scrollbar add one.
     if (scrolledContentSize.width > mInner.mScrollPort.width
         && styles.mHorizontal == NS_STYLE_OVERFLOW_AUTO) {
 
       if (!mInner.mHasHorizontalScrollbar) {
            // no scrollbar? 

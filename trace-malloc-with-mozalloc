From: L. David Baron <dbaron@dbaron.org>

Make trace-malloc work again following mozalloc landing.  (Bug 576776)

diff --git a/tools/trace-malloc/lib/nsTraceMalloc.c b/tools/trace-malloc/lib/nsTraceMalloc.c
--- a/tools/trace-malloc/lib/nsTraceMalloc.c
+++ b/tools/trace-malloc/lib/nsTraceMalloc.c
@@ -1125,16 +1125,22 @@ ShutdownHooker(void)
  * We can't use glibc's malloc hooks because they can't be used in a
  * threadsafe manner.  They require unsetting the hooks to call into the
  * original malloc implementation, and then resetting them when the
  * original implementation returns.  If another thread calls the same
  * allocation function while the hooks are unset, we have no chance to
  * intercept the call.
  */
 
+/*
+ * We need to redefine |malloc|, etc. here; without this, we'll end up
+ * redefining |moz_malloc|, etc. instead.
+ */
+#include "mozilla/mozalloc_undef_macro_wrappers.h"
+
 NS_EXTERNAL_VIS_(__ptr_t)
 malloc(size_t size)
 {
     PRUint32 start, end;
     __ptr_t ptr;
     tm_thread *t;
 
     if (!tracing_enabled || !PR_Initialized() ||
@@ -1280,16 +1286,18 @@ free(__ptr_t ptr)
 }
 
 NS_EXTERNAL_VIS_(void)
 cfree(void *ptr)
 {
     free(ptr);
 }
 
+#include "mozilla/mozalloc_macro_wrappers.h"
+
 #define StartupHooker()                 PR_BEGIN_MACRO PR_END_MACRO
 #define ShutdownHooker()                PR_BEGIN_MACRO PR_END_MACRO
 
 #elif defined(XP_WIN32)
 
 /* See nsWinTraceMalloc.cpp. */
 
 #endif

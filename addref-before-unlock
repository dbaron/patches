From: L. David Baron <dbaron@dbaron.org>

Move AddRef to before the unlock.  (Bug 650674, patch 2)  r=bsmedberg

diff --git a/xpcom/proxy/src/nsProxyEvent.cpp b/xpcom/proxy/src/nsProxyEvent.cpp
--- a/xpcom/proxy/src/nsProxyEvent.cpp
+++ b/xpcom/proxy/src/nsProxyEvent.cpp
@@ -470,25 +470,27 @@ nsProxyObject::LockedFind(REFNSIID aIID,
             return rv;
         }
     }
 
     // Now that we're locked again, check for races by repeating the
     // linked-list check.
     for (peo = mFirst; peo; peo = peo->mNext) {
         if (peo->GetClass()->GetProxiedIID().Equals(aIID)) {
+            // Best to AddRef for our caller before unlocking.
+            peo->LockedAddRef();
+
             {
                 // Deleting an nsProxyEventObject can call Release on an
                 // nsProxyObject, which can only happen when not holding
                 // the lock.
                 MutexAutoUnlock unlock(pom->GetLock());
                 delete newpeo;
             }
             *aResult = static_cast<nsISupports*>(peo->mXPTCStub);
-            peo->LockedAddRef();
             return NS_OK;
         }
     }
 
     newpeo->mNext = mFirst;
     mFirst = newpeo;
 
     newpeo->LockedAddRef();

Make reftest check its invariants regarding the failure timeout, so we can see if any intermittent failures are due to such harness bugs.  (Bug 477409)  r=jruderman

diff --git a/layout/tools/reftest/reftest.js b/layout/tools/reftest/reftest.js
--- a/layout/tools/reftest/reftest.js
+++ b/layout/tools/reftest/reftest.js
@@ -84,17 +84,17 @@ var gTestResults = {
   KnownFail : 0,
   AssertionKnown: 0,
   Random : 0,
   Skip: 0,
 };
 var gTotalTests = 0;
 var gState;
 var gCurrentURL;
-var gFailureTimeout;
+var gFailureTimeout = null;
 var gFailureReason;
 var gServer;
 var gCount = 0;
 var gAssertionCount = 0;
 
 var gIOService;
 var gDebug;
 var gWindowUtils;
@@ -463,16 +463,21 @@ function StartCurrentTest()
             " (" + Math.floor(100 * (currentTest / gTotalTests)) + "%)";
         StartCurrentURI(1);
     }
 }
 
 function StartCurrentURI(aState)
 {
     gCurrentTestStartTime = Date.now();
+    if (gFailureTimeout != null) {
+        dump("REFTEST TEST-UNEXPECTED-FAIL | " + 
+             "| program error managing timeouts\n");
+        ++gTestResults.Exception;
+    }
     gFailureTimeout = setTimeout(LoadFailed, LOAD_FAILURE_TIMEOUT);
     gFailureReason = "timed out waiting for onload to fire";
 
     gState = aState;
     gCurrentURL = gURLs[0]["url" + aState].spec;
 
     if (gURICanvases[gCurrentURL] && gURLs[0].expected != EXPECTED_LOAD &&
         gURLs[0].maxAsserts == 0) {
@@ -782,16 +787,17 @@ function DocumentLoaded()
     var currentTestRunTime = Date.now() - gCurrentTestStartTime;
     if (currentTestRunTime > gSlowestTestTime) {
         gSlowestTestTime = currentTestRunTime;
         gSlowestTestURL  = gCurrentURL;
     }
 
     clearTimeout(gFailureTimeout);
     gFailureReason = null;
+    gFailureTimeout = null;
 
     if (gURLs[0].expected == EXPECTED_LOAD) {
         ++gTestResults.LoadOnly;
         dump("REFTEST TEST-PASS | " + gURLs[0].prettyPath + " | (LOAD ONLY)\n");
         FinishTestItem();
         return;
     }
 
@@ -883,16 +889,17 @@ function DocumentLoaded()
             break;
         default:
             throw "Unexpected state.";
     }
 }
 
 function LoadFailed()
 {
+    gFailureTimeout = null;
     ++gTestResults.FailedLoad;
     dump("REFTEST TEST-UNEXPECTED-FAIL | " +
          gURLs[0]["url" + gState].spec + " | " + gFailureReason + "\n");
     FinishTestItem();
 }
 
 function FinishTestItem()
 {

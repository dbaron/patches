From: L. David Baron <dbaron@dbaron.org>

Bug 1082899 patch 3 - Add flag for marking pseudo-classes as UA-sheet only.

diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -5399,16 +5399,25 @@ CSSParserImpl::ParsePseudoSelector(int32
       pseudoElementType < nsCSSPseudoElements::ePseudo_PseudoElementCount &&
       nsCSSPseudoElements::PseudoElementIsChromeOnly(pseudoElementType)) {
     // This pseudo-element is not exposed to content.
     REPORT_UNEXPECTED_TOKEN(PEPseudoSelUnknown);
     UngetToken();
     return eSelectorParsingStatus_Error;
   }
 
+  if (!mUnsafeRulesEnabled &&
+      pseudoClassType != nsCSSPseudoClasses::ePseudoClass_NotPseudoClass &&
+      nsCSSPseudoClasses::PseudoClassIsUASheetOnly(pseudoClassType)) {
+    // This pseudo-class is not exposed to content.
+    REPORT_UNEXPECTED_TOKEN(PEPseudoSelUnknown);
+    UngetToken();
+    return eSelectorParsingStatus_Error;
+  }
+
   // We currently allow :-moz-placeholder and ::-moz-placeholder. We have to
   // be a bit stricter regarding the pseudo-element parsing rules.
   if (pseudoElementType == nsCSSPseudoElements::ePseudo_mozPlaceholder &&
       pseudoClassType == nsCSSPseudoClasses::ePseudoClass_mozPlaceholder) {
     if (parsingPseudoElement) {
       pseudoClassType = nsCSSPseudoClasses::ePseudoClass_NotPseudoClass;
     } else {
       pseudoElementType = nsCSSPseudoElements::ePseudo_NotPseudoElement;
diff --git a/layout/style/nsCSSPseudoClasses.h b/layout/style/nsCSSPseudoClasses.h
--- a/layout/style/nsCSSPseudoClasses.h
+++ b/layout/style/nsCSSPseudoClasses.h
@@ -5,16 +5,19 @@
 
 /* atom list for CSS pseudo-classes */
 
 #ifndef nsCSSPseudoClasses_h___
 #define nsCSSPseudoClasses_h___
 
 #include "nsStringFwd.h"
 
+// This pseudo-element is accepted only in UA style sheets.
+#define CSS_PSEUDO_CLASS_UA_SHEET_ONLY                 (1<<0)
+
 class nsIAtom;
 
 class nsCSSPseudoClasses {
 public:
 
   static void AddRefAtoms();
 
   enum Type {
@@ -30,16 +33,20 @@ public:
   static Type GetPseudoType(nsIAtom* aAtom);
   static bool HasStringArg(Type aType);
   static bool HasNthPairArg(Type aType);
   static bool HasSelectorListArg(Type aType) {
     return aType == ePseudoClass_any;
   }
   static bool IsUserActionPseudoClass(Type aType);
 
+  static bool PseudoClassIsUASheetOnly(Type aType) {
+    return PseudoClassHasFlags(aType, CSS_PSEUDO_CLASS_UA_SHEET_ONLY);
+  }
+
   // Should only be used on types other than Count and NotPseudoClass
   static void PseudoTypeToString(Type aType, nsAString& aString);
 
 private:
   static uint32_t FlagsForPseudoClass(const Type aType);
 
   // Does the given pseudo-class have all of the flags given?
   static bool PseudoClassHasFlags(const Type aType, uint32_t aFlags)
